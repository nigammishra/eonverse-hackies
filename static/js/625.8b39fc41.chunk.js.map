{"version":3,"file":"static/js/625.8b39fc41.chunk.js","mappings":"mHAAA,SAASA,EAAcC,EAAKC,IACG,IAAvBD,EAAIE,QAAQD,IACZD,EAAIG,KAAKF,EACjB,CACA,SAASG,EAAWJ,EAAKC,GACrB,MAAMI,EAAQL,EAAIE,QAAQD,GACtBI,GAAS,GACTL,EAAIM,OAAOD,EAAO,EAC1B,C,kBCPA,MAAME,EAAQC,GAAQA,ECCtB,IAAIC,EAAUF,EACVG,EAAYH,ECHhB,MAAMI,GACc,EADdA,GAEe,ECDrB,SAASC,EAAKC,GACV,IAAIC,EACJ,MAAO,UACYC,IAAXD,IACAA,EAASD,KACNC,EAEf,CCKA,MAAME,EAAWA,CAACC,EAAMC,EAAIC,KACxB,MAAMC,EAAmBF,EAAKD,EAC9B,OAA4B,IAArBG,EAAyB,GAAKD,EAAQF,GAAQG,CAAgB,ECbzE,MAAMC,EACFC,WAAAA,GACIC,KAAKC,cAAgB,EACzB,CACAC,GAAAA,CAAIC,GAEA,OADA3B,EAAcwB,KAAKC,cAAeE,GAC3B,IAAMtB,EAAWmB,KAAKC,cAAeE,EAChD,CACAC,MAAAA,CAAOC,EAAGC,EAAGC,GACT,MAAMC,EAAmBR,KAAKC,cAAcQ,OAC5C,GAAKD,EAEL,GAAyB,IAArBA,EAIAR,KAAKC,cAAc,GAAGI,EAAGC,EAAGC,QAG5B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAkBE,IAAK,CAKvC,MAAMP,EAAUH,KAAKC,cAAcS,GACnCP,GAAWA,EAAQE,EAAGC,EAAGC,EAC7B,CAER,CACAI,OAAAA,GACI,OAAOX,KAAKC,cAAcQ,MAC9B,CACAG,KAAAA,GACIZ,KAAKC,cAAcQ,OAAS,CAChC,EC7BJ,MAAMI,EAAyBC,GAAsB,IAAVA,EAErCC,EAAyBC,GAAiBA,EAAe,ICH/D,SAASC,EAAkBC,EAAUC,GACjC,OAAOA,EAAgBD,GAAY,IAAOC,GAAiB,CAC/D,CCRe,IAAIC,ICEnB,SAASC,EAA8BC,GACnC,GAAqB,qBAAVC,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAIC,IAO3B,OAAO,IAAIF,OANuB,WAI9B,OAAOD,KAAiBI,UAC5B,GAC4C,CAMxCC,IAAKA,CAACC,EAASC,IACC,WAARA,EACOP,GAINE,EAAeM,IAAID,IACpBL,EAAeO,IAAIF,EAAKP,EAAiBO,IAEtCL,EAAeG,IAAIE,KAGtC,CCnCA,SAASG,EAAoBC,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEC,KACjB,CCJA,SAASC,EAAcC,GACnB,MAAMC,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJkB,OAAlBD,QAA4C,IAAlBA,GAAoCA,EAAcE,OAAOC,SAAQ,CAAC3C,EAAOiC,KAC/FQ,EAAM,GAAGR,GAAOjC,EAAM+B,MACtBU,EAAM,GAAGR,GAAOjC,EAAM4C,aAAa,IAEhCH,CACX,CACA,SAASI,EAAwBC,EAAOC,EAAYC,EAAQR,GAIxD,GAA0B,oBAAfO,EAA2B,CAClC,MAAOE,EAAS3B,GAAYiB,EAAcC,GAC1CO,EAAaA,OAAsBnD,IAAXoD,EAAuBA,EAASF,EAAME,OAAQC,EAAS3B,EACnF,CAaA,GAR0B,kBAAfyB,IACPA,EAAaD,EAAMI,UAAYJ,EAAMI,SAASH,IAOxB,oBAAfA,EAA2B,CAClC,MAAOE,EAAS3B,GAAYiB,EAAcC,GAC1CO,EAAaA,OAAsBnD,IAAXoD,EAAuBA,EAASF,EAAME,OAAQC,EAAS3B,EACnF,CACA,OAAOyB,CACX,CC/BA,SAASI,EAAeX,EAAeO,EAAYC,GAC/C,MAAMF,EAAQN,EAAcY,WAC5B,OAAOP,EAAwBC,EAAOC,OAAuBnD,IAAXoD,EAAuBA,EAASF,EAAME,OAAQR,EACpG,CCHA,MAAMa,EAAyC5D,GAAK,SAAgCG,IAA1B0D,OAAOC,iBCAjE,MAAMC,EACFrD,WAAAA,CAAYsD,GAERrD,KAAKsD,KAAO,IAAMtD,KAAKuD,OAAO,QAC9BvD,KAAKqD,WAAaA,EAAWG,OAAOC,QACxC,CACA,YAAIC,GAEA,OAAOC,QAAQC,IAAI5D,KAAKqD,WAAWQ,KAAKC,GAAc,aAAcA,EAAYA,EAAUJ,SAAWI,IACzG,CAIAC,MAAAA,CAAOC,GACH,OAAOhE,KAAKqD,WAAW,GAAGW,EAC9B,CACAC,MAAAA,CAAOD,EAAUE,GACb,IAAK,IAAIxD,EAAI,EAAGA,EAAIV,KAAKqD,WAAW5C,OAAQC,IACxCV,KAAKqD,WAAW3C,GAAGsD,GAAYE,CAEvC,CACAC,cAAAA,CAAeC,EAAUC,GACrB,MAAMpE,EAAgBD,KAAKqD,WAAWQ,KAAKC,GACnCb,KAA4Ba,EAAUK,eAC/BL,EAAUK,eAAeC,GAEP,oBAAbC,EACLA,EAASP,QADf,IAIT,MAAO,KACH7D,EAAcsC,SAAQ,CAAC+B,EAAQ5D,KAC3B4D,GAAUA,IACVtE,KAAKqD,WAAW3C,GAAG4C,MAAM,GAC3B,CAEV,CACA,QAAIiB,GACA,OAAOvE,KAAK+D,OAAO,OACvB,CACA,QAAIQ,CAAKA,GACLvE,KAAKiE,OAAO,OAAQM,EACxB,CACA,SAAIC,GACA,OAAOxE,KAAK+D,OAAO,QACvB,CACA,SAAIS,CAAMA,GACNxE,KAAKiE,OAAO,QAASO,EACzB,CACA,aAAIC,GACA,OAAOzE,KAAK+D,OAAO,YACvB,CACA,YAAIW,GACA,IAAIC,EAAM,EACV,IAAK,IAAIjE,EAAI,EAAGA,EAAIV,KAAKqD,WAAW5C,OAAQC,IACxCiE,EAAMC,KAAKD,IAAIA,EAAK3E,KAAKqD,WAAW3C,GAAGgE,UAE3C,OAAOC,CACX,CACApB,MAAAA,CAAOsB,GACH7E,KAAKqD,WAAWd,SAASuC,GAAaA,EAASD,MACnD,CACAE,OAAAA,GACI/E,KAAKuD,OAAO,UAChB,CACAyB,IAAAA,GACIhF,KAAKuD,OAAO,OAChB,CACA0B,KAAAA,GACIjF,KAAKuD,OAAO,QAChB,CACAe,MAAAA,GACItE,KAAKuD,OAAO,SAChB,CACA2B,QAAAA,GACIlF,KAAKuD,OAAO,WAChB,ECxEJ,MAAM4B,UAA8B/B,EAChCgC,IAAAA,CAAKC,EAAWC,GACZ,OAAO3B,QAAQC,IAAI5D,KAAKqD,YAAY+B,KAAKC,GAAWE,MAAMD,EAC9D,ECTJ,SAASE,EAAmBC,EAAY5D,GACpC,OAAO4D,EACDA,EAAW5D,IACT4D,EAAoB,SACpBA,OACFjG,CACV,CCFA,MAAMkG,EAAuB,IAC7B,SAASC,EAAsBC,GAC3B,IAAIlB,EAAW,EAEf,IAAIrC,EAAQuD,EAAUC,KAAKnB,GAC3B,MAAQrC,EAAMyD,MAAQpB,EAAWgB,GAC7BhB,GAHa,GAIbrC,EAAQuD,EAAUC,KAAKnB,GAE3B,OAAOA,GAAYgB,EAAuBK,IAAWrB,CACzD,CCdA,SAASsB,EAAYC,GACjB,MAAuB,oBAATA,CAClB,CCFA,SAAS9B,EAAeL,EAAWM,GAC/BN,EAAUM,SAAWA,EACrBN,EAAUoC,SAAW,IACzB,CCHA,MAAMC,EAAsBC,GAAWC,MAAMC,QAAQF,IAAgC,kBAAdA,EAAO,GCIxEG,EAAgB,CAClBC,kBAAchH,GCFlB,SAASiH,EAAanH,EAAUoH,GAC5B,MAAMC,EAAWtH,EAAKC,GACtB,MAAO,KAAQ,IAAIsH,EAAI,OAA8C,QAAtCA,EAAKL,EAAcG,UAAkC,IAAPE,EAAgBA,EAAKD,GAAU,CAChH,CCJA,MAAME,EAAqCJ,GAAa,KACpD,IACIK,SACKC,cAAc,OACdC,QAAQ,CAAEC,QAAS,GAAK,CAAEb,OAAQ,gBAC3C,CACA,MAAOc,GACH,OAAO,CACX,CACA,OAAO,CAAI,GACZ,gBCVGC,EAAuB,SAACf,EAAQ1B,GAEjC,IADL0C,EAAU1F,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,GAEL2F,EAAS,GACb,MAAMC,EAAY1C,KAAKD,IAAIC,KAAK2C,MAAM7C,EAAW0C,GAAa,GAC9D,IAAK,IAAI1G,EAAI,EAAGA,EAAI4G,EAAW5G,IAC3B2G,GAAUjB,EAAO3G,EAAS,EAAG6H,EAAY,EAAG5G,IAAM,KAEtD,MAAO,UAAU2G,EAAOG,UAAU,EAAGH,EAAO5G,OAAS,KACzD,ECPA,SAASgH,EAAuBrB,GAC5B,OAAO3C,QAA2B,oBAAX2C,GAAyBS,MAC3CT,GACkB,kBAAXA,IACHA,KAAUsB,GAAwBb,MACvCV,EAAmBC,IAClBC,MAAMC,QAAQF,IAAWA,EAAOuB,MAAMF,GAC/C,CACA,MAAMG,EAAsBC,IAAA,IAAExH,EAAGC,EAAGC,EAAGuH,GAAED,EAAA,MAAK,gBAAgBxH,MAAMC,MAAMC,MAAMuH,IAAI,EAC9EJ,EAAuB,CACzBK,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAsBR,EAAoB,CAAC,EAAG,IAAM,IAAM,IAC1DS,QAAuBT,EAAoB,CAAC,IAAM,EAAG,EAAG,MACxDU,OAAsBV,EAAoB,CAAC,IAAM,IAAM,KAAO,MAC9DW,QAAuBX,EAAoB,CAAC,IAAM,KAAM,IAAM,OAElE,SAASY,EAAwBpC,EAAQ1B,GACrC,OAAK0B,EAGsB,oBAAXA,GAAyBS,IAC9BM,EAAqBf,EAAQ1B,GAE/ByB,EAAmBC,GACjBwB,EAAoBxB,GAEtBC,MAAMC,QAAQF,GACZA,EAAOvC,KAAK4E,GAAkBD,EAAwBC,EAAe/D,IACxEgD,EAAqBQ,UAGlBR,EAAqBtB,QAb5B,CAeR,CCzCA,MAAMsC,EAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cCNEC,EAAc,CAChB/I,MAAO,KACPgJ,qBAAsB,MCG1B,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAM5G,EAAQ,CACV6G,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAmBA,IAAOL,GAAe,EACzCM,EAAQZ,EAAWa,QAAO,CAACC,EAAK3H,KAClC2H,EAAI3H,GCbZ,SAA0BmH,EAAcS,GAKpC,IAAIC,EAAY,IAAItI,IAChBuI,EAAY,IAAIvI,IAKhBgI,GAAe,EACfQ,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QACxB,IAAIC,EAAkB,CAClBb,MAAO,EACPC,UAAW,EACXC,cAAc,GAEdY,EAAW,EACf,SAASC,EAAgB3K,GACjBuK,EAAY/H,IAAIxC,KAChB4K,EAAKC,SAAS7K,GACd0J,KAEJgB,IACA1K,EAASyK,EACb,CACA,MAAMG,EAAO,CAITC,SAAU,SAAC7K,GACP,MACM8K,EAFuC1I,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,IACN0H,EACLM,EAAYC,EAK9C,OAP0BjI,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,IAItBmI,EAAY3J,IAAIZ,GACf8K,EAAMtI,IAAIxC,IACX8K,EAAMlK,IAAIZ,GACPA,CACX,EAIAgF,OAAShF,IACLqK,EAAUU,OAAO/K,GACjBuK,EAAYQ,OAAO/K,EAAS,EAKhCgL,QAAUC,IACNR,EAAkBQ,EAMdnB,EACAQ,GAAiB,GAGrBR,GAAe,GACdM,EAAWC,GAAa,CAACA,EAAWD,GAErCA,EAAUnH,QAAQ0H,GAIdR,GAAYd,EAAY/I,OACxB+I,EAAY/I,MAAM4K,UAAUf,GAAU7K,KAAKoL,GAE/CA,EAAW,EAGXN,EAAU9I,QACVwI,GAAe,EACXQ,IACAA,GAAiB,EACjBM,EAAKI,QAAQC,IACjB,GAGR,OAAOL,CACX,CD1EmBO,CAAiBpB,EAAkBN,EAAiBlH,OAAMrC,GAC9DgK,IACR,CAAC,IACE,KAAEkB,EAAI,iBAAEC,EAAgB,OAAEC,EAAM,UAAEC,EAAS,OAAEC,EAAM,WAAEC,GAAezB,EACpE0B,EAAeA,KACjB,MAAM7B,EAAY/J,EACZiD,EAAM8G,UACN8B,YAAYC,MAClBlC,GAAe,EACV5J,IACDiD,EAAM6G,MAAQD,EACR,IAAO,GACPrE,KAAKD,IAAIC,KAAKuG,IAAIhC,EAAY9G,EAAM8G,UAvBnC,IAuB2D,IAEtE9G,EAAM8G,UAAYA,EAClB9G,EAAM+G,cAAe,EAErBsB,EAAKJ,QAAQjI,GACbsI,EAAiBL,QAAQjI,GACzBuI,EAAON,QAAQjI,GACfwI,EAAUP,QAAQjI,GAClByI,EAAOR,QAAQjI,GACf0I,EAAWT,QAAQjI,GACnBA,EAAM+G,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBkC,GACtB,EASEb,EAAWzB,EAAWa,QAAO,CAACC,EAAK3H,KACrC,MAAMqI,EAAOZ,EAAMzH,GAMnB,OALA2H,EAAI3H,GAAO,SAACyI,GAAkD,IAAzCc,EAAS1J,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GAAU2J,EAAS3J,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GAG7C,OAFKsH,IATTA,GAAe,EACfC,GAAoB,EACf5G,EAAM+G,cACPN,EAAkBkC,IAQXd,EAAKC,SAASG,EAASc,EAAWC,EAC7C,EACO7B,CAAG,GACX,CAAC,GAMJ,MAAO,CAAEW,WAAU7F,OALHgG,IACZ,IAAK,IAAI5J,EAAI,EAAGA,EAAIgI,EAAWjI,OAAQC,IACnC4I,EAAMZ,EAAWhI,IAAI4D,OAAOgG,EAChC,EAEuBjI,QAAOiH,QACtC,CE/DA,MAAQa,SAAUmB,EAAOhH,OAAQiH,EAAalJ,MAAOkI,EAAWjB,MAAOkC,GAAgC3C,EAAqD,qBAA1B4C,sBAAwCA,sBAAwBzM,GAAM,ICDhMmL,SAAUuB,EAAWpH,OAAQqH,GACrB9C,EAAoB+C,gBAAgB,GCApD,IAAIV,EACJ,SAASW,IACLX,OAAM1L,CACV,CASA,MAAM+E,EAAO,CACT2G,IAAKA,UACW1L,IAAR0L,GACA3G,EAAKxC,IAAIwI,EAAUnB,cAAgBhK,EAC7BmL,EAAUpB,UACV8B,YAAYC,OAEfA,GAEXnJ,IAAM+J,IACFZ,EAAMY,EACNF,eAAeC,EAAU,GC1B3BE,EAAa,CACfC,GAAG,EACHC,GAAG,GAEP,SAASC,IACL,OAAOH,EAAWC,GAAKD,EAAWE,CACtC,CCJA,SAASE,EAAaC,EAAmBC,GACrC,MAAMC,ECHV,SAAyBF,EAAmBG,EAAOC,GAC/C,IAAI5F,EACJ,GAAIwF,aAA6BK,YAC7B,MAAO,CAACL,GAEP,GAAiC,kBAAtBA,EAAgC,CAC5C,IAAIM,EAAO5F,SACPyF,IAMAG,EAAOH,EAAM1J,SAEjB,MAAMyJ,EAAqH,QAAzG1F,EAAuB,OAAlB4F,QAA4C,IAAlBA,OAA2B,EAASA,EAAcJ,UAAuC,IAAPxF,EAAgBA,EAAK8F,EAAKC,iBAAiBP,GAC9K,OAAOE,EAAWjG,MAAM3G,KAAK4M,GAAY,EAC7C,CACA,OAAOjG,MAAM3G,KAAK0M,EACtB,CDhBqBQ,CAAgBR,GAC3BS,EAAyB,IAAIC,gBAOnC,MAAO,CAACR,EANa,CACjBS,SAAS,KACNV,EACHW,OAAQH,EAAuBG,QAEpB1I,IAAMuI,EAAuBI,QAEhD,CETA,SAASC,EAAaC,GAClB,QAA+B,UAAtBA,EAAMC,aAA2BlB,IAC9C,CCLA,SAASmB,GAAeF,EAAOG,GAC3B,MAAMC,EAAa,GAAGD,kBACtB,GAAIH,EAAMK,kBAAkBC,SACxBF,KAAcJ,EAAMK,aACAhO,IAApB2N,EAAMO,UACN,IACIP,EAAMK,OAAOD,GAAYJ,EAAMO,UACnC,CACA,MAAOxG,GAAK,CAEpB,CCHA,MAAMyG,GAAgBA,CAACC,EAAQC,MACtBA,IAGID,IAAWC,GAITF,GAAcC,EAAQC,EAAMC,gBCfrCC,GAAoBZ,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAMa,QAAuBb,EAAMa,QAAU,GAWhC,IAApBb,EAAMc,UCbfC,GAAoB,IAAI9M,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLJ,MAAM+M,GAAa,IAAIrE,QCKvB,SAASsE,GAAa9O,GAClB,OAAQ6N,IACc,UAAdA,EAAMtL,KAEVvC,EAAS6N,EAAM,CAEvB,CACA,SAASkB,GAAiBb,EAAQvH,GAC9BuH,EAAOc,cAAc,IAAIC,aAAa,UAAYtI,EAAM,CAAEgI,WAAW,EAAMO,SAAS,IACxF,CCDA,SAASC,GAAkBtB,GACvB,OAAOY,GAAiBZ,KAAWjB,GACvC,CAoBA,SAASwC,GAAMC,EAAkBC,GAA4B,IAAdvC,EAAO3K,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtD,MAAOmN,EAASC,EAAcC,GAAgB5C,EAAawC,EAAkBtC,GACvE2C,EAAcC,IAChB,MAAMzB,EAASyB,EAAWC,cAC1B,IAAK1B,IAAWiB,GAAkBQ,IAAed,GAAWrM,IAAI0L,GAC5D,OACJW,GAAWjO,IAAIsN,GACfH,GAAe4B,EAAY,OAC3B,MAAME,EAAaP,EAAapB,EAAQyB,GAClCG,EAAeA,CAACC,EAAUC,KAC5B9B,EAAO+B,oBAAoB,YAAaC,GACxChC,EAAO+B,oBAAoB,gBAAiBE,GAC5CpC,GAAegC,EAAU,WACpBZ,GAAkBY,IAAclB,GAAWrM,IAAI0L,KAGpDW,GAAW9D,OAAOmD,GACQ,oBAAf2B,GACPA,EAAWE,EAAU,CAAEC,YAC3B,EAEEE,EAAeE,IACjB,MAAMC,IAAaD,EAAQE,YA0CjBzC,EAxCSuC,EAwCFG,EAxCWrC,aAAkBC,QACpCD,EAAOsC,wBACP,CACEC,KAAM,EACNC,IAAK,EACLC,MAAO/M,OAAOgN,WACdC,OAAQjN,OAAOkN,aAmC3BjD,EAAMkD,QAAUR,EAAKE,MACzB5C,EAAMkD,QAAUR,EAAKI,OACrB9C,EAAMmD,QAAUT,EAAKG,KACrB7C,EAAMmD,QAAUT,EAAKM,QAJ7B,IAAsBhD,EAAO0C,EA/BbT,EAAaM,GADbC,MAIwBnC,aAAkBC,UACtCE,GAAcH,EAAQkC,EAAQlC,SACtC,EAEEiC,EAAmBc,IACrBnB,EAAamB,GAAa,EAAM,EAEpC/C,EAAOgD,iBAAiB,YAAahB,EAAaV,GAClDtB,EAAOgD,iBAAiB,gBAAiBf,EAAiBX,GAC1DtB,EAAOgD,iBAAiB,qBAAsBf,EAAiBX,EAAa,EAiBhF,OAfAD,EAAQtM,SAASiL,IAEb,IAAIiD,GAA8B,EH7E1C,IAAqCC,GG4E7BlD,EAASnB,EAAQsE,gBAAkBzN,OAASsK,aAEtBoD,cAClBH,GAA8B,EH/ELC,EGgFQlD,EH/EjCU,GAAkBpM,IAAI4O,EAAQG,WACZ,IAAtBH,EAAQI,UG+EoC,OAApCtD,EAAOuD,aAAa,cACpBvD,EAAOsD,SAAW,IAG1BtD,EAAOgD,iBAAiB,cAAexB,EAAYF,GAC/C2B,GACAjD,EAAOgD,iBAAiB,SAAUrD,GD/ElB6D,EAACC,EAAYnC,KACrC,MAAM4B,EAAUO,EAAW/B,cAC3B,IAAKwB,EACD,OACJ,MAAMQ,EAAgB9C,IAAa,KAC/B,GAAID,GAAWrM,IAAI4O,GACf,OACJrC,GAAiBqC,EAAS,QAC1B,MAAMS,EAAc/C,IAAa,KAC7BC,GAAiBqC,EAAS,KAAK,IAGnCA,EAAQF,iBAAiB,QAASW,EAAarC,GAC/C4B,EAAQF,iBAAiB,QAFNY,IAAM/C,GAAiBqC,EAAS,WAEN5B,EAAa,IAE9D4B,EAAQF,iBAAiB,UAAWU,EAAepC,GAInD4B,EAAQF,iBAAiB,QAAQ,IAAME,EAAQnB,oBAAoB,UAAW2B,IAAgBpC,EAAa,EC4DvDkC,CAAoB7D,EAAO2B,IAAeA,EAC1F,IAEGC,CACX,CClGA,MAAMsC,GAAmB,CACrBC,OAAQ,EACRC,WAAY,EACZC,MAAO,GCKX,MAIMC,GAAsB,CACxB5O,aAASrD,GAOb,MAAMkS,GAOF3R,WAAAA,CAAY4R,GAAoB,IAAAC,EAAA,SAAdvF,EAAO3K,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKzB1B,KAAK6R,QAAU,SAQf7R,KAAK8R,iBAAmB,KAIxB9R,KAAK+R,OAAS,CAAC,EACf/R,KAAKgS,gBAAkB,SAAC/P,GAAqB,IAAlB6I,IAAMpJ,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,KAAAA,UAAA,GAC7B,MAAMuQ,EAAc1N,EAAK2G,MAMrB0G,EAAKM,YAAcD,GACnBL,EAAKO,oBAETP,EAAKQ,KAAOR,EAAK/O,QACjB+O,EAAKS,WAAWpQ,GAEZ2P,EAAK/O,UAAY+O,EAAKQ,MAAQR,EAAKG,OAAOO,QAC1CV,EAAKG,OAAOO,OAAOlS,OAAOwR,EAAK/O,SAG/BiI,GAAU8G,EAAKG,OAAOQ,eACtBX,EAAKG,OAAOQ,cAAcnS,OAAOwR,EAAK/O,QAE9C,EACA7C,KAAKwS,aAAc,EACnBxS,KAAKqS,WAAWV,GAChB3R,KAAKyS,MAAQpG,EAAQoG,KACzB,CACAJ,UAAAA,CAAWxP,GA7DEjD,MA8DTI,KAAK6C,QAAUA,EACf7C,KAAKkS,UAAY3N,EAAK2G,MACQ,OAA1BlL,KAAK8R,uBAAyCtS,IAAZqD,IAClC7C,KAAK8R,kBAjEAlS,EAiE2BI,KAAK6C,SAhErC6P,MAAMC,WAAW/S,KAkEzB,CACAuS,iBAAAA,GAAiD,IAA/BS,EAAclR,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG1B,KAAK6C,QACpC7C,KAAK4S,eAAiBA,EACtB5S,KAAK6S,cAAgB7S,KAAKkS,SAC9B,CAyCAY,QAAAA,CAASC,GAIL,OAAO/S,KAAKgT,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGC,EAAW3T,GACLU,KAAK+R,OAAOkB,KACbjT,KAAK+R,OAAOkB,GAAa,IAAInT,GAEjC,MAAMoT,EAAclT,KAAK+R,OAAOkB,GAAW/S,IAAIZ,GAC/C,MAAkB,WAAd2T,EACO,KACHC,IAKA5H,EAAMZ,MAAK,KACF1K,KAAK+R,OAAOO,OAAO3R,WACpBX,KAAKsD,MACT,GACF,EAGH4P,CACX,CACAC,cAAAA,GACI,IAAK,MAAMC,KAAiBpT,KAAK+R,OAC7B/R,KAAK+R,OAAOqB,GAAexS,OAEnC,CAIAyS,MAAAA,CAAOC,EAAeC,GAClBvT,KAAKsT,cAAgBA,EACrBtT,KAAKuT,kBAAoBA,CAC7B,CAgBAxR,GAAAA,CAAIE,GAAkB,IAAf6I,IAAMpJ,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,KAAAA,UAAA,GACJoJ,GAAW9K,KAAKsT,cAIjBtT,KAAKsT,cAAcrR,EAAGjC,KAAKgS,iBAH3BhS,KAAKgS,gBAAgB/P,EAAG6I,EAKhC,CACA0I,eAAAA,CAAgBpB,EAAMvP,EAASqG,GAC3BlJ,KAAK+B,IAAIc,GACT7C,KAAKoS,UAAO5S,EACZQ,KAAK4S,eAAiBR,EACtBpS,KAAK6S,cAAgB7S,KAAKkS,UAAYhJ,CAC1C,CAKAuK,IAAAA,CAAKxR,GAAwB,IAArByR,IAAYhS,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,KAAAA,UAAA,GAChB1B,KAAKgS,gBAAgB/P,GACrBjC,KAAKoS,KAAOnQ,EACZjC,KAAK6S,cAAgB7S,KAAK4S,oBAAiBpT,EAC3CkU,GAAgB1T,KAAKsD,OACjBtD,KAAKuT,mBACLvT,KAAKuT,mBACb,CAQA5R,GAAAA,GAII,OAHI8P,GAAoB5O,SACpB4O,GAAoB5O,QAAQjE,KAAKoB,MAE9BA,KAAK6C,OAChB,CAIA8Q,WAAAA,GACI,OAAO3T,KAAKoS,IAChB,CAQA5P,WAAAA,GACI,MAAMyP,EAAc1N,EAAK2G,MACzB,IAAKlL,KAAK8R,uBACkBtS,IAAxBQ,KAAK4S,gBACLX,EAAcjS,KAAKkS,UA/NJ,GAgOf,OAAO,EAEX,MAAMhJ,EAAQtE,KAAKuG,IAAInL,KAAKkS,UAAYlS,KAAK6S,cAlO1B,IAoOnB,OAAO5R,EAAkB0R,WAAW3S,KAAK6C,SACrC8P,WAAW3S,KAAK4S,gBAAiB1J,EACzC,CAWAhH,KAAAA,CAAM0R,GAEF,OADA5T,KAAKsD,OACE,IAAIK,SAASkQ,IAChB7T,KAAKwS,aAAc,EACnBxS,KAAK8D,UAAY8P,EAAeC,GAC5B7T,KAAK+R,OAAO+B,gBACZ9T,KAAK+R,OAAO+B,eAAe1T,QAC/B,IACDgF,MAAK,KACApF,KAAK+R,OAAOgC,mBACZ/T,KAAK+R,OAAOgC,kBAAkB3T,SAElCJ,KAAKgU,gBAAgB,GAE7B,CAMA1Q,IAAAA,GACQtD,KAAK8D,YACL9D,KAAK8D,UAAUR,OACXtD,KAAK+R,OAAOkC,iBACZjU,KAAK+R,OAAOkC,gBAAgB7T,UAGpCJ,KAAKgU,gBACT,CAMAE,WAAAA,GACI,QAASlU,KAAK8D,SAClB,CACAkQ,cAAAA,UACWhU,KAAK8D,SAChB,CAUAqQ,OAAAA,GACInU,KAAKmT,iBACLnT,KAAKsD,OACDtD,KAAKuT,mBACLvT,KAAKuT,mBAEb,EAEJ,SAASa,GAAYzC,EAAMtF,GACvB,OAAO,IAAIqF,GAAYC,EAAMtF,EACjC,CCjTA,MAAMgI,GAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,GAAiB,IAAIlT,IAAIiT,ICvBzBE,GAAiB,IAAInT,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACGiT,KCTDG,GAAqBvS,GAChBoE,MAAMC,QAAQrE,GCOzB,SAASwS,GAAerS,EAAeP,EAAKjC,GACpCwC,EAAcsS,SAAS7S,GACvBO,EAAcuS,SAAS9S,GAAKE,IAAInC,GAGhCwC,EAAcwS,SAAS/S,EAAKuS,GAAYxU,GAEhD,CCfA,MAAMiV,GAAiBjV,GAAU6D,QAAQ7D,GAASA,EAAM4C,aCExD,SAASsS,GAAqB1S,EAAeP,GACzC,MAAMkT,EAAa3S,EAAcuS,SAAS,cAK1C,GCN6B/U,EDMDmV,ECLrBtR,QAAQoR,GAAcjV,IAAUA,EAAMM,KDMzC,OAAO6U,EAAW7U,IAAI2B,GCP9B,IAAiCjC,CDSjC,CERA,MAAMoV,GAAeC,GAAQA,EAAIC,QAAQ,mBAAoB,SAASC,cCAhEC,GAA+B,QAAUJ,GADjB,kBCA9B,SAASK,GAAqBjT,GAC1B,OAAOA,EAAcM,MAAM0S,GAC/B,CCJA,MAAME,IACO,ECmBPC,GAAaA,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO/W,EACX,MAAMgX,EAAYC,GArBtB,SAAyBjK,EAAGkK,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA3V,EAAI,EACR,GACI2V,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,GAAWc,EAAUT,EAAKE,GAAO9J,EACxCoK,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZzR,KAAK0R,IAAIF,GAfO,QAgBnB1V,EAfuB,IAgB7B,OAAO2V,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMS,GAAgBpQ,GAAYqQ,GAAMA,GAAK,GAAMrQ,EAAO,EAAIqQ,GAAK,GAAK,EAAIrQ,EAAO,GAAK,EAAIqQ,KAAO,ECA7FC,GAAiBtQ,GAAYqQ,GAAM,EAAIrQ,EAAO,EAAIqQ,GCElDlO,GAAwBoN,GAAY,IAAM,KAAM,IAAM,KACtDrN,GAAuBoO,GAAcnO,IACrCoO,GAA0BH,GAAalO,ICJvCsO,GAAcH,IAAOA,GAAK,GAAK,EAAI,GAAMnO,GAAOmO,GAAK,IAAO,EAAI7R,KAAKiS,IAAI,GAAI,IAAMJ,EAAI,KCCvFrO,GAAUqO,GAAM,EAAI7R,KAAKkS,IAAIlS,KAAKmS,KAAKN,IACvCpO,GAAUqO,GAActO,IACxB4O,GAAYR,GAAapO,ICFzB6O,GAAqBhV,GAAM,cAAciV,KAAKjV,GCHpD,MAAMkV,GAAQA,CAAChM,EAAKxG,EAAK1C,IACjBA,EAAI0C,EACGA,EACP1C,EAAIkJ,EACGA,EACJlJ,ECHLmV,GAAS,CACXF,KAAOjV,GAAmB,kBAANA,EACpBoV,MAAO1E,WACP2E,UAAYrV,GAAMA,GAEhBsV,GAAQ,IACPH,GACHE,UAAYrV,GAAMkV,GAAM,EAAG,EAAGlV,IAE5BuV,GAAQ,IACPJ,GACHK,QAAS,GCXPC,GAAYzV,GAAM2C,KAAK2C,MAAU,IAAJtF,GAAc,ICF3C0V,GAAa,8BCAnB,MAAMC,GAAmB,sHCQnBC,GAAgBA,CAAC5R,EAAM6R,IAAc7V,GAChCwB,QAAsB,kBAANxB,GACnB2V,GAAiBV,KAAKjV,IACtBA,EAAE8V,WAAW9R,IACZ6R,ICZT,SAAmB7V,GACf,OAAY,MAALA,CACX,CDWa+V,CAAU/V,IACXgW,OAAOC,UAAUC,eAAeC,KAAKnW,EAAG6V,IAE9CO,GAAaA,CAACC,EAAOC,EAAOC,IAAWvW,IACzC,GAAiB,kBAANA,EACP,OAAOA,EACX,MAAO5B,EAAGC,EAAGC,EAAGgX,GAAStV,EAAEwW,MAAMd,IACjC,MAAO,CACH,CAACW,GAAQ3F,WAAWtS,GACpB,CAACkY,GAAQ5F,WAAWrS,GACpB,CAACkY,GAAQ7F,WAAWpS,GACpBgX,WAAiB/X,IAAV+X,EAAsB5E,WAAW4E,GAAS,EACpD,EEnBCmB,GAAU,IACTtB,GACHE,UAAYrV,GAAM2C,KAAK2C,MAHLtF,IAAMkV,GAAM,EAAG,IAAKlV,GAGT0W,CAAa1W,KAExC2W,GAAO,CACT1B,KAAoBW,GAAc,MAAO,OACzCR,MAAqBgB,GAAW,MAAO,QAAS,QAChDf,UAAWzP,IAAA,IAAC,IAAEgR,EAAG,MAAEC,EAAK,KAAEC,EAAMxB,MAAOyB,EAAU,GAAGnR,EAAA,MAAK,QACrD6Q,GAAQpB,UAAUuB,GAClB,KACAH,GAAQpB,UAAUwB,GAClB,KACAJ,GAAQpB,UAAUyB,GAClB,KACArB,GAASH,GAAMD,UAAU0B,IACzB,GAAG,GCYX,MAAMC,GAAM,CACR/B,KAAoBW,GAAc,KAClCR,MAhCJ,SAAkBpV,GACd,IAAIiX,EAAI,GACJC,EAAI,GACJ7Y,EAAI,GACJD,EAAI,GAmBR,OAjBI4B,EAAExB,OAAS,GACXyY,EAAIjX,EAAEuF,UAAU,EAAG,GACnB2R,EAAIlX,EAAEuF,UAAU,EAAG,GACnBlH,EAAI2B,EAAEuF,UAAU,EAAG,GACnBnH,EAAI4B,EAAEuF,UAAU,EAAG,KAInB0R,EAAIjX,EAAEuF,UAAU,EAAG,GACnB2R,EAAIlX,EAAEuF,UAAU,EAAG,GACnBlH,EAAI2B,EAAEuF,UAAU,EAAG,GACnBnH,EAAI4B,EAAEuF,UAAU,EAAG,GACnB0R,GAAKA,EACLC,GAAKA,EACL7Y,GAAKA,EACLD,GAAKA,GAEF,CACHwY,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAAS9Y,EAAG,IAClBiX,MAAOlX,EAAI+Y,SAAS/Y,EAAG,IAAM,IAAM,EAE3C,EAIIiX,UAAWsB,GAAKtB,WCpCd+B,GAAkBC,IAAI,CACxBpC,KAAOjV,GAAmB,kBAANA,GAAkBA,EAAEsX,SAASD,IAAiC,IAAxBrX,EAAEuX,MAAM,KAAK/Y,OACvE4W,MAAO1E,WACP2E,UAAYrV,GAAM,GAAGA,IAAIqX,MAEvBG,GAAwBJ,GAAe,OACvCK,GAAwBL,GAAe,KACvCM,GAAmBN,GAAe,MAClCO,GAAmBP,GAAe,MAClCQ,GAAmBR,GAAe,MAClCS,GAAqB,IACpBJ,GACHrC,MAAQpV,GAAMyX,GAAQrC,MAAMpV,GAAK,IACjCqV,UAAYrV,GAAMyX,GAAQpC,UAAc,IAAJrV,ICRlC8X,GAAO,CACT7C,KAAoBW,GAAc,MAAO,OACzCR,MAAqBgB,GAAW,MAAO,aAAc,aACrDf,UAAWzP,IAAwD,IAAvD,IAAEmS,EAAG,WAAEC,EAAU,UAAEC,EAAW3C,MAAOyB,EAAU,GAAGnR,EAC1D,MAAQ,QACJjD,KAAK2C,MAAMyS,GACX,KACAN,GAAQpC,UAAUI,GAASuC,IAC3B,KACAP,GAAQpC,UAAUI,GAASwC,IAC3B,KACAxC,GAASH,GAAMD,UAAU0B,IACzB,GAAG,GCbTmB,GAAQ,CACVjD,KAAOjV,GAAM2W,GAAK1B,KAAKjV,IAAMgX,GAAI/B,KAAKjV,IAAM8X,GAAK7C,KAAKjV,GACtDoV,MAAQpV,GACA2W,GAAK1B,KAAKjV,GACH2W,GAAKvB,MAAMpV,GAEb8X,GAAK7C,KAAKjV,GACR8X,GAAK1C,MAAMpV,GAGXgX,GAAI5B,MAAMpV,GAGzBqV,UAAYrV,GACY,kBAANA,EACRA,EACAA,EAAEkW,eAAe,OACbS,GAAKtB,UAAUrV,GACf8X,GAAKzC,UAAUrV,ICtB3BmY,GAAa,qHCanB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,kOACrB,SAASC,GAAoB5a,GACzB,MAAM6a,EAAgB7a,EAAM8a,WACtBpY,EAAS,GACTqY,EAAU,CACZR,MAAO,GACP/C,OAAQ,GACRwD,IAAK,IAEHC,EAAQ,GACd,IAAIna,EAAI,EACR,MAmBM8Y,EAnBYiB,EAAcvF,QAAQqF,IAAeO,IAC/CX,GAAMjD,KAAK4D,IACXH,EAAQR,MAAMvb,KAAK8B,GACnBma,EAAMjc,KAAK0b,IACXhY,EAAO1D,KAAKub,GAAM9C,MAAMyD,KAEnBA,EAAY/C,WApBF,SAqBf4C,EAAQC,IAAIhc,KAAK8B,GACjBma,EAAMjc,KAvBA,OAwBN0D,EAAO1D,KAAKkc,KAGZH,EAAQvD,OAAOxY,KAAK8B,GACpBma,EAAMjc,KAAKyb,IACX/X,EAAO1D,KAAK+T,WAAWmI,OAEzBpa,EA7BU,SAgCQ8Y,MAhCR,OAiChB,MAAO,CAAElX,SAAQkX,QAAOmB,UAASE,QACrC,CACA,SAASE,GAAkB9Y,GACvB,OAAOuY,GAAoBvY,GAAGK,MAClC,CACA,SAAS0Y,GAAkBC,GACvB,MAAM,MAAEzB,EAAK,MAAEqB,GAAUL,GAAoBS,GACvCC,EAAc1B,EAAM/Y,OAC1B,OAAQwB,IACJ,IAAIkZ,EAAS,GACb,IAAK,IAAIza,EAAI,EAAGA,EAAIwa,EAAaxa,IAE7B,GADAya,GAAU3B,EAAM9Y,QACHlB,IAATyC,EAAEvB,GAAkB,CACpB,MAAMuF,EAAO4U,EAAMna,GAEfya,GADAlV,IAASoU,GACC3C,GAASzV,EAAEvB,IAEhBuF,IAASqU,GACJH,GAAM7C,UAAUrV,EAAEvB,IAGlBuB,EAAEvB,EAEpB,CAEJ,OAAOya,CAAM,CAErB,CACA,MAAMC,GAAwBnZ,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAMoZ,GAAU,CACZnE,KAhFJ,SAAcjV,GACV,IAAI2E,EAAI0U,EACR,OAAQ5I,MAAMzQ,IACG,kBAANA,KAC0B,QAA9B2E,EAAK3E,EAAEwW,MAAMd,WAAgC,IAAP/Q,OAAgB,EAASA,EAAGnG,SAAW,KAC3C,QAA9B6a,EAAKrZ,EAAEwW,MAAM2B,WAAgC,IAAPkB,OAAgB,EAASA,EAAG7a,SAAW,GAChF,CACZ,EA0EI4W,MAAO0D,GACPC,qBACAO,kBATJ,SAA2BtZ,GACvB,MAAMuZ,EAAST,GAAkB9Y,GAEjC,OADoB+Y,GAAkB/Y,EAC/BwZ,CAAYD,EAAO3X,IAAIuX,IAClC,GC7EMM,GAAc,IAAIta,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASua,GAAmB1Z,GACxB,MAAO2Z,EAAMhc,GAASqC,EAAE4Z,MAAM,GAAI,GAAGrC,MAAM,KAC3C,GAAa,gBAAToC,EACA,OAAO3Z,EACX,MAAOmV,GAAUxX,EAAM6Y,MAAMd,KAAe,GAC5C,IAAKP,EACD,OAAOnV,EACX,MAAMqX,EAAO1Z,EAAMsV,QAAQkC,EAAQ,IACnC,IAAI0E,EAAeJ,GAAY5Z,IAAI8Z,GAAQ,EAAI,EAG/C,OAFIxE,IAAWxX,IACXkc,GAAgB,KACbF,EAAO,IAAME,EAAexC,EAAO,GAC9C,CACA,MAAMyC,GAAgB,uBAChBvY,GAAS,IACR6X,GACHE,kBAAoBtZ,IAChB,MAAM+Z,EAAY/Z,EAAEwW,MAAMsD,IAC1B,OAAOC,EAAYA,EAAUnY,IAAI8X,IAAoBM,KAAK,KAAOha,CAAC,GCvBpEia,GAA0B,CAE5BC,YAAaxC,GACbyC,eAAgBzC,GAChB0C,iBAAkB1C,GAClB2C,kBAAmB3C,GACnB4C,gBAAiB5C,GACjB6C,aAAc7C,GACd8C,OAAQ9C,GACR+C,oBAAqB/C,GACrBgD,qBAAsBhD,GACtBiD,wBAAyBjD,GACzBkD,uBAAwBlD,GAExBmD,MAAOnD,GACPoD,SAAUpD,GACVqD,OAAQrD,GACRsD,UAAWtD,GACX3J,IAAK2J,GACL1J,MAAO0J,GACPxJ,OAAQwJ,GACR5J,KAAM4J,GAENuD,QAASvD,GACTwD,WAAYxD,GACZyD,aAAczD,GACd0D,cAAe1D,GACf2D,YAAa3D,GACb4D,OAAQ5D,GACR6D,UAAW7D,GACX8D,YAAa9D,GACb+D,aAAc/D,GACdgE,WAAYhE,GAEZiE,oBAAqBjE,GACrBkE,oBAAqBlE,IClCnBmE,GAAsB,CACxBC,OAAQtE,GACRuE,QAASvE,GACTwE,QAASxE,GACTyE,QAASzE,GACTjC,MAAK,GACL2G,OAAQ3G,GACR4G,OAAQ5G,GACR6G,OAAQ7G,GACR8G,KAAM7E,GACN8E,MAAO9E,GACP+E,MAAO/E,GACPgF,SAAU9E,GACV+E,WAAY/E,GACZgF,WAAYhF,GACZiF,WAAYjF,GACZ3N,EAAG2N,GACH1N,EAAG0N,GACHkF,EAAGlF,GACHmF,YAAanF,GACboF,qBAAsBpF,GACtB1S,QAASsQ,GACTyH,QAASlF,GACTmF,QAASnF,GACToF,QAASvF,ICzBPwF,GAAM,IACL/H,GACHE,UAAW1S,KAAK2C,OCEd6X,GAAmB,IAClBlD,MACA4B,GACHuB,OAAQF,GACRG,KAAM3F,GAEN4F,YAAahI,GACbiI,cAAejI,GACfkI,WAAYN,ICPVO,GAAoB,IACnBN,GAEHjF,MAAK,GACLwF,gBAAiBxF,GACjByF,aAAczF,GACd0F,KAAM1F,GACN2F,OAAQ3F,GAER4F,YAAa5F,GACb6F,eAAgB7F,GAChB8F,iBAAkB9F,GAClB+F,kBAAmB/F,GACnBgG,gBAAiBhG,GACjB3W,OAAM,GACN4c,aAAc5c,IAKZ6c,GAAuBxe,GAAQ6d,GAAkB7d,GCvBvD,SAAS0Z,GAAkB1Z,EAAKjC,GAC5B,IAAI0gB,EAAmBD,GAAoBxe,GAI3C,OAHIye,IAAqB9c,KACrB8c,EAAmBjF,IAEhBiF,EAAiB/E,kBAClB+E,EAAiB/E,kBAAkB3b,QACnCJ,CACV,CCHA,MAAM+gB,GAAmB,IAAInf,IAAI,CAAC,OAAQ,OAAQ,MCTlD,MAAMof,GAAYC,GAAe,IAANA,EAAa7b,KAAK8b,GACvC3C,GAAU9b,IACZ,MAAM0e,EAAQH,GAAS5b,KAAKgc,MAAM3e,EAAE,GAAIA,EAAE,KAC1C,OAAO4e,GAAYF,EAAM,EAEvBG,GAAkB,CACpB9U,EAAG,EACHC,EAAG,EACHyS,WAAY,EACZC,WAAY,EACZR,OAAQ,EACRC,OAAQ,EACR5G,MAAQvV,IAAO2C,KAAK0R,IAAIrU,EAAE,IAAM2C,KAAK0R,IAAIrU,EAAE,KAAO,EAClD8b,UACAG,QAASH,GACTQ,MAAQtc,GAAMue,GAAS5b,KAAKmc,KAAK9e,EAAE,KACnCuc,MAAQvc,GAAMue,GAAS5b,KAAKmc,KAAK9e,EAAE,KACnCqc,KAAOrc,IAAO2C,KAAK0R,IAAIrU,EAAE,IAAM2C,KAAK0R,IAAIrU,EAAE,KAAO,GAE/C4e,GAAeF,KACjBA,GAAgB,KACJ,IACRA,GAAS,KACNA,GAGLxC,GAAUlc,GAAM2C,KAAKoc,KAAK/e,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDmc,GAAUnc,GAAM2C,KAAKoc,KAAK/e,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDgf,GAAkB,CACpBjV,EAAG,GACHC,EAAG,GACH4S,EAAG,GACHH,WAAY,GACZC,WAAY,GACZC,WAAY,GACZT,UACAC,UACA5G,MAAQvV,IAAOkc,GAAOlc,GAAKmc,GAAOnc,IAAM,EACxC+b,QAAU/b,GAAM4e,GAAYL,GAAS5b,KAAKgc,MAAM3e,EAAE,GAAIA,EAAE,MACxDgc,QAAUhc,GAAM4e,GAAYL,GAAS5b,KAAKgc,OAAO3e,EAAE,GAAIA,EAAE,MACzDic,QAfYH,GAgBZA,OAhBYA,GAiBZQ,MAAQtc,GAAMue,GAAS5b,KAAKmc,KAAK9e,EAAE,KACnCuc,MAAQvc,GAAMue,GAAS5b,KAAKmc,KAAK9e,EAAE,KACnCqc,KAAOrc,IAAO2C,KAAK0R,IAAIrU,EAAE,IAAM2C,KAAK0R,IAAIrU,EAAE,KAAO,GAErD,SAASif,GAAsBtF,GAC3B,OAAOA,EAAKuF,SAAS,SAAW,EAAI,CACxC,CACA,SAASC,GAAwB9J,EAAWsE,GACxC,IAAKtE,GAA2B,SAAdA,EACd,OAAO4J,GAAsBtF,GAEjC,MAAMyF,EAAgB/J,EAAUmB,MAAM,gCACtC,IAAI6I,EACA7I,EACJ,GAAI4I,EACAC,EAAUL,GACVxI,EAAQ4I,MAEP,CACD,MAAME,EAAgBjK,EAAUmB,MAAM,8BACtC6I,EAAUR,GACVrI,EAAQ8I,CACZ,CACA,IAAK9I,EACD,OAAOyI,GAAsBtF,GAEjC,MAAM4F,EAAcF,EAAQ1F,GACtBtZ,EAASmW,EAAM,GAAGe,MAAM,KAAK3V,IAAI4d,IACvC,MAA8B,oBAAhBD,EACRA,EAAYlf,GACZA,EAAOkf,EACjB,CAKA,SAASC,GAAyB7hB,GAC9B,OAAO+S,WAAW/S,EAAM8hB,OAC5B,CC3EA,MAAMC,GAAiB1f,GAAMA,IAAMmV,IAAUnV,IAAM0X,GAC7CiI,GAAgB,IAAIxgB,IAAI,CAAC,IAAK,IAAK,MACnCygB,GAAgCxN,GAAmB7Q,QAAQ3B,IAAS+f,GAAc9f,IAAID,KAY5F,MAAMigB,GAAmB,CAErBhF,MAAOA,CAAAjV,EAAAka,KAAA,IAAC,EAAE/V,GAAGnE,GAAE,YAAEyV,EAAc,IAAG,aAAEF,EAAe,KAAK2E,EAAA,OAAK/V,EAAErH,IAAMqH,EAAEb,IAAMwH,WAAW2K,GAAe3K,WAAWyK,EAAa,EAC/HJ,OAAQA,CAAAgF,EAAAC,KAAA,IAAC,EAAEhW,GAAG+V,GAAE,WAAE7E,EAAa,IAAG,cAAEE,EAAgB,KAAK4E,EAAA,OAAKhW,EAAEtH,IAAMsH,EAAEd,IAAMwH,WAAWwK,GAAcxK,WAAW0K,EAAc,EAChIrN,IAAKA,CAACkS,EAAKC,KAAA,IAAE,IAAEnS,GAAKmS,EAAA,OAAKxP,WAAW3C,EAAI,EACxCD,KAAMA,CAACmS,EAAKE,KAAA,IAAE,KAAErS,GAAMqS,EAAA,OAAKzP,WAAW5C,EAAK,EAC3CI,OAAQA,CAAAkS,EAAAC,KAAA,IAAC,EAAErW,GAAGoW,GAAE,IAAErS,GAAKsS,EAAA,OAAK3P,WAAW3C,IAAQ/D,EAAEtH,IAAMsH,EAAEd,IAAI,EAC7D8E,MAAOA,CAAAsS,EAAAC,KAAA,IAAC,EAAExW,GAAGuW,GAAE,KAAExS,GAAMyS,EAAA,OAAK7P,WAAW5C,IAAS/D,EAAErH,IAAMqH,EAAEb,IAAI,EAE9Da,EAAGA,CAACkW,EAAKO,KAAA,IAAE,UAAEnL,GAAWmL,EAAA,OAAKrB,GAAwB9J,EAAW,IAAI,EACpErL,EAAGA,CAACiW,EAAKQ,KAAA,IAAE,UAAEpL,GAAWoL,EAAA,OAAKtB,GAAwB9J,EAAW,IAAI,GAGxEwK,GAAiBpD,WAAaoD,GAAiB9V,EAC/C8V,GAAiBnD,WAAamD,GAAiB7V,EC9B/C,MAAM0W,GAAY,IAAIvhB,IACtB,IAAIwhB,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACL,GAAID,GAAqB,CACrB,MAAME,EAAqB1c,MAAM3G,KAAKijB,IAAWnf,QAAQwf,GAAaA,EAASC,mBACzEC,EAAoB,IAAI9hB,IAAI2hB,EAAmBlf,KAAKmf,GAAaA,EAAStS,WAC1EyS,EAAsB,IAAI1hB,IAKhCyhB,EAAkB3gB,SAASmO,IACvB,MAAM0S,EDRlB,SAAyChhB,GACrC,MAAMghB,EAAoB,GAQ1B,OAPAvB,GAA8Btf,SAASV,IACnC,MAAMjC,EAAQwC,EAAcuS,SAAS9S,QACvBrC,IAAVI,IACAwjB,EAAkBxkB,KAAK,CAACiD,EAAKjC,EAAM+B,QACnC/B,EAAMmC,IAAIF,EAAIkW,WAAW,SAAW,EAAI,GAC5C,IAEGqL,CACX,CCFsCC,CAAgC3S,GACrD0S,EAAkB3iB,SAEvB0iB,EAAoBphB,IAAI2O,EAAS0S,GACjC1S,EAAQ5F,SAAQ,IAGpBiY,EAAmBxgB,SAASygB,GAAaA,EAASM,wBAElDJ,EAAkB3gB,SAASmO,IACvBA,EAAQ5F,SACR,MAAMyY,EAAUJ,EAAoBxhB,IAAI+O,GACpC6S,GACAA,EAAQhhB,SAAQsF,IAAkB,IAAhBhG,EAAKjC,GAAMiI,EACzB,IAAIjB,EAC6B,QAAhCA,EAAK8J,EAAQiE,SAAS9S,UAAyB,IAAP+E,GAAyBA,EAAG7E,IAAInC,EAAM,GAEvF,IAGJmjB,EAAmBxgB,SAASygB,GAAaA,EAASQ,oBAElDT,EAAmBxgB,SAASygB,SACUxjB,IAA9BwjB,EAASS,kBACTvgB,OAAOwgB,SAAS,EAAGV,EAASS,iBAChC,GAER,CACAZ,IAAsB,EACtBD,IAAc,EACdD,GAAUpgB,SAASygB,GAAaA,EAAS9d,aACzCyd,GAAU/hB,OACd,CACA,SAAS+iB,KACLhB,GAAUpgB,SAASygB,IACfA,EAASY,gBACLZ,EAASC,mBACTJ,IAAsB,EAC1B,GAER,CAKA,MAAMgB,GACF9jB,WAAAA,CAAY+jB,EAAqBC,EAAYnI,EAAMxH,EAAa1D,GAA0B,IAAjBsT,EAAOtiB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GAK5E1B,KAAKikB,YAAa,EAMlBjkB,KAAKgkB,SAAU,EAKfhkB,KAAKijB,kBAAmB,EAKxBjjB,KAAK4iB,aAAc,EACnB5iB,KAAK8jB,oBAAsB,IAAIA,GAC/B9jB,KAAK+jB,WAAaA,EAClB/jB,KAAK4b,KAAOA,EACZ5b,KAAKoU,YAAcA,EACnBpU,KAAK0Q,QAAUA,EACf1Q,KAAKgkB,QAAUA,CACnB,CACAE,eAAAA,GACIlkB,KAAK4iB,aAAc,EACf5iB,KAAKgkB,SACLrB,GAAUziB,IAAIF,MACT4iB,KACDA,IAAc,EACdtX,EAAMZ,KAAKiZ,IACXrY,EAAMX,iBAAiBmY,OAI3B9iB,KAAK4jB,gBACL5jB,KAAKkF,WAEb,CACA0e,aAAAA,GACI,MAAM,oBAAEE,EAAmB,KAAElI,EAAI,QAAElL,EAAO,YAAE0D,GAAgBpU,KAK5D,IAAK,IAAIU,EAAI,EAAGA,EAAIojB,EAAoBrjB,OAAQC,IAC5C,GAA+B,OAA3BojB,EAAoBpjB,GAIpB,GAAU,IAANA,EAAS,CACT,MAAMyjB,EAA+B,OAAhB/P,QAAwC,IAAhBA,OAAyB,EAASA,EAAYzS,MACrFyiB,EAAgBN,EAAoBA,EAAoBrjB,OAAS,GACvE,QAAqBjB,IAAjB2kB,EACAL,EAAoB,GAAKK,OAExB,GAAIzT,GAAWkL,EAAM,CACtB,MAAMyI,EAAc3T,EAAQ4T,UAAU1I,EAAMwI,QACxB5kB,IAAhB6kB,GAA6C,OAAhBA,IAC7BP,EAAoB,GAAKO,EAEjC,MAC+B7kB,IAA3BskB,EAAoB,KACpBA,EAAoB,GAAKM,GAEzBhQ,QAAgC5U,IAAjB2kB,GACf/P,EAAYrS,IAAI+hB,EAAoB,GAE5C,MAEIA,EAAoBpjB,GAAKojB,EAAoBpjB,EAAI,EAIjE,CACA6jB,gBAAAA,GAAqB,CACrBjB,mBAAAA,GAAwB,CACxBkB,eAAAA,GAAoB,CACpBhB,eAAAA,GAAoB,CACpBte,QAAAA,GACIlF,KAAKikB,YAAa,EAClBjkB,KAAK+jB,WAAW/jB,KAAK8jB,oBAAqB9jB,KAAKokB,eAC/CzB,GAAUtY,OAAOrK,KACrB,CACAsE,MAAAA,GACStE,KAAKikB,aACNjkB,KAAK4iB,aAAc,EACnBD,GAAUtY,OAAOrK,MAEzB,CACAykB,MAAAA,GACSzkB,KAAKikB,YACNjkB,KAAKkkB,iBACb,EC7JJ,MAAMQ,GAAqBziB,GAAM,+BAA+BiV,KAAKjV,GCH/D0iB,GAAyBC,GAAW/iB,GAAuB,kBAARA,GAAoBA,EAAIkW,WAAW6M,GACtFC,GACQF,GAAsB,MAC9BG,GACQH,GAAsB,UAC9BI,GAAsBnlB,KACAklB,GAAsBllB,IAIvColB,GAAuB9N,KAAKtX,EAAM4Z,MAAM,MAAM,GAAGkI,QAEtDsD,GAAyB,sFCCzBC,GAEN,2DASA,SAASC,GAAiBriB,EAAS6N,GAAoB,IAAXyU,EAAKzjB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAChDvC,EAAUgmB,GAFG,EAEgB,yDAAyDtiB,yDACtF,MAAO+hB,EAAOvgB,GAVlB,SAA0BxB,GACtB,MAAM4V,EAAQwM,GAAsBG,KAAKviB,GACzC,IAAK4V,EACD,MAAO,CAAC,GACZ,MAAO,CAAE4M,EAAQC,EAAQjhB,GAAYoU,EACrC,MAAO,CAAC,KAAgB,OAAX4M,QAA8B,IAAXA,EAAoBA,EAASC,IAAUjhB,EAC3E,CAI8BkhB,CAAiB1iB,GAE3C,IAAK+hB,EACD,OAEJ,MAAMY,EAAWtiB,OAAOuiB,iBAAiB/U,GAASgV,iBAAiBd,GACnE,GAAIY,EAAU,CACV,MAAMG,EAAUH,EAAS9D,OACzB,OAAOgD,GAAkBiB,GAAWhT,WAAWgT,GAAWA,CAC9D,CACA,OAAOZ,GAAmB1gB,GACpB6gB,GAAiB7gB,EAAUqM,EAASyU,EAAQ,GAC5C9gB,CACV,CCpCA,MAAMuhB,GAAiB3jB,GAAOgE,GAASA,EAAKiR,KAAKjV,GCK3C4jB,GAAsB,CAACzO,GAAQuC,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT1C,KAAOjV,GAAY,SAANA,EACboV,MAAQpV,GAAMA,IDOZ6jB,GAA0B7jB,GAAM4jB,GAAoBE,KAAKH,GAAc3jB,IEH7E,MAAM+jB,WAA6BnC,GAC/B9jB,WAAAA,CAAY+jB,EAAqBC,EAAYnI,EAAMxH,EAAa1D,GAC5DuV,MAAMnC,EAAqBC,EAAYnI,EAAMxH,EAAa1D,GAAS,EACvE,CACAkT,aAAAA,GACI,MAAM,oBAAEE,EAAmB,QAAEpT,EAAO,KAAEkL,GAAS5b,KAC/C,IAAK0Q,IAAYA,EAAQ7N,QACrB,OACJojB,MAAMrC,gBAIN,IAAK,IAAIljB,EAAI,EAAGA,EAAIojB,EAAoBrjB,OAAQC,IAAK,CACjD,IAAIwlB,EAAWpC,EAAoBpjB,GACnC,GAAwB,kBAAbwlB,IACPA,EAAWA,EAASxE,OAChBqD,GAAmBmB,IAAW,CAC9B,MAAMV,EAAWN,GAAiBgB,EAAUxV,EAAQ7N,cACnCrD,IAAbgmB,IACA1B,EAAoBpjB,GAAK8kB,GAEzB9kB,IAAMojB,EAAoBrjB,OAAS,IACnCT,KAAKokB,cAAgB8B,EAE7B,CAER,CAaA,GAPAlmB,KAAKmmB,wBAOA5R,GAAezS,IAAI8Z,IAAwC,IAA/BkI,EAAoBrjB,OACjD,OAEJ,MAAO2lB,EAAQ5Y,GAAUsW,EACnBuC,EAAaP,GAAuBM,GACpCE,EAAaR,GAAuBtY,GAI1C,GAAI6Y,IAAeC,EAMnB,GAAI3E,GAAc0E,IAAe1E,GAAc2E,GAC3C,IAAK,IAAI5lB,EAAI,EAAGA,EAAIojB,EAAoBrjB,OAAQC,IAAK,CACjD,MAAMd,EAAQkkB,EAAoBpjB,GACb,kBAAVd,IACPkkB,EAAoBpjB,GAAKiS,WAAW/S,GAE5C,MAMAI,KAAKijB,kBAAmB,CAEhC,CACAkD,oBAAAA,GACI,MAAM,oBAAErC,EAAmB,KAAElI,GAAS5b,KAChCumB,EAAsB,GAC5B,IAAK,IAAI7lB,EAAI,EAAGA,EAAIojB,EAAoBrjB,OAAQC,KC9E/B,kBADTd,EDgFOkkB,EAAoBpjB,IC9ElB,IAAVd,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,GAAiBqX,GAAkBrX,KD4EtD2mB,EAAoB3nB,KAAK8B,GCjFzC,IAAgBd,EDoFJ2mB,EAAoB9lB,QV5EhC,SAAqCqjB,EAAqByC,EAAqB3K,GAC3E,IACI4K,EADA9lB,EAAI,EAER,KAAOA,EAAIojB,EAAoBrjB,SAAW+lB,GAAoB,CAC1D,MAAMN,EAAWpC,EAAoBpjB,GACb,kBAAbwlB,IACN3F,GAAiBze,IAAIokB,IACtB1L,GAAoB0L,GAAU5jB,OAAO7B,SACrC+lB,EAAqB1C,EAAoBpjB,IAE7CA,GACJ,CACA,GAAI8lB,GAAsB5K,EACtB,IAAK,MAAM6K,KAAaF,EACpBzC,EAAoB2C,GAAalL,GAAkBK,EAAM4K,EAGrE,CU4DYE,CAA4B5C,EAAqByC,EAAqB3K,EAE9E,CACA0H,mBAAAA,GACI,MAAM,QAAE5S,EAAO,oBAAEoT,EAAmB,KAAElI,GAAS5b,KAC/C,IAAK0Q,IAAYA,EAAQ7N,QACrB,OACS,WAAT+Y,IACA5b,KAAKyjB,iBAAmBvgB,OAAOyjB,aAEnC3mB,KAAK4mB,eAAiB9E,GAAiBlG,GAAMlL,EAAQmW,qBAAsB3jB,OAAOuiB,iBAAiB/U,EAAQ7N,UAC3GihB,EAAoB,GAAK9jB,KAAK4mB,eAE9B,MAAME,EAAkBhD,EAAoBA,EAAoBrjB,OAAS,QACjDjB,IAApBsnB,GACApW,EAAQiE,SAASiH,EAAMkL,GAAiBrT,KAAKqT,GAAiB,EAEtE,CACAtD,eAAAA,GACI,IAAI5c,EACJ,MAAM,QAAE8J,EAAO,KAAEkL,EAAI,oBAAEkI,GAAwB9jB,KAC/C,IAAK0Q,IAAYA,EAAQ7N,QACrB,OACJ,MAAMjD,EAAQ8Q,EAAQiE,SAASiH,GAC/Bhc,GAASA,EAAM6T,KAAKzT,KAAK4mB,gBAAgB,GACzC,MAAMG,EAAqBjD,EAAoBrjB,OAAS,EAClD2jB,EAAgBN,EAAoBiD,GAC1CjD,EAAoBiD,GAAsBjF,GAAiBlG,GAAMlL,EAAQmW,qBAAsB3jB,OAAOuiB,iBAAiB/U,EAAQ7N,UACzG,OAAlBuhB,QAAiD5kB,IAAvBQ,KAAKokB,gBAC/BpkB,KAAKokB,cAAgBA,IAGa,QAAjCxd,EAAK5G,KAAKojB,yBAAsC,IAAPxc,OAAgB,EAASA,EAAGnG,SACtET,KAAKojB,kBAAkB7gB,SAAQsF,IAA+C,IAA7Cmf,EAAoBC,GAAoBpf,EACrE6I,EACKiE,SAASqS,GACTjlB,IAAIklB,EAAoB,IAGrCjnB,KAAKmmB,sBACT,EEpHJ,MAAMe,GAAeA,CAACtnB,EAAOgc,IAEZ,WAATA,MAKiB,kBAAVhc,IAAsByG,MAAMC,QAAQ1G,OAE1B,kBAAVA,IACNyb,GAAQnE,KAAKtX,IAAoB,MAAVA,GACvBA,EAAMmY,WAAW,UCT1B,SAASoP,GAAWC,EAAWxL,EAAM3V,EAAM/E,GAMvC,MAAMmmB,EAAiBD,EAAU,GACjC,GAAuB,OAAnBC,EACA,OAAO,EAMX,GAAa,YAATzL,GAA+B,eAATA,EACtB,OAAO,EACX,MAAM0L,EAAiBF,EAAUA,EAAU3mB,OAAS,GAC9C8mB,EAAqBL,GAAaG,EAAgBzL,GAClD4L,EAAqBN,GAAaI,EAAgB1L,GAGxD,OAFA1c,EAAQqoB,IAAuBC,EAAoB,6BAA6B5L,WAAcyL,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,oCAE3PC,IAAuBC,KA9BhC,SAA6BJ,GACzB,MAAMvkB,EAAUukB,EAAU,GAC1B,GAAyB,IAArBA,EAAU3mB,OACV,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAI0mB,EAAU3mB,OAAQC,IAClC,GAAI0mB,EAAU1mB,KAAOmC,EACjB,OAAO,CAEnB,CAyBY4kB,CAAoBL,KACb,WAATnhB,GAAqBD,EAAYC,KAAU/E,EACrD,CCvCA,MAAMwmB,GAAa9nB,GAAoB,OAAVA,EAC7B,SAAS+nB,GAAiBP,EAASvf,EAAmCuc,GAAe,IAAhD,OAAEwD,EAAM,WAAEC,EAAa,QAAQhgB,EAChE,MAAMigB,EAAoBV,EAAU5jB,OAAOkkB,IACrC5oB,EAAQ8oB,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EAC1D,EACAE,EAAkBrnB,OAAS,EACjC,OAAQ3B,QAA2BU,IAAlB4kB,EAEXA,EADA0D,EAAkBhpB,EAE5B,CCMA,MAAMipB,GACFhoB,WAAAA,CAAW8H,GAAmH,IAAlH,SAAEmgB,GAAW,EAAI,MAAEC,EAAQ,EAAC,KAAEhiB,EAAO,YAAW,OAAE2hB,EAAS,EAAC,YAAEM,EAAc,EAAC,WAAEL,EAAa,UAAWxb,GAASxE,EAExH7H,KAAKmoB,WAAY,EACjBnoB,KAAKooB,qBAAsB,EAC3BpoB,KAAKqoB,UAAY9jB,EAAK2G,MACtBlL,KAAKqM,QAAU,CACX2b,WACAC,QACAhiB,OACA2hB,SACAM,cACAL,gBACGxb,GAEPrM,KAAKsoB,uBACT,CAWAC,aAAAA,GACI,OAAKvoB,KAAKwoB,YAEHxoB,KAAKwoB,WAAaxoB,KAAKqoB,UA/BZ,GAgCZroB,KAAKwoB,WAFAxoB,KAAKqoB,SAIpB,CAMA,YAAI7C,GAIA,OAHKxlB,KAAKyoB,WAAczoB,KAAKooB,sBZGjCzE,KACAb,MYDW9iB,KAAKyoB,SAChB,CAMAC,mBAAAA,CAAoBtB,EAAWhD,GAC3BpkB,KAAKwoB,WAAajkB,EAAK2G,MACvBlL,KAAKooB,qBAAsB,EAC3B,MAAM,KAAExM,EAAI,KAAE3V,EAAI,SAAE/E,EAAQ,MAAE+mB,EAAK,WAAElE,EAAU,SAAE4E,EAAQ,YAAE3iB,GAAiBhG,KAAKqM,QAKjF,IAAKrG,IAAgBmhB,GAAWC,EAAWxL,EAAM3V,EAAM/E,GAAW,CAE9D,GAAIoU,KAAkC2S,EAKlC,OAJAU,GACIA,EAAShB,GAAiBP,EAAWpnB,KAAKqM,QAAS+X,IACvDL,GAAcA,SACd/jB,KAAK4oB,yBAKL5oB,KAAKqM,QAAQ3H,SAAW,CAEhC,CACA,MAAMmkB,EAAoB7oB,KAAK8oB,aAAa1B,EAAWhD,IAC7B,IAAtByE,IAEJ7oB,KAAKyoB,UAAY,CACbrB,YACAhD,mBACGyE,GAEP7oB,KAAK+oB,iBACT,CACAA,cAAAA,GAAmB,CAMnB3jB,IAAAA,CAAKyO,EAASmV,GACV,OAAOhpB,KAAKipB,uBAAuB7jB,KAAKyO,EAASmV,EACrD,CACAjkB,OAAAA,GACS/E,KAAKqM,QAAQ6c,eAElBlpB,KAAKqM,QAAQpG,KAAO,YACpBjG,KAAKqM,QAAQrE,KAAO,SACxB,CACAsgB,qBAAAA,GACItoB,KAAKipB,uBAAyB,IAAItlB,SAASkQ,IACvC7T,KAAK4oB,uBAAyB/U,CAAO,GAE7C,EC/FJ,MAAMsV,GAAYA,CAACzpB,EAAMC,EAAIF,IAClBC,GAAQC,EAAKD,GAAQD,ECrBhC,SAAS2pB,GAAS3S,EAAG4S,EAAG7T,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDiB,EAAc,GAAT4S,EAAI5S,GAASjB,EACzBA,EAAI,GACG6T,EACP7T,EAAI,EAAI,EACDiB,GAAK4S,EAAI5S,IAAM,EAAI,EAAIjB,GAAK,EAChCiB,CACX,CCbA,SAAS6S,GAAajpB,EAAGC,GACrB,OAAQmW,GAAOA,EAAI,EAAInW,EAAID,CAC/B,CCSA,MAAMkpB,GAAiBA,CAAC7pB,EAAMC,EAAIsC,KAC9B,MAAMunB,EAAW9pB,EAAOA,EAClB+pB,EAAOxnB,GAAKtC,EAAKA,EAAK6pB,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAI7kB,KAAKoc,KAAKyI,EAAK,EAEnCC,GAAa,CAACzQ,GAAKL,GAAMmB,IAE/B,SAAS4P,GAAOxP,GACZ,MAAMlU,GAFYhE,EAEQkY,EAFFuP,GAAW3D,MAAM9f,GAASA,EAAKiR,KAAKjV,MAA1CA,MAIlB,GADA/C,EAAQuE,QAAQwC,GAAO,IAAIkU,0EACtB1W,QAAQwC,GACT,OAAO,EACX,IAAI2jB,EAAQ3jB,EAAKoR,MAAM8C,GAKvB,OAJIlU,IAAS8T,KAET6P,EFZR,SAAmB/hB,GAAwC,IAAvC,IAAEmS,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAE3C,GAAO1P,EACrDmS,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIrB,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKkB,EAGA,CACD,MAAMoP,EAAInP,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCxD,EAAI,EAAIyD,EAAYmP,EAC1BxQ,EAAMuQ,GAAS3S,EAAG4S,EAAGrP,EAAM,EAAI,GAC/BlB,EAAQsQ,GAAS3S,EAAG4S,EAAGrP,GACvBjB,EAAOqQ,GAAS3S,EAAG4S,EAAGrP,EAAM,EAAI,EACpC,MAVInB,EAAMC,EAAQC,EAAOmB,EAWzB,MAAO,CACHrB,IAAKjU,KAAK2C,MAAY,IAANsR,GAChBC,MAAOlU,KAAK2C,MAAc,IAARuR,GAClBC,KAAMnU,KAAK2C,MAAa,IAAPwR,GACjBxB,QAER,CEbgBsS,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACpqB,EAAMC,KACpB,MAAMoqB,EAAWJ,GAAOjqB,GAClBsqB,EAASL,GAAOhqB,GACtB,IAAKoqB,IAAaC,EACd,OAAOV,GAAa5pB,EAAMC,GAE9B,MAAMsqB,EAAU,IAAKF,GACrB,OAAQ9nB,IACJgoB,EAAQpR,IAAM0Q,GAAeQ,EAASlR,IAAKmR,EAAOnR,IAAK5W,GACvDgoB,EAAQnR,MAAQyQ,GAAeQ,EAASjR,MAAOkR,EAAOlR,MAAO7W,GAC7DgoB,EAAQlR,KAAOwQ,GAAeQ,EAAShR,KAAMiR,EAAOjR,KAAM9W,GAC1DgoB,EAAQ1S,MAAQ4R,GAAUY,EAASxS,MAAOyS,EAAOzS,MAAOtV,GACjD2W,GAAKtB,UAAU2S,GACzB,ECpCCC,GAAmBA,CAAC7pB,EAAGC,IAAO2B,GAAM3B,EAAED,EAAE4B,IACxCkoB,GAAO,mBAAAC,EAAA1oB,UAAAjB,OAAI4pB,EAAY,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAA5oB,UAAA4oB,GAAA,OAAKD,EAAa9gB,OAAO2gB,GAAiB,ECRjEK,GAAkB,IAAInpB,IAAI,CAAC,OAAQ,WCUzC,SAAS+nB,GAAU9oB,EAAGC,GAClB,OAAQmW,GAAM+T,GAAYnqB,EAAGC,EAAGmW,EACpC,CACA,SAASgU,GAASpqB,GACd,MAAiB,kBAANA,EACA8oB,GAEW,kBAAN9oB,EACL0kB,GAAmB1kB,GACpBipB,GACAnP,GAAMjD,KAAK7W,GACPypB,GACAY,GAELrkB,MAAMC,QAAQjG,GACZsqB,GAEW,kBAANtqB,EACL8Z,GAAMjD,KAAK7W,GAAKypB,GAAWc,GAE/BtB,EACX,CACA,SAASqB,GAAStqB,EAAGC,GACjB,MAAM6a,EAAS,IAAI9a,GACbwqB,EAAY1P,EAAO1a,OACnBqqB,EAAazqB,EAAEwD,KAAI,CAAC5B,EAAGvB,IAAM+pB,GAASxoB,EAATwoB,CAAYxoB,EAAG3B,EAAEI,MACpD,OAAQ+V,IACJ,IAAK,IAAI/V,EAAI,EAAGA,EAAImqB,EAAWnqB,IAC3Bya,EAAOza,GAAKoqB,EAAWpqB,GAAG+V,GAE9B,OAAO0E,CAAM,CAErB,CACA,SAASyP,GAAUvqB,EAAGC,GAClB,MAAM6a,EAAS,IAAK9a,KAAMC,GACpBwqB,EAAa,CAAC,EACpB,IAAK,MAAMjpB,KAAOsZ,OACC3b,IAAXa,EAAEwB,SAAiCrC,IAAXc,EAAEuB,KAC1BipB,EAAWjpB,GAAO4oB,GAASpqB,EAAEwB,GAAX4oB,CAAiBpqB,EAAEwB,GAAMvB,EAAEuB,KAGrD,OAAQI,IACJ,IAAK,MAAMJ,KAAOipB,EACd3P,EAAOtZ,GAAOipB,EAAWjpB,GAAKI,GAElC,OAAOkZ,CAAM,CAErB,CAcA,MAAMuP,GAAaA,CAACtE,EAAQ5Y,KACxB,MAAMud,EAAW1P,GAAQL,kBAAkBxN,GACrCwd,EAAcxQ,GAAoB4L,GAClC6E,EAAczQ,GAAoBhN,GAIxC,OAHuBwd,EAAYrQ,QAAQC,IAAIna,SAAWwqB,EAAYtQ,QAAQC,IAAIna,QAC9EuqB,EAAYrQ,QAAQR,MAAM1Z,SAAWwqB,EAAYtQ,QAAQR,MAAM1Z,QAC/DuqB,EAAYrQ,QAAQvD,OAAO3W,QAAUwqB,EAAYtQ,QAAQvD,OAAO3W,OAE3D8pB,GAAgBzoB,IAAIskB,KACpB6E,EAAY3oB,OAAO7B,QACnB8pB,GAAgBzoB,IAAI0L,KAChBwd,EAAY1oB,OAAO7B,OD5EpC,SAAuB2lB,EAAQ5Y,GAC3B,OAAI+c,GAAgBzoB,IAAIskB,GACZ3P,GAAOA,GAAK,EAAI2P,EAAS5Y,EAGzBiJ,GAAOA,GAAK,EAAIjJ,EAAS4Y,CAEzC,CCsEmB8E,CAAc9E,EAAQ5Y,GAE1B2c,GAAKQ,GA3BpB,SAAoBvE,EAAQ5Y,GACxB,IAAI5G,EACJ,MAAMukB,EAAgB,GAChBC,EAAW,CAAEjR,MAAO,EAAGS,IAAK,EAAGxD,OAAQ,GAC7C,IAAK,IAAI1W,EAAI,EAAGA,EAAI8M,EAAOlL,OAAO7B,OAAQC,IAAK,CAC3C,MAAMuF,EAAOuH,EAAOqN,MAAMna,GACpB2qB,EAAcjF,EAAOzL,QAAQ1U,GAAMmlB,EAASnlB,IAC5CqlB,EAAoD,QAArC1kB,EAAKwf,EAAO9jB,OAAO+oB,UAAiC,IAAPzkB,EAAgBA,EAAK,EACvFukB,EAAczqB,GAAK4qB,EACnBF,EAASnlB,IACb,CACA,OAAOklB,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAY3oB,QAASyoB,IAGhF7rB,GAAQ,EAAM,mBAAmBknB,WAAgB5Y,6KAC1C8b,GAAalD,EAAQ5Y,GAChC,ECvFJ,SAASge,GAAI9rB,EAAMC,EAAI8W,GACnB,GAAoB,kBAAT/W,GACO,kBAAPC,GACM,kBAAN8W,EACP,OAAO0S,GAAUzpB,EAAMC,EAAI8W,GAG/B,OADcgU,GAAS/qB,EAChB+rB,CAAM/rB,EAAMC,EACvB,CCRA,SAAS+rB,GAAsBC,EAAcnW,EAAG3S,GAC5C,MAAM+oB,EAAQhnB,KAAKD,IAAI6Q,EAFI,EAEwB,GACnD,OAAOvU,EAAkB4B,EAAU8oB,EAAaC,GAAQpW,EAAIoW,EAChE,CCNA,MAAMC,GAAiB,CAEnBC,UAAW,IACXC,QAAS,GACTC,KAAM,EACN9qB,SAAU,EAEVwD,SAAU,IACVunB,OAAQ,GACRC,eAAgB,GAEhBC,UAAW,CACPC,SAAU,IACV3U,QAAS,GAEb4U,UAAW,CACPD,SAAU,KACV3U,QAAS,IAGb6U,YAAa,IACbC,YAAa,GACbC,WAAY,IACZC,WAAY,GCnBVC,GAAU,KAChB,SAASC,GAAU9kB,GAA0I,IACrJ+kB,EACAC,GAFY,SAAEnoB,EAAWmnB,GAAennB,SAAQ,OAAEunB,EAASJ,GAAeI,OAAM,SAAE/qB,EAAW2qB,GAAe3qB,SAAQ,KAAE8qB,EAAOH,GAAeG,MAAOnkB,EAGvJ3I,EAAQwF,GAAY7D,EAAsBgrB,GAAeU,aAAc,8CACvE,IAAIO,EAAe,EAAIb,EAIvBa,EAAe3V,GAAM0U,GAAeW,WAAYX,GAAeY,WAAYK,GAC3EpoB,EAAWyS,GAAM0U,GAAeS,YAAaT,GAAeU,YAAaxrB,EAAsB2D,IAC3FooB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClC5jB,EAAQ8jB,EAAmBtoB,EAC3BrE,EAAI2sB,EAAmB9rB,EACvBZ,EAAI2sB,GAAgBF,EAAcD,GAClCvsB,EAAIqE,KAAKsoB,KAAKhkB,GACpB,OAAOwjB,GAAWrsB,EAAIC,EAAKC,CAAC,EAEhCssB,EAAcE,IACV,MACM7jB,EADmB6jB,EAAeD,EACPpoB,EAC3BoD,EAAIoB,EAAQhI,EAAWA,EACvBgG,EAAItC,KAAKiS,IAAIiW,EAAc,GAAKloB,KAAKiS,IAAIkW,EAAc,GAAKroB,EAC5DyoB,EAAIvoB,KAAKsoB,KAAKhkB,GACdiQ,EAAI8T,GAAgBroB,KAAKiS,IAAIkW,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBL,GAAU,GAAK,EAAI,KACzC5kB,EAAIZ,GAAKimB,GAAMhU,CAAC,IAOvCyT,EAAYG,GACEnoB,KAAKsoB,KAAKH,EAAeroB,KACxBqoB,EAAe7rB,GAAYwD,EAAW,GAC1C,KAEXmoB,EAAcE,GACAnoB,KAAKsoB,KAAKH,EAAeroB,IACIA,EAAWA,GAAvCxD,EAAW6rB,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYO,GAC3C,IAAI7tB,EAAS6tB,EACb,IAAK,IAAI1sB,EAAI,EAAGA,EAAI2sB,GAAgB3sB,IAChCnB,GAAkBqtB,EAASrtB,GAAUstB,EAAWttB,GAEpD,OAAOA,CACX,CAzByB+tB,CAAgBV,EAAUC,EAD1B,EAAInoB,GAGzB,GADAA,EAAW7D,EAAsB6D,GAC7BgO,MAAMqa,GACN,MAAO,CACHjB,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxBrnB,YAGH,CACD,MAAMonB,EAAYlnB,KAAKiS,IAAIkW,EAAc,GAAKf,EAC9C,MAAO,CACHF,YACAC,QAAwB,EAAfe,EAAmBloB,KAAKoc,KAAKgL,EAAOF,GAC7CpnB,WAER,CACJ,CACA,MAAM2oB,GAAiB,GAQvB,SAASJ,GAAgBF,EAAcD,GACnC,OAAOC,EAAenoB,KAAKoc,KAAK,EAAI8L,EAAeA,EACvD,CC3EA,MAAMS,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAaphB,EAASqhB,GAC3B,OAAOA,EAAKC,MAAM9rB,QAAyBrC,IAAjB6M,EAAQxK,IACtC,CAuCA,SAAS+rB,KAAgG,IAAzFC,EAAuBnsB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAGmqB,GAAeK,eAAgBD,EAAMvqB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAGmqB,GAAeI,OAC7F,MAAM5f,EAA6C,kBAA5BwhB,EACjB,CACE3B,eAAgB2B,EAChBzG,UAAW,CAAC,EAAG,GACf6E,UAEF4B,EACN,IAAI,UAAE1B,EAAS,UAAEE,GAAchgB,EAC/B,MAAM+Z,EAAS/Z,EAAQ+a,UAAU,GAC3B5Z,EAASnB,EAAQ+a,UAAU/a,EAAQ+a,UAAU3mB,OAAS,GAKtD4B,EAAQ,CAAEyD,MAAM,EAAOlG,MAAOwmB,IAC9B,UAAE0F,EAAS,QAAEC,EAAO,KAAEC,EAAI,SAAEtnB,EAAQ,SAAExD,EAAQ,uBAAE4sB,GAtD1D,SAA0BzhB,GACtB,IAAI0hB,EAAgB,CAChB7sB,SAAU2qB,GAAe3qB,SACzB4qB,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxBC,KAAMH,GAAeG,KACrB8B,wBAAwB,KACrBzhB,GAGP,IAAKohB,GAAaphB,EAASmhB,KACvBC,GAAaphB,EAASkhB,IACtB,GAAIlhB,EAAQ6f,eAAgB,CACxB,MAAMA,EAAiB7f,EAAQ6f,eACzBxf,EAAQ,EAAI9H,KAAK8b,IAAwB,IAAjBwL,GACxBJ,EAAYpf,EAAOA,EACnBqf,EAAU,EACZ5U,GAAM,IAAM,EAAG,GAAK9K,EAAQ4f,QAAU,IACtCrnB,KAAKoc,KAAK8K,GACdiC,EAAgB,IACTA,EACH/B,KAAMH,GAAeG,KACrBF,YACAC,UAER,KACK,CACD,MAAMiC,EAAUrB,GAAWtgB,GAC3B0hB,EAAgB,IACTA,KACAC,EACHhC,KAAMH,GAAeG,MAEzB+B,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFE,CAAiB,IAC5F5hB,EACHnL,UAAWH,EAAsBsL,EAAQnL,UAAY,KAEnDgtB,EAAkBhtB,GAAY,EAC9B4rB,EAAef,GAAW,EAAInnB,KAAKoc,KAAK8K,EAAYE,IACpDmC,EAAe3gB,EAAS4Y,EACxBgI,EAAsBrtB,EAAsB6D,KAAKoc,KAAK8K,EAAYE,IAQlEqC,EAAkBzpB,KAAK0R,IAAI6X,GAAgB,EAOjD,IAAIG,EACJ,GAPAnC,IAAcA,EAAYkC,EACpBxC,GAAeM,UAAUC,SACzBP,GAAeM,UAAU1U,SAC/B4U,IAAcA,EAAYgC,EACpBxC,GAAeQ,UAAUD,SACzBP,GAAeQ,UAAU5U,SAE3BqV,EAAe,EAAG,CAClB,MAAMyB,EAActB,GAAgBmB,EAAqBtB,GAEzDwB,EAAiB9Y,IACb,MAAMoX,EAAWhoB,KAAKsoB,KAAKJ,EAAesB,EAAsB5Y,GAChE,OAAQhI,EACJof,IACOsB,EACCpB,EAAesB,EAAsBD,GACrCI,EACA3pB,KAAKkS,IAAIyX,EAAc/Y,GACvB2Y,EAAevpB,KAAK4pB,IAAID,EAAc/Y,GAAG,CAE7D,MACK,GAAqB,IAAjBsX,EAELwB,EAAiB9Y,GAAMhI,EACnB5I,KAAKsoB,KAAKkB,EAAsB5Y,IAC3B2Y,GACID,EAAkBE,EAAsBD,GAAgB3Y,OAEpE,CAED,MAAMiZ,EAAoBL,EAAsBxpB,KAAKoc,KAAK8L,EAAeA,EAAe,GACxFwB,EAAiB9Y,IACb,MAAMoX,EAAWhoB,KAAKsoB,KAAKJ,EAAesB,EAAsB5Y,GAE1DkZ,EAAW9pB,KAAKuG,IAAIsjB,EAAoBjZ,EAAG,KACjD,OAAQhI,EACHof,IACKsB,EACEpB,EAAesB,EAAsBD,GACrCvpB,KAAK+pB,KAAKD,GACVD,EACIN,EACAvpB,KAAKgqB,KAAKF,IAClBD,CAAiB,CAEjC,CACA,MAAM7oB,EAAY,CACdipB,mBAAoBf,GAAyBppB,GAAmB,KAChEmB,KAAO2P,IACH,MAAM3S,EAAUyrB,EAAc9Y,GAC9B,GAAKsY,EAmBDzrB,EAAMyD,KAAO0P,GAAK9Q,MAnBO,CACzB,IAAIoqB,EAAkB,EAMlBhC,EAAe,IACfgC,EACU,IAANtZ,EACM3U,EAAsBqtB,GACtBxC,GAAsB4C,EAAe9Y,EAAG3S,IAEtD,MAAMksB,EAA2BnqB,KAAK0R,IAAIwY,IAAoB3C,EACxD6C,EAA+BpqB,KAAK0R,IAAI9I,EAAS3K,IAAYwpB,EACnEhqB,EAAMyD,KACFipB,GAA4BC,CACpC,CAKA,OADA3sB,EAAMzC,MAAQyC,EAAMyD,KAAO0H,EAAS3K,EAC7BR,CAAK,EAEhBqY,SAAUA,KACN,MAAMmU,EAAqBjqB,KAAKuG,IAAIxF,EAAsBC,GAAYF,GAChEU,EAASe,GAAsB1H,GAAamG,EAAUC,KAAKgpB,EAAqBpvB,GAAUG,OAAOivB,EAAoB,IAC3H,OAAOA,EAAqB,MAAQzoB,CAAM,GAGlD,OAAOR,CACX,CChKA,SAASqpB,GAAOpnB,GAAiK,IAAhK,UAAEuf,EAAS,SAAElmB,EAAW,EAAG,MAAEguB,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEnkB,EAAG,IAAExG,EAAG,UAAE0nB,EAAY,GAAG,UAAEF,GAAYtkB,EAC3K,MAAMue,EAASgB,EAAU,GACnB/kB,EAAQ,CACVyD,MAAM,EACNlG,MAAOwmB,GAGLmJ,EAAmBttB,QACTzC,IAAR2L,EACOxG,OACCnF,IAARmF,GAEGC,KAAK0R,IAAInL,EAAMlJ,GAAK2C,KAAK0R,IAAI3R,EAAM1C,GAD/BkJ,EAC0CxG,EAEzD,IAAI6qB,EAAYN,EAAQhuB,EACxB,MAAMuuB,EAAQrJ,EAASoJ,EACjBhiB,OAA0BhO,IAAjB8vB,EAA6BG,EAAQH,EAAaG,GAK7DjiB,IAAWiiB,IACXD,EAAYhiB,EAAS4Y,GACzB,MAAMsJ,EAAala,IAAOga,EAAY5qB,KAAKsoB,KAAK1X,EAAI2Z,GAC9CQ,EAAcna,GAAMhI,EAASkiB,EAAUla,GACvCoa,EAAiBpa,IACnB,MAAMtM,EAAQwmB,EAAUla,GAClBqa,EAASF,EAAWna,GAC1BnT,EAAMyD,KAAOlB,KAAK0R,IAAIpN,IAAUmjB,EAChChqB,EAAMzC,MAAQyC,EAAMyD,KAAO0H,EAASqiB,CAAM,EAQ9C,IAAIC,EACAC,EACJ,MAAMC,EAAsBxa,IAjCLvT,SAkCAI,EAAMzC,WAlCSJ,IAAR2L,GAAqBlJ,EAAIkJ,QAAiB3L,IAARmF,GAAqB1C,EAAI0C,KAoCrFmrB,EAAsBta,EACtBua,EAAWnC,GAAO,CACdxG,UAAW,CAAC/kB,EAAMzC,MAAO2vB,EAAgBltB,EAAMzC,QAC/CsB,SAAUwqB,GAAsBiE,EAAYna,EAAGnT,EAAMzC,OACrDmsB,QAASqD,EACTtD,UAAWuD,EACXhD,YACAF,cACF,EAGN,OADA6D,EAAmB,GACZ,CACHnB,mBAAoB,KACpBhpB,KAAO2P,IAOH,IAAIya,GAAkB,EAUtB,OATKF,QAAoCvwB,IAAxBswB,IACbG,GAAkB,EAClBL,EAAcpa,GACdwa,EAAmBxa,SAMKhW,IAAxBswB,GAAqCta,GAAKsa,EACnCC,EAASlqB,KAAK2P,EAAIsa,KAGxBG,GAAmBL,EAAcpa,GAC3BnT,EACX,EAGZ,CClFA,MAAM4F,GAAuB0N,GAAY,IAAM,EAAG,EAAG,GAC/CzN,GAAwByN,GAAY,EAAG,EAAG,IAAM,GAChDxN,GAA0BwN,GAAY,IAAM,EAAG,IAAM,GCIrDua,GAAe,CACjBnoB,OAAQ/I,EACRiJ,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN4O,UAAS,GACT3O,QAAO,GACPC,OAAM,GACNqO,UAAS,GACTpO,QAAO,GACPqO,WAAUA,IAERuZ,GAA8BxtB,IAChC,GAAIwD,EAAmBxD,GAAa,CAEhCxD,EAAgC,IAAtBwD,EAAWlC,OAAc,2DACnC,MAAO2vB,EAAIC,EAAIC,EAAIC,GAAM5tB,EACzB,OAAOgT,GAAYya,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAf5tB,GAEZxD,OAAuCK,IAA7B0wB,GAAavtB,GAA2B,wBAAwBA,MACnEutB,GAAavtB,IAEjBA,CAAU,ECKrB,SAAS6tB,GAAYC,EAAOtV,GAAqD,IAA3ChE,MAAOuZ,GAAU,EAAI,KAAE1oB,EAAI,MAAEyjB,GAAO/pB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMivB,EAAcF,EAAMhwB,OAM1B,GALAtB,EAAUwxB,IAAgBxV,EAAO1a,OAAQ,wDAKrB,IAAhBkwB,EACA,MAAO,IAAMxV,EAAO,GACxB,GAAoB,IAAhBwV,GAAqBxV,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAMyV,EAAmBH,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOI,UACnB1V,EAAS,IAAIA,GAAQ0V,WAEzB,MAAMC,EAlDV,SAAsB3V,EAAQnT,EAAM+oB,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAevF,GAC9ByF,EAAY9V,EAAO1a,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIuwB,EAAWvwB,IAAK,CAChC,IAAI+qB,EAAQuF,EAAa7V,EAAOza,GAAIya,EAAOza,EAAI,IAC/C,GAAIsH,EAAM,CACN,MAAMkpB,EAAiB7qB,MAAMC,QAAQ0B,GAAQA,EAAKtH,IAAM1B,EAAOgJ,EAC/DyjB,EAAQtB,GAAK+G,EAAgBzF,EACjC,CACAqF,EAAOlyB,KAAK6sB,EAChB,CACA,OAAOqF,CACX,CAqCmBK,CAAahW,EAAQnT,EAAMyjB,GACpCwF,EAAYH,EAAOrwB,OACnB2wB,EAAgBnvB,IAClB,GAAI2uB,GAAoB3uB,EAAIwuB,EAAM,GAC9B,OAAOtV,EAAO,GAClB,IAAIza,EAAI,EACR,GAAIuwB,EAAY,EACZ,KAAOvwB,EAAI+vB,EAAMhwB,OAAS,KAClBwB,EAAIwuB,EAAM/vB,EAAI,IADOA,KAKjC,MAAM2wB,EAAkB5xB,EAASgxB,EAAM/vB,GAAI+vB,EAAM/vB,EAAI,GAAIuB,GACzD,OAAO6uB,EAAOpwB,GAAG2wB,EAAgB,EAErC,OAAOX,EACAzuB,GAAMmvB,EAAaja,GAAMsZ,EAAM,GAAIA,EAAME,EAAc,GAAI1uB,IAC5DmvB,CACV,CCvEA,SAASE,GAAc7yB,GACnB,MAAM8yB,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQC,GACxB,MAAMrmB,EAAMomB,EAAOA,EAAO9wB,OAAS,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAK8wB,EAAW9wB,IAAK,CACjC,MAAM+wB,EAAiBhyB,EAAS,EAAG+xB,EAAW9wB,GAC9C6wB,EAAO3yB,KAAKuqB,GAAUhe,EAAK,EAAGsmB,GAClC,CACJ,CDLIC,CAAWH,EAAQ9yB,EAAIgC,OAAS,GACzB8wB,CACX,CEIA,SAASnK,GAASvf,GAA4E,IAA3E,SAAEnD,EAAW,IAAK0iB,UAAWuK,EAAc,MAAEC,EAAK,KAAE5pB,EAAO,aAAcH,EAKxF,MAAMgqB,ECfa7pB,IACZ3B,MAAMC,QAAQ0B,IAA4B,kBAAZA,EAAK,GDclB8pB,CAAc9pB,GAChCA,EAAKnE,IAAIssB,IACTA,GAA2BnoB,GAK3B3F,EAAQ,CACVyD,MAAM,EACNlG,MAAO+xB,EAAe,IAKpBI,EE7BV,SAA8BR,EAAQ7sB,GAClC,OAAO6sB,EAAO1tB,KAAKmuB,GAAMA,EAAIttB,GACjC,CF2B0ButB,CAGtBL,GAASA,EAAMnxB,SAAWkxB,EAAelxB,OACnCmxB,EACAN,GAAcK,GAAiBjtB,GAC/BwtB,EAAoB1B,GAAYuB,EAAeJ,EAAgB,CACjE3pB,KAAM3B,MAAMC,QAAQurB,GACdA,GA9BSvvB,EA+BKqvB,EA/BGvrB,EA+BayrB,EA9BjCvvB,EAAOuB,KAAI,IAAMuC,GAAU+B,KAAWpJ,OAAO,EAAGuD,EAAO7B,OAAS,MAD3E,IAAuB6B,EAAQ8D,EAiC3B,MAAO,CACHyoB,mBAAoBnqB,EACpBmB,KAAO2P,IACHnT,EAAMzC,MAAQsyB,EAAkB1c,GAChCnT,EAAMyD,KAAO0P,GAAK9Q,EACXrC,GAGnB,CG9CA,MAAM8vB,GAAmBvnB,IACrB,MAAMwnB,EAAgBvqB,IAAA,IAAC,UAAEsB,GAAWtB,EAAA,OAAK+C,EAAOzB,EAAU,EAC1D,MAAO,CACHjH,MAAOA,IAAMoJ,EAAMV,OAAOwnB,GAAe,GACzC9uB,KAAMA,IAAMiI,EAAY6mB,GAKxBlnB,IAAKA,IAAOX,EAAUnB,aAAemB,EAAUpB,UAAY5E,EAAK2G,MACnE,ECCCmnB,GAAa,CACfC,MAAOrD,GACPA,QAAO,GACPsD,MAAOnL,GACPA,UAAWA,GACXwG,OAAMA,IAEJ4E,GAAqB9Y,GAAYA,EAAU,IAMjD,MAAM+Y,WAA4B1K,GAC9BhoB,WAAAA,CAAYsM,GACR4Z,MAAM5Z,GAINrM,KAAK0yB,SAAW,KAIhB1yB,KAAK2yB,WAAa,KAIlB3yB,KAAKiS,YAAc,EAInBjS,KAAK4yB,cAAgB,EAMrB5yB,KAAK6yB,iBAAmB,UAIxB7yB,KAAKyE,UAAY,KACjBzE,KAAKqC,MAAQ,OAKbrC,KAAKsD,KAAO,KAGR,GAFAtD,KAAKgjB,SAAS1e,SACdtE,KAAKmoB,WAAY,EACE,SAAfnoB,KAAKqC,MACL,OACJrC,KAAK8yB,WACL,MAAM,OAAEC,GAAW/yB,KAAKqM,QACxB0mB,GAAUA,GAAQ,EAEtB,MAAM,KAAEnX,EAAI,YAAExH,EAAW,QAAE1D,EAAO,UAAE0W,GAAcpnB,KAAKqM,QACjD2mB,GAAkC,OAAZtiB,QAAgC,IAAZA,OAAqB,EAASA,EAAQmT,mBAAqBA,GAE3G7jB,KAAKgjB,SAAW,IAAIgQ,EAAmB5L,GADpB6L,CAACnL,EAAmB1D,IAAkBpkB,KAAK0oB,oBAAoBZ,EAAmB1D,IACvCxI,EAAMxH,EAAa1D,GACjF1Q,KAAKgjB,SAASkB,iBAClB,CACAnf,OAAAA,GACIkhB,MAAMlhB,UAEF/E,KAAKyoB,WACLxQ,OAAOib,OAAOlzB,KAAKyoB,UAAWzoB,KAAK8oB,aAAa9oB,KAAKyoB,UAAUrB,WAEvE,CACA0B,YAAAA,CAAaqK,GACT,MAAM,KAAEltB,EAAO,YAAW,OAAE2hB,EAAS,EAAC,YAAEM,EAAc,EAAC,WAAEL,EAAU,SAAE3mB,EAAW,GAAOlB,KAAKqM,QACtF+mB,EAAmBptB,EAAYC,GAC/BA,EACAosB,GAAWpsB,IAASmhB,GAO1B,IAAIiM,EACAC,EAKAF,IAAqBhM,IACK,kBAAnB+L,EAAY,KACnBE,EAAwBlJ,GAAKqI,GAAmBhH,GAAI2H,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAMvtB,EAAYwtB,EAAiB,IAAKpzB,KAAKqM,QAAS+a,UAAW+L,IAK9C,WAAftL,IACAyL,EAAoBF,EAAiB,IAC9BpzB,KAAKqM,QACR+a,UAAW,IAAI+L,GAAatC,UAC5B3vB,UAAWA,KAWkB,OAAjC0E,EAAUipB,qBACVjpB,EAAUipB,mBAAqBlpB,EAAsBC,IAEzD,MAAM,mBAAEipB,GAAuBjpB,EACzB2tB,EAAmB1E,EAAqB3G,EAE9C,MAAO,CACHtiB,YACA0tB,oBACAD,wBACAxE,qBACA0E,mBACAC,cAPkBD,GAAoB3L,EAAS,GAAKM,EAS5D,CACAa,cAAAA,GACI,MAAM,SAAEf,GAAW,GAAShoB,KAAKqM,QACjCgF,GAAiBE,aACjBvR,KAAKgF,OACyB,WAA1BhF,KAAK6yB,kBAAkC7K,EAIvChoB,KAAKqC,MAAQrC,KAAK6yB,iBAHlB7yB,KAAKiF,OAKb,CACAwuB,IAAAA,CAAKtqB,GAA2B,IAAhBuqB,EAAMhyB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GAClB,MAAM,SAAE8jB,GAAaxlB,KAErB,IAAKwlB,EAAU,CACX,MAAM,UAAE4B,GAAcpnB,KAAKqM,QAC3B,MAAO,CAAEvG,MAAM,EAAMlG,MAAOwnB,EAAUA,EAAU3mB,OAAS,GAC7D,CACA,MAAM,cAAE2jB,EAAa,UAAExe,EAAS,kBAAE0tB,EAAiB,sBAAED,EAAqB,UAAEjM,EAAS,mBAAEyH,EAAkB,cAAE2E,EAAa,iBAAED,GAAsB/N,EAChJ,GAAuB,OAAnBxlB,KAAKyE,UACL,OAAOmB,EAAUC,KAAK,GAC1B,MAAM,MAAEoiB,EAAK,OAAEL,EAAM,WAAEC,EAAU,YAAEK,EAAW,SAAES,GAAa3oB,KAAKqM,QAO9DrM,KAAKwE,MAAQ,EACbxE,KAAKyE,UAAYG,KAAKuG,IAAInL,KAAKyE,UAAW0E,GAErCnJ,KAAKwE,MAAQ,IAClBxE,KAAKyE,UAAYG,KAAKuG,IAAIhC,EAAYqqB,EAAgBxzB,KAAKwE,MAAOxE,KAAKyE,YAGvEivB,EACA1zB,KAAKiS,YAAc9I,EAEI,OAAlBnJ,KAAK0yB,SACV1yB,KAAKiS,YAAcjS,KAAK0yB,SAMxB1yB,KAAKiS,YACDrN,KAAK2C,MAAM4B,EAAYnJ,KAAKyE,WAAazE,KAAKwE,MAGtD,MAAMmvB,EAAmB3zB,KAAKiS,YAAcgW,GAASjoB,KAAKwE,OAAS,EAAI,GAAK,GACtEovB,EAAiB5zB,KAAKwE,OAAS,EAC/BmvB,EAAmB,EACnBA,EAAmBH,EACzBxzB,KAAKiS,YAAcrN,KAAKD,IAAIgvB,EAAkB,GAE3B,aAAf3zB,KAAKqC,OAA0C,OAAlBrC,KAAK0yB,WAClC1yB,KAAKiS,YAAcuhB,GAEvB,IAAIK,EAAU7zB,KAAKiS,YACf6hB,EAAiBluB,EACrB,GAAIgiB,EAAQ,CAMR,MAAMnoB,EAAWmF,KAAKuG,IAAInL,KAAKiS,YAAauhB,GAAiBD,EAK7D,IAAIQ,EAAmBnvB,KAAKovB,MAAMv0B,GAK9Bw0B,EAAoBx0B,EAAW,GAK9Bw0B,GAAqBx0B,GAAY,IAClCw0B,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBnvB,KAAKuG,IAAI4oB,EAAkBnM,EAAS,GAIhCnkB,QAAQswB,EAAmB,KAE3B,YAAflM,GACAoM,EAAoB,EAAIA,EACpB/L,IACA+L,GAAqB/L,EAAcqL,IAGnB,WAAf1L,IACLiM,EAAiBR,IAGzBO,EAAU1c,GAAM,EAAG,EAAG8c,GAAqBV,CAC/C,CAMA,MAAMlxB,EAAQuxB,EACR,CAAE9tB,MAAM,EAAOlG,MAAOwnB,EAAU,IAChC0M,EAAejuB,KAAKguB,GACtBR,IACAhxB,EAAMzC,MAAQyzB,EAAsBhxB,EAAMzC,QAE9C,IAAI,KAAEkG,GAASzD,EACVuxB,GAAyC,OAAvB/E,IACnB/oB,EACI9F,KAAKwE,OAAS,EACRxE,KAAKiS,aAAeuhB,EACpBxzB,KAAKiS,aAAe,GAElC,MAAMiiB,EAAwC,OAAlBl0B,KAAK0yB,WACb,aAAf1yB,KAAKqC,OAAwC,YAAfrC,KAAKqC,OAAuByD,GAU/D,OATIouB,QAAyC10B,IAAlB4kB,IACvB/hB,EAAMzC,MAAQ+nB,GAAiBP,EAAWpnB,KAAKqM,QAAS+X,IAExDuE,GACAA,EAAStmB,EAAMzC,OAEfs0B,GACAl0B,KAAKm0B,SAEF9xB,CACX,CACA,YAAIqC,GACA,MAAM,SAAE8gB,GAAaxlB,KACrB,OAAOwlB,EAAWzkB,EAAsBykB,EAASqJ,oBAAsB,CAC3E,CACA,QAAItqB,GACA,OAAOxD,EAAsBf,KAAKiS,YACtC,CACA,QAAI1N,CAAKuH,GACLA,EAAUjL,EAAsBiL,GAChC9L,KAAKiS,YAAcnG,EACG,OAAlB9L,KAAK0yB,UAAoC,IAAf1yB,KAAKwE,MAC/BxE,KAAK0yB,SAAW5mB,EAEX9L,KAAKo0B,SACVp0B,KAAKyE,UAAYzE,KAAKo0B,OAAOlpB,MAAQY,EAAU9L,KAAKwE,MAE5D,CACA,SAAIA,GACA,OAAOxE,KAAK4yB,aAChB,CACA,SAAIpuB,CAAM6vB,GACN,MAAMC,EAAat0B,KAAK4yB,gBAAkByB,EAC1Cr0B,KAAK4yB,cAAgByB,EACjBC,IACAt0B,KAAKuE,KAAOxD,EAAsBf,KAAKiS,aAE/C,CACAjN,IAAAA,GAII,GAHKhF,KAAKgjB,SAASJ,aACf5iB,KAAKgjB,SAASyB,UAEbzkB,KAAKyoB,UAEN,YADAzoB,KAAK6yB,iBAAmB,WAG5B,GAAI7yB,KAAKmoB,UACL,OACJ,MAAM,OAAEiM,EAASjC,GAAe,OAAEoC,EAAM,UAAE9vB,GAAczE,KAAKqM,QACxDrM,KAAKo0B,SACNp0B,KAAKo0B,OAASA,GAAQjrB,GAAcnJ,KAAKyzB,KAAKtqB,MAElDorB,GAAUA,IACV,MAAMrpB,EAAMlL,KAAKo0B,OAAOlpB,MACF,OAAlBlL,KAAK0yB,SACL1yB,KAAKyE,UAAYyG,EAAMlL,KAAK0yB,SAEtB1yB,KAAKyE,UAGS,aAAfzE,KAAKqC,QACVrC,KAAKyE,UAAYyG,GAHjBlL,KAAKyE,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAYzE,KAAKuoB,gBAKhE,aAAfvoB,KAAKqC,OACLrC,KAAKsoB,wBAETtoB,KAAK2yB,WAAa3yB,KAAKyE,UACvBzE,KAAK0yB,SAAW,KAKhB1yB,KAAKqC,MAAQ,UACbrC,KAAKo0B,OAAOlyB,OAChB,CACA+C,KAAAA,GACI,IAAI2B,EACC5G,KAAKyoB,WAIVzoB,KAAKqC,MAAQ,SACbrC,KAAK0yB,SAAuC,QAA3B9rB,EAAK5G,KAAKiS,mBAAgC,IAAPrL,EAAgBA,EAAK,GAJrE5G,KAAK6yB,iBAAmB,QAKhC,CACA3tB,QAAAA,GACuB,YAAflF,KAAKqC,OACLrC,KAAKgF,OAEThF,KAAK6yB,iBAAmB7yB,KAAKqC,MAAQ,WACrCrC,KAAK0yB,SAAW,IACpB,CACAyB,MAAAA,GACIn0B,KAAK8yB,WACL9yB,KAAKqC,MAAQ,WACb,MAAM,WAAE0hB,GAAe/jB,KAAKqM,QAC5B0X,GAAcA,GAClB,CACAzf,MAAAA,GAC4B,OAApBtE,KAAK2yB,YACL3yB,KAAKyzB,KAAKzzB,KAAK2yB,YAEnB3yB,KAAK8yB,WACL9yB,KAAKsoB,uBACT,CACAwK,QAAAA,GACI9yB,KAAKqC,MAAQ,OACbrC,KAAKw0B,aACLx0B,KAAK4oB,yBACL5oB,KAAKsoB,wBACLtoB,KAAKyE,UAAYzE,KAAK2yB,WAAa,KACnC3yB,KAAKgjB,SAAS1e,SACd+M,GAAiBE,YACrB,CACAijB,UAAAA,GACSx0B,KAAKo0B,SAEVp0B,KAAKo0B,OAAO9wB,OACZtD,KAAKo0B,YAAS50B,EAClB,CACAk0B,MAAAA,CAAOnvB,GAEH,OADAvE,KAAKyE,UAAY,EACVzE,KAAKyzB,KAAKlvB,GAAM,EAC3B,EC7XJ,MAAMkwB,GAAoB,IAAIrzB,IAAI,CAC9B,UACA,WACA,SACA,cCLJ,MAAMszB,GAA8Br1B,GAAK,IAAM4Y,OAAOE,eAAeC,KAAK3K,QAAQyK,UAAW,aCgE7F,MAAMyc,GAA6B,CAC/B/d,WAAU,GACVD,UAAS,GACTK,UAASA,IAKb,MAAM4d,WAA6B7M,GAC/BhoB,WAAAA,CAAYsM,GACR4Z,MAAM5Z,GACN,MAAM,KAAEuP,EAAI,YAAExH,EAAW,QAAE1D,EAAO,UAAE0W,GAAcpnB,KAAKqM,QACvDrM,KAAKgjB,SAAW,IAAIgD,GAAqBoB,GAAW,CAACU,EAAmB1D,IAAkBpkB,KAAK0oB,oBAAoBZ,EAAmB1D,IAAgBxI,EAAMxH,EAAa1D,GACzK1Q,KAAKgjB,SAASkB,iBAClB,CACA4E,YAAAA,CAAa1B,EAAWhD,GACpB,IAAI,SAAE1f,EAAW,IAAG,MAAEktB,EAAK,KAAE5pB,EAAI,KAAE/B,EAAI,YAAEmO,EAAW,KAAEwH,EAAI,UAAEnX,GAAezE,KAAKqM,QAKhF,IAAK+H,EAAY3B,QAAU2B,EAAY3B,MAAM5P,QACzC,OAAO,EAjBnB,IA1CuCwJ,EA0E/B,GARoB,kBAATrE,GACPnB,KACkBmB,KAzBZ2sB,KA0BN3sB,EAAO2sB,GAA2B3sB,IApElChC,GAD2BqG,EA0EGrM,KAAKqM,SAzEfpG,OACP,WAAjBoG,EAAQpG,OACPwB,EAAuB4E,EAAQrE,MAuEiB,CAC7C,MAAM,WAAE+b,EAAU,SAAE4E,EAAQ,YAAEvU,EAAW,QAAE1D,KAAYrE,GAAYrM,KAAKqM,QAClEwoB,EAvElB,SAA8BzN,EAAW/a,GAMrC,MAAMyoB,EAAkB,IAAIrC,GAAoB,IACzCpmB,EACH+a,YACAQ,OAAQ,EACRK,MAAO,EACPjiB,aAAa,IAEjB,IAAI3D,EAAQ,CAAEyD,MAAM,EAAOlG,MAAOwnB,EAAU,IAC5C,MAAM2N,EAAwB,GAK9B,IAAIvf,EAAI,EACR,MAAQnT,EAAMyD,MAAQ0P,EA/BN,KAgCZnT,EAAQyyB,EAAgBpB,OAAOle,GAC/Buf,EAAsBn2B,KAAKyD,EAAMzC,OACjC4V,GAvCY,GAyChB,MAAO,CACHoc,WAAOpyB,EACP4nB,UAAW2N,EACXrwB,SAAU8Q,EA5CE,GA6CZxN,KAAM,SAEd,CAwC0CgtB,CAAqB5N,EAAW/a,GAKrC,KAJzB+a,EAAYyN,EAAsBzN,WAIpB3mB,SACV2mB,EAAU,GAAKA,EAAU,IAE7B1iB,EAAWmwB,EAAsBnwB,SACjCktB,EAAQiD,EAAsBjD,MAC9B5pB,EAAO6sB,EAAsB7sB,KAC7B/B,EAAO,WACX,CACA,MAAMnC,ECpHd,SAA6B4M,EAASukB,EAAW7N,GAA4G,IAAjG,MAAEa,EAAQ,EAAC,SAAEvjB,EAAW,IAAG,OAAEkjB,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAE7f,EAAO,YAAW,MAAE4pB,GAAQlwB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtJ,MAAMwzB,EAAkB,CAAE,CAACD,GAAY7N,GACnCwK,IACAsD,EAAgB3D,OAASK,GAC7B,MAAMxrB,EAASoC,EAAwBR,EAAMtD,GAIzC2B,MAAMC,QAAQF,KACd8uB,EAAgB9uB,OAASA,GACzBuC,EAAY/I,OACZyR,GAAiBG,QAErB,MAAM1N,EAAY4M,EAAQ1J,QAAQkuB,EAAiB,CAC/CjN,QACAvjB,WACA0B,OAASC,MAAMC,QAAQF,GAAmB,SAATA,EACjCyZ,KAAM,OACNsV,WAAYvN,EAAS,EACrBwN,UAA0B,YAAfvN,EAA2B,YAAc,WAOxD,OALIlf,EAAY/I,OACZkE,EAAUJ,SAAS2xB,SAAQ,KACvBhkB,GAAiBG,OAAO,IAGzB1N,CACX,CDyF0BwxB,CAAoBlhB,EAAY3B,MAAM5P,QAAS+Y,EAAMwL,EAAW,IAAKpnB,KAAKqM,QAAS3H,WAAUktB,QAAO5pB,SAyBtH,OAtBAlE,EAAUW,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAYzE,KAAKuoB,gBAChFvoB,KAAKu1B,iBACLpxB,EAAeL,EAAW9D,KAAKu1B,iBAC/Bv1B,KAAKu1B,qBAAkB/1B,GAWvBsE,EAAUoC,SAAW,KACjB,MAAM,WAAE6d,GAAe/jB,KAAKqM,QAC5B+H,EAAYrS,IAAI4lB,GAAiBP,EAAWpnB,KAAKqM,QAAS+X,IAC1DL,GAAcA,IACd/jB,KAAKsE,SACLtE,KAAK4oB,wBAAwB,EAG9B,CACH9kB,YACAY,WACAktB,QACA3rB,OACA+B,OACAof,UAAWA,EAEnB,CACA,YAAI1iB,GACA,MAAM,SAAE8gB,GAAaxlB,KACrB,IAAKwlB,EACD,OAAO,EACX,MAAM,SAAE9gB,GAAa8gB,EACrB,OAAOzkB,EAAsB2D,EACjC,CACA,QAAIH,GACA,MAAM,SAAEihB,GAAaxlB,KACrB,IAAKwlB,EACD,OAAO,EACX,MAAM,UAAE1hB,GAAc0hB,EACtB,OAAOzkB,EAAsB+C,EAAUmO,aAAe,EAC1D,CACA,QAAI1N,CAAKuH,GACL,MAAM,SAAE0Z,GAAaxlB,KACrB,IAAKwlB,EACD,OACJ,MAAM,UAAE1hB,GAAc0hB,EACtB1hB,EAAUmO,YAAcpR,EAAsBiL,EAClD,CACA,SAAItH,GACA,MAAM,SAAEghB,GAAaxlB,KACrB,IAAKwlB,EACD,OAAO,EACX,MAAM,UAAE1hB,GAAc0hB,EACtB,OAAO1hB,EAAU0xB,YACrB,CACA,SAAIhxB,CAAM6vB,GACN,MAAM,SAAE7O,GAAaxlB,KACrB,IAAKwlB,EACD,OACJ,MAAM,UAAE1hB,GAAc0hB,EACtB1hB,EAAU0xB,aAAenB,CAC7B,CACA,SAAIhyB,GACA,MAAM,SAAEmjB,GAAaxlB,KACrB,IAAKwlB,EACD,MAAO,OACX,MAAM,UAAE1hB,GAAc0hB,EACtB,OAAO1hB,EAAU2xB,SACrB,CACA,aAAIhxB,GACA,MAAM,SAAE+gB,GAAaxlB,KACrB,IAAKwlB,EACD,OAAO,KACX,MAAM,UAAE1hB,GAAc0hB,EAGtB,OAAO1hB,EAAUW,SACrB,CAKAN,cAAAA,CAAeC,GACX,GAAKpE,KAAKyoB,UAGL,CACD,MAAM,SAAEjD,GAAaxlB,KACrB,IAAKwlB,EACD,OAAOxmB,EACX,MAAM,UAAE8E,GAAc0hB,EACtBrhB,EAAeL,EAAWM,EAC9B,MARIpE,KAAKu1B,gBAAkBnxB,EAS3B,OAAOpF,CACX,CACAgG,IAAAA,GACI,GAAIhF,KAAKmoB,UACL,OACJ,MAAM,SAAE3C,GAAaxlB,KACrB,IAAKwlB,EACD,OACJ,MAAM,UAAE1hB,GAAc0hB,EACM,aAAxB1hB,EAAU2xB,WACVz1B,KAAKsoB,wBAETxkB,EAAUkB,MACd,CACAC,KAAAA,GACI,MAAM,SAAEugB,GAAaxlB,KACrB,IAAKwlB,EACD,OACJ,MAAM,UAAE1hB,GAAc0hB,EACtB1hB,EAAUmB,OACd,CACA3B,IAAAA,GAGI,GAFAtD,KAAKgjB,SAAS1e,SACdtE,KAAKmoB,WAAY,EACE,SAAfnoB,KAAKqC,MACL,OACJrC,KAAK4oB,yBACL5oB,KAAKsoB,wBACL,MAAM,SAAE9C,GAAaxlB,KACrB,IAAKwlB,EACD,OACJ,MAAM,UAAE1hB,EAAS,UAAEsjB,EAAS,SAAE1iB,EAAQ,KAAEuB,EAAI,KAAE+B,EAAI,MAAE4pB,GAAUpM,EAC9D,GAA4B,SAAxB1hB,EAAU2xB,WACc,aAAxB3xB,EAAU2xB,UACV,OAUJ,GAAIz1B,KAAKuE,KAAM,CACX,MAAM,YAAE6P,EAAW,SAAEuU,EAAQ,WAAE5E,EAAU,QAAErT,KAAYrE,GAAYrM,KAAKqM,QAClEyoB,EAAkB,IAAIrC,GAAoB,IACzCpmB,EACH+a,YACA1iB,WACAuB,OACA+B,OACA4pB,QACA5rB,aAAa,IAEX0vB,EAAa70B,EAAsBb,KAAKuE,MAC9C6P,EAAYZ,gBAAgBshB,EAAgBpB,OAAOgC,EAhQ3C,IAgQqE91B,MAAOk1B,EAAgBpB,OAAOgC,GAAY91B,MAhQ/G,GAiQZ,CACA,MAAM,OAAEmzB,GAAW/yB,KAAKqM,QACxB0mB,GAAUA,IACV/yB,KAAKsE,QACT,CACAY,QAAAA,GACI,MAAM,SAAEsgB,GAAaxlB,KAChBwlB,GAELA,EAAS1hB,UAAUqwB,QACvB,CACA7vB,MAAAA,GACI,MAAM,SAAEkhB,GAAaxlB,KAChBwlB,GAELA,EAAS1hB,UAAUQ,QACvB,CACA,eAAOqxB,CAAStpB,GACZ,MAAM,YAAE+H,EAAW,KAAEwH,EAAI,YAAEsM,EAAW,WAAEL,EAAU,QAAEkE,EAAO,KAAE9lB,GAASoG,EACtE,IAAK+H,IACAA,EAAY3B,SACX2B,EAAY3B,MAAM5P,mBAAmB+N,aACvC,OAAO,EAEX,MAAM,SAAE+X,EAAQ,kBAAEiN,GAAsBxhB,EAAY3B,MAAMzP,WAC1D,OAAQ0xB,MACJ9Y,GACA6Y,GAAkB3yB,IAAI8Z,KAKrB+M,IACAiN,IACA1N,GACc,WAAfL,GACY,IAAZkE,GACS,YAAT9lB,CACR,EEvTJ,MAAM4vB,GAAoB,CACtB5vB,KAAM,SACN6lB,UAAW,IACXC,QAAS,GACTI,UAAW,IAQT2J,GAAsB,CACxB7vB,KAAM,YACNvB,SAAU,IAMRsD,GAAO,CACT/B,KAAM,YACN+B,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBtD,SAAU,IAERqxB,GAAuBA,CAACC,EAAQnuB,KAAoB,IAAlB,UAAEuf,GAAWvf,EACjD,OAAIuf,EAAU3mB,OAAS,EACZq1B,GAEFxhB,GAAexS,IAAIk0B,GACjBA,EAASje,WAAW,SAxBG,CAClC9R,KAAM,SACN6lB,UAAW,IACXC,QAAoB,IAsBa3E,EAAU,GAtBnB,EAAIxiB,KAAKoc,KAAK,KAAO,GAC7CmL,UAAW,IAsBD0J,GAEH7tB,EAAI,EC3Bf,MAAMiuB,GAAqB,SAACra,EAAMhc,EAAO4N,GAAM,IAAE/H,EAAU/D,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGgP,EAAOhP,UAAAjB,OAAA,EAAAiB,UAAA,QAAAlC,EAAE02B,EAASx0B,UAAAjB,OAAA,EAAAiB,UAAA,QAAAlC,EAAA,OAAMukB,IACtF,MAAMoS,EAAkB3wB,EAAmBC,EAAYmW,IAAS,CAAC,EAM3DqM,EAAQkO,EAAgBlO,OAASxiB,EAAWwiB,OAAS,EAK3D,IAAI,QAAE4L,EAAU,GAAMpuB,EACtBouB,GAAoBhzB,EAAsBonB,GAC1C,IAAI5b,EAAU,CACV+a,UAAW/gB,MAAMC,QAAQkH,GAAUA,EAAS,CAAC,KAAMA,GACnDxF,KAAM,UACN9G,SAAUtB,EAAM4C,iBACb2zB,EACHlO,OAAQ4L,EACRlL,SAAW1mB,IACPrC,EAAMmC,IAAIE,GACVk0B,EAAgBxN,UAAYwN,EAAgBxN,SAAS1mB,EAAE,EAE3D8hB,WAAYA,KACRA,IACAoS,EAAgBpS,YAAcoS,EAAgBpS,YAAY,EAE9DnI,OACAxH,YAAaxU,EACb8Q,QAASwlB,OAAY12B,EAAYkR,IClCzC,SAA4B7I,GAA2I,IAA1I,KAAEuuB,EAAMnO,MAAOoO,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE5O,EAAM,WAAEC,EAAU,YAAEK,EAAW,KAAExoB,EAAI,QAAEm0B,KAAYpuB,GAAYoC,EACjK,QAASoQ,OAAOyV,KAAKjoB,GAAYhF,MACrC,EDsCSg2B,CAAoBN,KACrB9pB,EAAU,IACHA,KACA0pB,GAAqBna,EAAMvP,KAQlCA,EAAQ3H,WACR2H,EAAQ3H,SAAW7D,EAAsBwL,EAAQ3H,WAEjD2H,EAAQ6b,cACR7b,EAAQ6b,YAAcrnB,EAAsBwL,EAAQ6b,mBAEnC1oB,IAAjB6M,EAAQ3M,OACR2M,EAAQ+a,UAAU,GAAK/a,EAAQ3M,MAEnC,IAAIg3B,GAAa,EAwBjB,KAvBqB,IAAjBrqB,EAAQpG,MACc,IAArBoG,EAAQ3H,WAAmB2H,EAAQ6b,eACpC7b,EAAQ3H,SAAW,EACG,IAAlB2H,EAAQ4b,QACRyO,GAAa,KAGjBphB,IACAlW,KACAs3B,GAAa,EACbrqB,EAAQ3H,SAAW,EACnB2H,EAAQ4b,MAAQ,GAMpB5b,EAAQ6c,cAAgBiN,EAAgBlwB,OAASkwB,EAAgBnuB,KAM7D0uB,IAAeR,QAA6B12B,IAAhBI,EAAM+B,MAAqB,CACvD,MAAMyiB,EAAgBuD,GAAiBtb,EAAQ+a,UAAW+O,GAC1D,QAAsB32B,IAAlB4kB,EAOA,OANA9Y,EAAMV,QAAO,KACTyB,EAAQsc,SAASvE,GACjB/X,EAAQ0X,YAAY,IAIjB,IAAI5e,EAAsB,GAEzC,CAMA,OAAK+wB,GAAatB,GAAqBe,SAAStpB,GACrC,IAAIuoB,GAAqBvoB,GAGzB,IAAIomB,GAAoBpmB,EACnC,CACH,EEnGD,SAASsqB,GAAoB9uB,EAAoChG,GAAK,IAAxC,cAAE+0B,EAAa,eAAEC,GAAgBhvB,EAC3D,MAAMivB,EAAcF,EAAcze,eAAetW,KAAgC,IAAxBg1B,EAAeh1B,GAExE,OADAg1B,EAAeh1B,IAAO,EACfi1B,CACX,CACA,SAASC,GAAc30B,EAAe40B,GAAmE,IAA9C,MAAE/O,EAAQ,EAAC,mBAAEgP,EAAkB,KAAEhxB,GAAMvE,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClG,IAAIkF,EACJ,IAAI,WAAEnB,EAAarD,EAAc2zB,uBAAsB,cAAEmB,KAAkB1pB,GAAWwpB,EAClFC,IACAxxB,EAAawxB,GACjB,MAAM5zB,EAAa,GACb8zB,EAAqBlxB,GACvB7D,EAAcg1B,gBACdh1B,EAAcg1B,eAAeC,WAAWpxB,GAC5C,IAAK,MAAMpE,KAAO2L,EAAQ,CACtB,MAAM5N,EAAQwC,EAAcuS,SAAS9S,EAAgD,QAA1C+E,EAAKxE,EAAck1B,aAAaz1B,UAAyB,IAAP+E,EAAgBA,EAAK,MAC5G2wB,EAAc/pB,EAAO3L,GAC3B,QAAoBrC,IAAhB+3B,GACCJ,GACGR,GAAqBQ,EAAoBt1B,GAC7C,SAEJ,MAAMs0B,EAAkB,CACpBlO,WACGziB,EAAmBC,GAAc,CAAC,EAAG5D,IAM5C,IAAIq0B,GAAY,EAChB,GAAIhzB,OAAOs0B,uBAAwB,CAC/B,MAAMC,EAAWpiB,GAAqBjT,GACtC,GAAIq1B,EAAU,CACV,MAAMhzB,EAAYvB,OAAOs0B,uBAAuBC,EAAU51B,EAAKyJ,GAC7C,OAAd7G,IACA0xB,EAAgB1xB,UAAYA,EAC5ByxB,GAAY,EAEpB,CACJ,CACAphB,GAAqB1S,EAAeP,GACpCjC,EAAMsC,MAAM+zB,GAAmBp0B,EAAKjC,EAAO23B,EAAan1B,EAAcs1B,oBAAsBnjB,GAAezS,IAAID,GACzG,CAAEoE,MAAM,GACRkwB,EAAiB/zB,EAAe8zB,IACtC,MAAMpyB,EAAYlE,EAAMkE,UACpBA,GACAT,EAAWzE,KAAKkF,EAExB,CAQA,OAPIozB,GACAvzB,QAAQC,IAAIP,GAAY+B,MAAK,KACzBkG,EAAMV,QAAO,KACTssB,GlFlDhB,SAAmB90B,EAAeO,GAC9B,MAAM6iB,EAAWziB,EAAeX,EAAeO,GAC/C,IAAI,cAAEu0B,EAAgB,CAAC,EAAC,WAAEzxB,EAAa,CAAC,KAAM+H,GAAWgY,GAAY,CAAC,EACtEhY,EAAS,IAAKA,KAAW0pB,GACzB,IAAK,MAAMr1B,KAAO2L,EAEdiH,GAAerS,EAAeP,GmFjBAI,EnFgBauL,EAAO3L,GmFd/C2S,GAAkBvS,GAAKA,EAAEA,EAAExB,OAAS,IAAM,EAAIwB,IAFnBA,KnFmBtC,CkF0CiC01B,CAAUv1B,EAAe80B,EAAc,GAC1D,IAGH7zB,CACX,CEpEA,SAASu0B,GAAex1B,EAAey1B,GAAuB,IAAdxrB,EAAO3K,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,IAAIkF,EACJ,MAAM4e,EAAWziB,EAAeX,EAAey1B,EAA0B,SAAjBxrB,EAAQpG,KACjB,QAAxCW,EAAKxE,EAAc01B,uBAAoC,IAAPlxB,OAAgB,EAASA,EAAGhE,YAC7EpD,GACN,IAAI,WAAEiG,EAAarD,EAAc2zB,wBAA0B,CAAC,GAAMvQ,GAAY,CAAC,EAC3EnZ,EAAQ4qB,qBACRxxB,EAAa4G,EAAQ4qB,oBAMzB,MAAMc,EAAevS,EACf,IAAM7hB,QAAQC,IAAImzB,GAAc30B,EAAeojB,EAAUnZ,IACzD,IAAM1I,QAAQkQ,UAKdmkB,EAAqB51B,EAAc61B,iBAAmB71B,EAAc61B,gBAAgB3Y,KACpF,WAAsB,IAArB4Y,EAAYx2B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAE40B,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsB/wB,EAClE,OAkBZ,SAAyBrD,EAAey1B,GAAgF,IAAvEvB,EAAa50B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAAG60B,EAAe70B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAAG80B,EAAgB90B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAAG2K,EAAO3K,UAAAjB,OAAA,EAAAiB,UAAA,QAAAlC,EAClH,MAAM6D,EAAa,GACb80B,GAAsB/1B,EAAc61B,gBAAgB3Y,KAAO,GAAKiX,EAChE6B,EAA+C,IAArB5B,EAC1B,WAAM,OAAJ90B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,GAAU60B,CAAe,EAC9B,WAAM,OAAK4B,GAATz2B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,GAA+B60B,CAAe,EAUzD,OATAlwB,MAAM3G,KAAK0C,EAAc61B,iBACpBI,KAAKC,IACL/1B,SAAQ,CAACsL,EAAOnN,KACjBmN,EAAMzN,OAAO,iBAAkBy3B,GAC/Bx0B,EAAWzE,KAAKg5B,GAAe/pB,EAAOgqB,EAAS,IACxCxrB,EACH4b,MAAOqO,EAAgB8B,EAAwB13B,KAChD0E,MAAK,IAAMyI,EAAMzN,OAAO,oBAAqBy3B,KAAU,IAEvDl0B,QAAQC,IAAIP,EACvB,CAlCmBk1B,CAAgBn2B,EAAey1B,EAASvB,EAAgB4B,EAAc3B,EAAiBC,EAAkBnqB,EACpH,EACE,IAAM1I,QAAQkQ,WAKd,KAAEuiB,GAAS3wB,EACjB,GAAI2wB,EAAM,CACN,MAAOoC,EAAOC,GAAiB,mBAATrC,EAChB,CAAC2B,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQpzB,MAAK,IAAMqzB,KAC9B,CAEI,OAAO90B,QAAQC,IAAI,CAACm0B,IAAgBC,EAAmB3rB,EAAQ4b,QAEvE,CAkBA,SAASqQ,GAAgBj4B,EAAGC,GACxB,OAAOD,EAAEq4B,iBAAiBp4B,EAC9B,CC/DA,SAASq4B,GAAe9yB,EAAMuM,GAC1B,IAAK/L,MAAMC,QAAQ8L,GACf,OAAO,EACX,MAAMwmB,EAAaxmB,EAAK3R,OACxB,GAAIm4B,IAAe/yB,EAAKpF,OACpB,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIk4B,EAAYl4B,IAC5B,GAAI0R,EAAK1R,KAAOmF,EAAKnF,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,SAASm4B,GAAe52B,GACpB,MAAoB,kBAANA,GAAkBoE,MAAMC,QAAQrE,EAClD,CCLA,MAAM62B,GAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,GAAe,CAAC,aAAcD,ICN9BE,GAAkBD,GAAat4B,OACrC,SAASw4B,GAAkB72B,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAc82B,sBAAuB,CACtC,MAAMC,EAAU/2B,EAAcwL,QACxBqrB,GAAkB72B,EAAcwL,SAChC,CAAC,EAIP,YAHoCpO,IAAhC4C,EAAcM,MAAM02B,UACpBD,EAAQC,QAAUh3B,EAAcM,MAAM02B,SAEnCD,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIz4B,EAAI,EAAGA,EAAIs4B,GAAiBt4B,IAAK,CACtC,MAAMkb,EAAOmd,GAAar4B,GACpB24B,EAAOj3B,EAAcM,MAAMkZ,IAC7Bid,GAAeQ,KAAkB,IAATA,KACxBF,EAAQvd,GAAQyd,EAExB,CACA,OAAOF,CACX,CChBA,MAAMG,GAAuB,IAAIR,IAAsBjI,UACjD0I,GAAoBT,GAAqBr4B,OAC/C,SAAS+4B,GAAYp3B,GACjB,OAAQiB,GAAeM,QAAQC,IAAIP,EAAWQ,KAAIgE,IAAA,IAAC,UAAE/D,EAAS,QAAEuI,GAASxE,EAAA,OCR7E,SAA8BzF,EAAeO,GAA0B,IAE/DmB,EAFiDuI,EAAO3K,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAU,EAAchC,OAAO,iBAAkBuC,GAEnC0D,MAAMC,QAAQ3D,GAAa,CAC3B,MAAMU,EAAaV,EAAWkB,KAAKg0B,GAAYD,GAAex1B,EAAey1B,EAASxrB,KACtFvI,EAAYH,QAAQC,IAAIP,EAC5B,MACK,GAA0B,kBAAfV,EACZmB,EAAY8zB,GAAex1B,EAAeO,EAAY0J,OAErD,CACD,MAAMotB,EAA2C,oBAAf92B,EAC5BI,EAAeX,EAAeO,EAAY0J,EAAQzJ,QAClDD,EACNmB,EAAYH,QAAQC,IAAImzB,GAAc30B,EAAeq3B,EAAoBptB,GAC7E,CACA,OAAOvI,EAAUsB,MAAK,KAClBhD,EAAchC,OAAO,oBAAqBuC,EAAW,GAE7D,CDXkF+2B,CAAqBt3B,EAAe0B,EAAWuI,EAAQ,IACzI,CACA,SAASstB,GAAqBv3B,GAC1B,IAAI4E,EAAUwyB,GAAYp3B,GACtBC,EAAQu3B,KACRC,GAAkB,EAKtB,MAAMC,EAA2B7zB,GAAS,CAACuD,EAAK7G,KAC5C,IAAIiE,EACJ,MAAM4e,EAAWziB,EAAeX,EAAeO,EAAqB,SAATsD,EACZ,QAAxCW,EAAKxE,EAAc01B,uBAAoC,IAAPlxB,OAAgB,EAASA,EAAGhE,YAC7EpD,GACN,GAAIgmB,EAAU,CACV,MAAM,WAAE/f,EAAU,cAAEyxB,KAAkB1pB,GAAWgY,EACjDhc,EAAM,IAAKA,KAAQgE,KAAW0pB,EAClC,CACA,OAAO1tB,CAAG,EAmBd,SAASuwB,EAAeC,GACpB,MAAM,MAAEt3B,GAAUN,EACZ+2B,EAAUF,GAAkB72B,EAAcwL,SAAW,CAAC,EAKtDvK,EAAa,GAKb42B,EAAc,IAAI74B,IAMxB,IAAI84B,EAAkB,CAAC,EAKnBC,EAAsBp0B,IAO1B,IAAK,IAAIrF,EAAI,EAAGA,EAAI64B,GAAmB74B,IAAK,CACxC,MAAMuF,EAAOqzB,GAAqB54B,GAC5B05B,EAAY/3B,EAAM4D,GAClBozB,OAAuB75B,IAAhBkD,EAAMuD,GACbvD,EAAMuD,GACNkzB,EAAQlzB,GACRo0B,EAAgBxB,GAAeQ,GAK/BiB,EAAcr0B,IAAS+zB,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsBz5B,GAO1B,IAAI85B,EAAcnB,IAASF,EAAQlzB,IAC/BozB,IAAS32B,EAAMuD,IACfo0B,EAeJ,GAXIG,GACAX,GACAz3B,EAAcq4B,yBACdD,GAAc,GAMlBJ,EAAUxD,cAAgB,IAAKsD,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElBjB,IAASe,EAAUM,UAErB14B,EAAoBq3B,IACJ,mBAATA,EACP,SAOJ,MAAMsB,EAAmBC,GAAuBR,EAAUM,SAAUrB,GACpE,IAAIwB,EAAoBF,GAEnB10B,IAAS+zB,GACNI,EAAUG,WACTC,GACDH,GAEH35B,EAAIy5B,GAAuBE,EAC5BS,GAAuB,EAK3B,MAAMC,EAAiB10B,MAAMC,QAAQ+yB,GAAQA,EAAO,CAACA,GAKrD,IAAI2B,EAAiBD,EAAexxB,OAAOuwB,EAAwB7zB,GAAO,CAAC,IACvD,IAAhBq0B,IACAU,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMb,EAC9Bc,EAAU,IACTD,KACAD,GAEDG,EAAiBt5B,IACnBg5B,GAAoB,EAChBZ,EAAYn4B,IAAID,KAChBi5B,GAAuB,EACvBb,EAAY5vB,OAAOxI,IAEvBu4B,EAAUvD,eAAeh1B,IAAO,EAChC,MAAMuS,EAAchS,EAAcuS,SAAS9S,GACvCuS,IACAA,EAAYgnB,WAAY,EAAK,EAErC,IAAK,MAAMv5B,KAAOq5B,EAAS,CACvB,MAAMr1B,EAAOm1B,EAAen5B,GACtBuQ,EAAO6oB,EAAmBp5B,GAEhC,GAAIq4B,EAAgB/hB,eAAetW,GAC/B,SAIJ,IAAIw5B,GAAkB,EAElBA,EADA7mB,GAAkB3O,IAAS2O,GAAkBpC,IAC1BumB,GAAe9yB,EAAMuM,GAGtBvM,IAASuM,EAE3BipB,OACa77B,IAATqG,GAA+B,OAATA,EAEtBs1B,EAAct5B,GAIdo4B,EAAY/5B,IAAI2B,QAGNrC,IAATqG,GAAsBo0B,EAAYn4B,IAAID,GAK3Cs5B,EAAct5B,GAOdu4B,EAAUxD,cAAc/0B,IAAO,CAEvC,CAKAu4B,EAAUM,SAAWrB,EACrBe,EAAUa,mBAAqBD,EAI3BZ,EAAUG,WACVL,EAAkB,IAAKA,KAAoBc,IAE3CnB,GAAmBz3B,EAAck5B,wBACjCT,GAAoB,GAQpBA,MAFyBL,GAAeG,IACIG,IAE5Cz3B,EAAWzE,QAAQm8B,EAAel3B,KAAKC,IAAS,CAC5CA,UAAWA,EACXuI,QAAS,CAAEpG,YAGvB,CAMA,GAAIg0B,EAAY3a,KAAM,CAClB,MAAMic,EAAoB,CAAC,EAK3B,GAA6B,mBAAlB74B,EAAM02B,QAAuB,CACpC,MAAMoC,EAAoBz4B,EAAeX,EAAeiE,MAAMC,QAAQ5D,EAAM02B,SACtE12B,EAAM02B,QAAQ,GACd12B,EAAM02B,SACRoC,GAAqBA,EAAkB/1B,aACvC81B,EAAkB91B,WAAa+1B,EAAkB/1B,WAEzD,CACAw0B,EAAY13B,SAASV,IACjB,MAAM45B,EAAiBr5B,EAAcs5B,cAAc75B,GAC7CuS,EAAchS,EAAcuS,SAAS9S,GACvCuS,IACAA,EAAYgnB,WAAY,GAE5BG,EAAkB15B,GAA0B,OAAnB45B,QAA8C,IAAnBA,EAA4BA,EAAiB,IAAI,IAEzGp4B,EAAWzE,KAAK,CAAEkF,UAAWy3B,GACjC,CACA,IAAII,EAAgBl4B,QAAQJ,EAAW5C,QAOvC,OANIo5B,IACmB,IAAlBn3B,EAAM02B,SAAqB12B,EAAM02B,UAAY12B,EAAMsE,SACnD5E,EAAcq4B,yBACfkB,GAAgB,GAEpB9B,GAAkB,EACX8B,EAAgB30B,EAAQ3D,GAAcM,QAAQkQ,SACzD,CAkBA,MAAO,CACHkmB,iBACA6B,UAhBJ,SAAmB31B,EAAMs0B,GACrB,IAAI3zB,EAEJ,GAAIvE,EAAM4D,GAAMs0B,WAAaA,EACzB,OAAO52B,QAAQkQ,UAEsB,QAAxCjN,EAAKxE,EAAc61B,uBAAoC,IAAPrxB,GAAyBA,EAAGrE,SAASsL,IAAY,IAAIjH,EAAI,OAAuC,QAA/BA,EAAKiH,EAAMupB,sBAAmC,IAAPxwB,OAAgB,EAASA,EAAGg1B,UAAU31B,EAAMs0B,EAAS,IAC9Ml4B,EAAM4D,GAAMs0B,SAAWA,EACvB,MAAMl3B,EAAa02B,EAAe9zB,GAClC,IAAK,MAAMpE,KAAOQ,EACdA,EAAMR,GAAK+0B,cAAgB,CAAC,EAEhC,OAAOvzB,CACX,EAIIw4B,mBA7QJ,SAA4BC,GACxB90B,EAAU80B,EAAa15B,EAC3B,EA4QIi1B,SAAUA,IAAMh1B,EAChB05B,MAAOA,KACH15B,EAAQu3B,KACRC,GAAkB,CAAI,EAGlC,CACA,SAASe,GAAuBxoB,EAAMvM,GAClC,MAAoB,kBAATA,EACAA,IAASuM,IAEX/L,MAAMC,QAAQT,KACX8yB,GAAe9yB,EAAMuM,EAGrC,CACA,SAAS4pB,KACL,MAAO,CACHzB,SAFyB74B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GAGzBk1B,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBoE,mBAAoB,CAAC,EAE7B,CACA,SAASrB,KACL,MAAO,CACH5yB,QAASg1B,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZG,SAAUH,KACVI,UAAWJ,KACXK,WAAYL,KACZM,KAAMN,KAEd,CErVA,MAAMO,GACFx8B,WAAAA,CAAYy8B,GACRx8B,KAAKy8B,WAAY,EACjBz8B,KAAKw8B,KAAOA,CAChB,CACA5xB,MAAAA,GAAW,ECHf,IAAI8xB,GAAK,ECCT,MAAMr5B,GAAa,CACfS,UAAW,CACPy4B,QCDR,cAA+BA,GAM3Bx8B,WAAAA,CAAYy8B,GACRvW,MAAMuW,GACNA,EAAKpF,iBAAmBoF,EAAKpF,eAAiBuC,GAAqB6C,GACvE,CACAG,mCAAAA,GACI,MAAM,QAAE31B,GAAYhH,KAAKw8B,KAAKx5B,WAC1BhB,EAAoBgF,KACpBhH,KAAK48B,gBAAkB51B,EAAQ61B,UAAU78B,KAAKw8B,MAEtD,CAIAM,KAAAA,GACI98B,KAAK28B,qCACT,CACA/xB,MAAAA,GACI,MAAM,QAAE5D,GAAYhH,KAAKw8B,KAAKx5B,YACtBgE,QAAS+1B,GAAgB/8B,KAAKw8B,KAAKQ,WAAa,CAAC,EACrDh2B,IAAY+1B,GACZ/8B,KAAK28B,qCAEb,CACAM,OAAAA,GACI,IAAIr2B,EACJ5G,KAAKw8B,KAAKpF,eAAe2E,QACO,QAA/Bn1B,EAAK5G,KAAK48B,uBAAoC,IAAPh2B,GAAyBA,EAAGwR,KAAKpY,KAC7E,ID9BAs8B,KAAM,CACFC,QDLR,cAAmCA,GAC/Bx8B,WAAAA,GACIkmB,SAASvkB,WACT1B,KAAK08B,GAAKA,IACd,CACA9xB,MAAAA,GACI,IAAK5K,KAAKw8B,KAAK1E,gBACX,OACJ,MAAM,UAAEoF,EAAS,eAAEC,GAAmBn9B,KAAKw8B,KAAK1E,iBACxCoF,UAAWE,GAAkBp9B,KAAKw8B,KAAKa,qBAAuB,CAAC,EACvE,IAAKr9B,KAAKw8B,KAAKpF,gBAAkB8F,IAAcE,EAC3C,OAEJ,MAAME,EAAgBt9B,KAAKw8B,KAAKpF,eAAewE,UAAU,QAASsB,GAC9DC,IAAmBD,GACnBI,EAAcl4B,MAAK,KACf+3B,EAAen9B,KAAK08B,GAAG,GAGnC,CACAI,KAAAA,GACI,MAAM,SAAES,EAAQ,eAAEJ,GAAmBn9B,KAAKw8B,KAAK1E,iBAAmB,CAAC,EAC/DqF,GACAA,EAAen9B,KAAK08B,IAEpBa,IACAv9B,KAAKi9B,QAAUM,EAASv9B,KAAK08B,IAErC,CACAO,OAAAA,GAAY,KGhChB,SAASO,GAAYhwB,EAAQyF,EAAW9S,GAAsC,IAA7BkM,EAAO3K,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAEqL,SAAS,GAElE,OADAS,EAAOgD,iBAAiByC,EAAW9S,EAASkM,GACrC,IAAMmB,EAAO+B,oBAAoB0D,EAAW9S,EACvD,CCDA,SAASs9B,GAAiBtwB,GACtB,MAAO,CACHuwB,MAAO,CACH1xB,EAAGmB,EAAMwwB,MACT1xB,EAAGkB,EAAMywB,OAGrB,CCNA,SAASC,GAAgBrwB,EAAQyF,EAAW9S,EAASkM,GACjD,OAAOmxB,GAAYhwB,EAAQyF,EDMP9S,IACZgN,GAAUY,GAAiBZ,IAAUhN,EAAQgN,EAAOswB,GAAiBtwB,ICPvC2wB,CAAe39B,GAAUkM,EACnE,CCAA,SAAS0xB,GAAuBl2B,GAAgC,IAA/B,IAAEmI,EAAG,KAAED,EAAI,MAAEE,EAAK,OAAEE,GAAStI,EAC1D,MAAO,CACHmE,EAAG,CAAEb,IAAK4E,EAAMpL,IAAKsL,GACrBhE,EAAG,CAAEd,IAAK6E,EAAKrL,IAAKwL,GAE5B,CCFA,SAAS6tB,GAAWC,GAChB,OAAOA,EAAKt5B,IAAMs5B,EAAK9yB,GAC3B,CAIA,SAAS+yB,GAAch1B,EAAO+R,EAAQzN,GAAsB,IAAd4Y,EAAM1kB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,GACnDwH,EAAMkd,OAASA,EACfld,EAAMi1B,YAAchV,GAAUlO,EAAO9P,IAAK8P,EAAOtW,IAAKuE,EAAMkd,QAC5Dld,EAAMsO,MAAQwmB,GAAWxwB,GAAUwwB,GAAW/iB,GAC9C/R,EAAMk1B,UACFjV,GAAU3b,EAAOrC,IAAKqC,EAAO7I,IAAKuE,EAAMkd,QAAUld,EAAMi1B,aACvDj1B,EAAMsO,OAjBG,OAiBmBtO,EAAMsO,OAhBzB,QAiBV9E,MAAMxJ,EAAMsO,UACZtO,EAAMsO,MAAQ,IAEbtO,EAAMk1B,YAlBO,KAmBdl1B,EAAMk1B,WAlBQ,KAmBd1rB,MAAMxJ,EAAMk1B,cACZl1B,EAAMk1B,UAAY,EAE1B,CACA,SAASC,GAAan1B,EAAO+R,EAAQzN,EAAQ4Y,GACzC8X,GAAch1B,EAAM8C,EAAGiP,EAAOjP,EAAGwB,EAAOxB,EAAGoa,EAASA,EAAOpH,aAAUxf,GACrE0+B,GAAch1B,EAAM+C,EAAGgP,EAAOhP,EAAGuB,EAAOvB,EAAGma,EAASA,EAAOnH,aAAUzf,EACzE,CACA,SAAS8+B,GAAiB9wB,EAAQ+wB,EAAU3wB,GACxCJ,EAAOrC,IAAMyC,EAAOzC,IAAMozB,EAASpzB,IACnCqC,EAAO7I,IAAM6I,EAAOrC,IAAM6yB,GAAWO,EACzC,CAKA,SAASC,GAAyBhxB,EAAQ8D,EAAQ1D,GAC9CJ,EAAOrC,IAAMmG,EAAOnG,IAAMyC,EAAOzC,IACjCqC,EAAO7I,IAAM6I,EAAOrC,IAAM6yB,GAAW1sB,EACzC,CACA,SAASmtB,GAAqBjxB,EAAQ8D,EAAQ1D,GAC1C4wB,GAAyBhxB,EAAOxB,EAAGsF,EAAOtF,EAAG4B,EAAO5B,GACpDwyB,GAAyBhxB,EAAOvB,EAAGqF,EAAOrF,EAAG2B,EAAO3B,EACxD,CCjDA,MAWMyyB,GAAYA,KAAA,CACd1yB,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,KCVzC,SAASg6B,GAASr/B,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCFA,SAASs/B,GAAgBpnB,GACrB,YAAiBhY,IAAVgY,GAAiC,IAAVA,CAClC,CACA,SAASqnB,GAAQh3B,GAA4B,IAA3B,MAAE2P,EAAK,OAAE2G,EAAM,OAAEC,GAAQvW,EACvC,OAAS+2B,GAAgBpnB,KACpBonB,GAAgBzgB,KAChBygB,GAAgBxgB,EACzB,CACA,SAAS0gB,GAAax8B,GAClB,OAAQu8B,GAASv8B,IACby8B,GAAez8B,IACfA,EAAOuc,GACPvc,EAAOyb,QACPzb,EAAO0b,SACP1b,EAAO2b,SACP3b,EAAOic,OACPjc,EAAOkc,KACf,CACA,SAASugB,GAAez8B,GACpB,OAAO08B,GAAc18B,EAAO0J,IAAMgzB,GAAc18B,EAAO2J,EAC3D,CACA,SAAS+yB,GAAcp/B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAASq/B,GAAWvB,EAAOlmB,EAAO2mB,GAG9B,OAAOA,EADQ3mB,GADYkmB,EAAQS,EAGvC,CAIA,SAASe,GAAgBxB,EAAOU,EAAW5mB,EAAO2mB,EAAagB,GAI3D,YAHiB3/B,IAAb2/B,IACAzB,EAAQuB,GAAWvB,EAAOyB,EAAUhB,IAEjCc,GAAWvB,EAAOlmB,EAAO2mB,GAAeC,CACnD,CAIA,SAASgB,GAAenB,GAAuD,IAAjDG,EAAS18B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAAG8V,EAAK9V,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAAGy8B,EAAWz8B,UAAAjB,OAAA,EAAAiB,UAAA,QAAAlC,EAAE2/B,EAAQz9B,UAAAjB,OAAA,EAAAiB,UAAA,QAAAlC,EACzEy+B,EAAK9yB,IAAM+zB,GAAgBjB,EAAK9yB,IAAKizB,EAAW5mB,EAAO2mB,EAAagB,GACpElB,EAAKt5B,IAAMu6B,GAAgBjB,EAAKt5B,IAAKy5B,EAAW5mB,EAAO2mB,EAAagB,EACxE,CAIA,SAASE,GAAcC,EAAGz3B,GAAY,IAAV,EAAEmE,EAAC,EAAEC,GAAGpE,EAChCu3B,GAAeE,EAAItzB,EAAGA,EAAEoyB,UAAWpyB,EAAEwL,MAAOxL,EAAEmyB,aAC9CiB,GAAeE,EAAIrzB,EAAGA,EAAEmyB,UAAWnyB,EAAEuL,MAAOvL,EAAEkyB,YAClD,CACA,MAAMoB,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAAcxB,EAAMxf,GACzBwf,EAAK9yB,IAAM8yB,EAAK9yB,IAAMsT,EACtBwf,EAAKt5B,IAAMs5B,EAAKt5B,IAAM8Z,CAC1B,CAMA,SAASihB,GAAczB,EAAM0B,EAAeC,EAAWT,GAA4B,IAAlBU,EAAUn+B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,GAG1E09B,GAAenB,EAAM0B,EAAeC,EAFhBzW,GAAU8U,EAAK9yB,IAAK8yB,EAAKt5B,IAAKk7B,GAEUV,EAChE,CAIA,SAASW,GAAaR,EAAKhoB,GACvBooB,GAAcJ,EAAItzB,EAAGsL,EAAUtL,EAAGsL,EAAU6G,OAAQ7G,EAAUE,MAAOF,EAAU0H,SAC/E0gB,GAAcJ,EAAIrzB,EAAGqL,EAAUrL,EAAGqL,EAAU8G,OAAQ9G,EAAUE,MAAOF,EAAU2H,QACnF,CCjHA,SAAS4H,GAAmBkZ,EAAUC,GAClC,OAAOjC,GNeX,SAA4BL,EAAOsC,GAC/B,IAAKA,EACD,OAAOtC,EACX,MAAMuC,EAAUD,EAAe,CAAEh0B,EAAG0xB,EAAM3tB,KAAM9D,EAAGyxB,EAAM1tB,MACnDkwB,EAAcF,EAAe,CAAEh0B,EAAG0xB,EAAMztB,MAAOhE,EAAGyxB,EAAMvtB,SAC9D,MAAO,CACHH,IAAKiwB,EAAQh0B,EACb8D,KAAMkwB,EAAQj0B,EACdmE,OAAQ+vB,EAAYj0B,EACpBgE,MAAOiwB,EAAYl0B,EAE3B,CM1BmCm0B,CAAmBJ,EAASjwB,wBAAyBkwB,GACxF,CCJA,MAAMI,GAAmBv4B,IAAiB,IAAhB,QAAEhF,GAASgF,EACjC,OAAOhF,EAAUA,EAAQw9B,cAAcC,YAAc,IAAI,ECF7D,SAASC,GAAYC,GACjB,OAAQA,GACW,kBAARA,GACPvoB,OAAOC,UAAUC,eAAeC,KAAKooB,EAAK,UAClD,CCJA,MAAM/hB,GAAWA,CAACpe,EAAGC,IAAMsE,KAAK0R,IAAIjW,EAAIC,GCUxC,MAAMmgC,GACF1gC,WAAAA,CAAYoN,EAAOuzB,GAAiF,IAAvE,mBAAEC,EAAkB,cAAEC,EAAa,iBAAEC,GAAmB,GAAQn/B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE7F,GA5DA1B,KAAKiP,WAAa,KAIlBjP,KAAK8gC,cAAgB,KAIrB9gC,KAAK+gC,kBAAoB,KAIzB/gC,KAAK0gC,SAAW,CAAC,EAIjB1gC,KAAK4gC,cAAgB19B,OACrBlD,KAAKghC,YAAc,KACf,IAAMhhC,KAAK8gC,gBAAiB9gC,KAAK+gC,kBAC7B,OACJ,MAAME,EAAOC,GAAWlhC,KAAK+gC,kBAAmB/gC,KAAKmhC,SAC/CC,EAAmC,OAApBphC,KAAKiP,WAIpBoyB,EDvClB,SAAoBhhC,EAAGC,GAEnB,MAAMghC,EAAS7iB,GAASpe,EAAE2L,EAAG1L,EAAE0L,GACzBu1B,EAAS9iB,GAASpe,EAAE4L,EAAG3L,EAAE2L,GAC/B,OAAOrH,KAAKoc,KAAKsgB,GAAU,EAAIC,GAAU,EAC7C,CCkC4CC,CAAWP,EAAK1P,OAAQ,CAAEvlB,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKm1B,IAAiBC,EAClB,OACJ,MAAM,MAAE3D,GAAUuD,GACZ,UAAE93B,GAAcoB,EACtBvK,KAAKmhC,QAAQviC,KAAK,IAAK8+B,EAAOv0B,cAC9B,MAAM,QAAEs4B,EAAO,OAAEC,GAAW1hC,KAAK0gC,SAC5BU,IACDK,GAAWA,EAAQzhC,KAAK8gC,cAAeG,GACvCjhC,KAAKiP,WAAajP,KAAK8gC,eAE3BY,GAAUA,EAAO1hC,KAAK8gC,cAAeG,EAAK,EAE9CjhC,KAAK2hC,kBAAoB,CAACx0B,EAAO8zB,KAC7BjhC,KAAK8gC,cAAgB3zB,EACrBnN,KAAK+gC,kBAAoBf,GAAeiB,EAAMjhC,KAAK2gC,oBAEnDr1B,EAAMV,OAAO5K,KAAKghC,aAAa,EAAK,EAExChhC,KAAK4hC,gBAAkB,CAACz0B,EAAO8zB,KAC3BjhC,KAAK6hC,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoBhiC,KAAK0gC,SAGtD,GAFI1gC,KAAK6gC,kBACLmB,GAAmBA,KACjBhiC,KAAK8gC,gBAAiB9gC,KAAK+gC,kBAC7B,OACJ,MAAMkB,EAAUf,GAA0B,kBAAf/zB,EAAMlH,KAC3BjG,KAAK+gC,kBACLf,GAAeiB,EAAMjhC,KAAK2gC,oBAAqB3gC,KAAKmhC,SACtDnhC,KAAKiP,YAAc6yB,GACnBA,EAAM30B,EAAO80B,GAEjBF,GAAgBA,EAAa50B,EAAO80B,EAAQ,GAG3Cl0B,GAAiBZ,GAClB,OACJnN,KAAK6gC,iBAAmBA,EACxB7gC,KAAK0gC,SAAWA,EAChB1gC,KAAK2gC,mBAAqBA,EAC1B3gC,KAAK4gC,cAAgBA,GAAiB19B,OACtC,MACMg/B,EAAclC,GADPvC,GAAiBtwB,GACWnN,KAAK2gC,qBACxC,MAAEjD,GAAUwE,GACZ,UAAE/4B,GAAcoB,EACtBvK,KAAKmhC,QAAU,CAAC,IAAKzD,EAAOv0B,cAC5B,MAAM,eAAEg5B,GAAmBzB,EAC3ByB,GACIA,EAAeh1B,EAAO+zB,GAAWgB,EAAaliC,KAAKmhC,UACvDnhC,KAAKoiC,gBAAkBjY,GAAK0T,GAAgB79B,KAAK4gC,cAAe,cAAe5gC,KAAK2hC,mBAAoB9D,GAAgB79B,KAAK4gC,cAAe,YAAa5gC,KAAK4hC,iBAAkB/D,GAAgB79B,KAAK4gC,cAAe,gBAAiB5gC,KAAK4hC,iBAC9O,CACAS,cAAAA,CAAe3B,GACX1gC,KAAK0gC,SAAWA,CACpB,CACAmB,GAAAA,GACI7hC,KAAKoiC,iBAAmBpiC,KAAKoiC,kBAC7B72B,EAAYvL,KAAKghC,YACrB,EAEJ,SAAShB,GAAeiB,EAAMN,GAC1B,OAAOA,EAAqB,CAAEjD,MAAOiD,EAAmBM,EAAKvD,QAAWuD,CAC5E,CACA,SAASqB,GAAcjiC,EAAGC,GACtB,MAAO,CAAE0L,EAAG3L,EAAE2L,EAAI1L,EAAE0L,EAAGC,EAAG5L,EAAE4L,EAAI3L,EAAE2L,EACtC,CACA,SAASi1B,GAAUr5B,EAAYs5B,GAAS,IAApB,MAAEzD,GAAO71B,EACzB,MAAO,CACH61B,QACAx0B,MAAOo5B,GAAc5E,EAAO6E,GAAgBpB,IAC5C5P,OAAQ+Q,GAAc5E,EAAO8E,GAAiBrB,IAC9CjgC,SAAUsB,GAAY2+B,EAAS,IAEvC,CACA,SAASqB,GAAiBrB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASoB,GAAgBpB,GACrB,OAAOA,EAAQA,EAAQ1gC,OAAS,EACpC,CACA,SAAS+B,GAAY2+B,EAASsB,GAC1B,GAAItB,EAAQ1gC,OAAS,EACjB,MAAO,CAAEuL,EAAG,EAAGC,EAAG,GAEtB,IAAIvL,EAAIygC,EAAQ1gC,OAAS,EACrBiiC,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBpB,GAClC,KAAOzgC,GAAK,IACRgiC,EAAmBvB,EAAQzgC,KACvBiiC,EAAUx5B,UAAYu5B,EAAiBv5B,UACvCtI,EAAsB4hC,MAG1B/hC,IAEJ,IAAKgiC,EACD,MAAO,CAAE12B,EAAG,EAAGC,EAAG,GAEtB,MAAM1H,EAAOxD,EAAsB4hC,EAAUx5B,UAAYu5B,EAAiBv5B,WAC1E,GAAa,IAAT5E,EACA,MAAO,CAAEyH,EAAG,EAAGC,EAAG,GAEtB,MAAM6iB,EAAkB,CACpB9iB,GAAI22B,EAAU32B,EAAI02B,EAAiB12B,GAAKzH,EACxC0H,GAAI02B,EAAU12B,EAAIy2B,EAAiBz2B,GAAK1H,GAQ5C,OANIuqB,EAAgB9iB,IAAMjG,MACtB+oB,EAAgB9iB,EAAI,GAEpB8iB,EAAgB7iB,IAAMlG,MACtB+oB,EAAgB7iB,EAAI,GAEjB6iB,CACX,CC1HA,SAAS8T,GAA4B3E,EAAM9yB,EAAKxG,GAC5C,MAAO,CACHwG,SAAa3L,IAAR2L,EAAoB8yB,EAAK9yB,IAAMA,OAAM3L,EAC1CmF,SAAanF,IAARmF,EACCs5B,EAAKt5B,IAAMA,GAAOs5B,EAAKt5B,IAAMs5B,EAAK9yB,UAClC3L,EAEd,CAcA,SAASqjC,GAA4BC,EAAYC,GAC7C,IAAI53B,EAAM43B,EAAgB53B,IAAM23B,EAAW33B,IACvCxG,EAAMo+B,EAAgBp+B,IAAMm+B,EAAWn+B,IAO3C,OAJIo+B,EAAgBp+B,IAAMo+B,EAAgB53B,IACtC23B,EAAWn+B,IAAMm+B,EAAW33B,OAC3BA,EAAKxG,GAAO,CAACA,EAAKwG,IAEhB,CAAEA,MAAKxG,MAClB,CAuCA,MAAMq+B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHj4B,IAAKk4B,GAAoBH,EAAaC,GACtCx+B,IAAK0+B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC3GA,MAAMC,GAAsB,IAAIC,QAKhC,MAAMC,GACF1jC,WAAAA,CAAYqC,GACRpC,KAAK0jC,aAAe,KACpB1jC,KAAK+L,YAAa,EAClB/L,KAAK2jC,iBAAmB,KACxB3jC,KAAKm+B,YAAc,CAAEnyB,EAAG,EAAGC,EAAG,GAI9BjM,KAAK4jC,aAAc,EACnB5jC,KAAK6jC,uBAAwB,EAI7B7jC,KAAK8jC,QV3BK,CACd93B,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,IU6BjC3E,KAAKoC,cAAgBA,CACzB,CACAF,KAAAA,CAAM6hC,GAA4C,IAA/B,aAAEC,GAAe,GAAOtiC,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAEo2B,GAAoB93B,KAAKoC,cACjC,GAAI01B,IAAiD,IAA9BA,EAAgBoF,UACnC,OACJ,MA6FM,iBAAE2D,GAAqB7gC,KAAKgD,WAClChD,KAAKikC,WAAa,IAAIxD,GAAWsD,EAAa,CAC1C5B,eA/FoBh1B,IACpB,MAAM,iBAAE0zB,GAAqB7gC,KAAKgD,WAGlC69B,EAAmB7gC,KAAKkkC,iBAAmBlkC,KAAKmkC,gBAC5CH,GACAhkC,KAAKgkC,aAAavG,GAAiBtwB,GAAOuwB,MAC9C,EAyFA+D,QAvFYA,CAACt0B,EAAO8zB,KAEpB,MAAM,KAAEmD,EAAI,gBAAEC,EAAe,YAAEC,GAAgBtkC,KAAKgD,WACpD,GAAIohC,IAASC,IACLrkC,KAAK0jC,cACL1jC,KAAK0jC,eACT1jC,KAAK0jC,aC5DJ,OADIzF,ED6D2BmG,IC5Df,MAATnG,EACZlyB,EAAWkyB,GACJ,MAGPlyB,EAAWkyB,IAAQ,EACZ,KACHlyB,EAAWkyB,IAAQ,CAAK,GAK5BlyB,EAAWC,GAAKD,EAAWE,EACpB,MAGPF,EAAWC,EAAID,EAAWE,GAAI,EACvB,KACHF,EAAWC,EAAID,EAAWE,GAAI,CAAK,ID4C9BjM,KAAK0jC,cACN,OChEpB,IAAqBzF,EDkETj+B,KAAK+L,YAAa,EAClB/L,KAAK2jC,iBAAmB,KACxB3jC,KAAKukC,qBACDvkC,KAAKoC,cAAcoiC,aACnBxkC,KAAKoC,cAAcoiC,WAAWC,oBAAqB,EACnDzkC,KAAKoC,cAAcoiC,WAAWh3B,YAAShO,GAK3Cm/B,IAAUV,IACN,IAAIp7B,EAAU7C,KAAK0kC,mBAAmBzG,GAAMt8B,OAAS,EAIrD,GAAI+X,GAAQxC,KAAKrU,GAAU,CACvB,MAAM,WAAE2hC,GAAexkC,KAAKoC,cAC5B,GAAIoiC,GAAcA,EAAWlzB,OAAQ,CACjC,MAAMqzB,EAAeH,EAAWlzB,OAAOszB,UAAU3G,GACjD,GAAI0G,EAAc,CAEd9hC,EADem7B,GAAW2G,IACNhyB,WAAW9P,GAAW,IAC9C,CACJ,CACJ,CACA7C,KAAKm+B,YAAYF,GAAQp7B,CAAO,IAGhCyhC,GACAh5B,EAAMP,YAAW,IAAMu5B,EAAYn3B,EAAO8zB,KAE9CnsB,GAAqB9U,KAAKoC,cAAe,aACzC,MAAM,eAAEg1B,GAAmBp3B,KAAKoC,cAChCg1B,GAAkBA,EAAewE,UAAU,aAAa,EAAK,EA4C7D8F,OA1CWA,CAACv0B,EAAO8zB,KAEnB,MAAM,gBAAEoD,EAAe,kBAAEQ,EAAiB,gBAAEC,EAAe,OAAEC,GAAY/kC,KAAKgD,WAE9E,IAAKqhC,IAAoBrkC,KAAK0jC,aAC1B,OACJ,MAAM,OAAEnS,GAAW0P,EAEnB,GAAI4D,GAA+C,OAA1B7kC,KAAK2jC,iBAM1B,OALA3jC,KAAK2jC,iBAuWrB,SAA6BpS,GAA4B,IAApByT,EAAatjC,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,GAC7C0zB,EAAY,KACZxwB,KAAK0R,IAAIib,EAAOtlB,GAAK+4B,EACrB5P,EAAY,IAEPxwB,KAAK0R,IAAIib,EAAOvlB,GAAKg5B,IAC1B5P,EAAY,KAEhB,OAAOA,CACX,CAhXwC6P,CAAoB1T,QAEd,OAA1BvxB,KAAK2jC,kBACLmB,GAAmBA,EAAgB9kC,KAAK2jC,mBAKhD3jC,KAAKklC,WAAW,IAAKjE,EAAKvD,MAAOnM,GACjCvxB,KAAKklC,WAAW,IAAKjE,EAAKvD,MAAOnM,GAOjCvxB,KAAKoC,cAAc0I,SAKnBi6B,GAAUA,EAAO53B,EAAO8zB,EAAK,EAa7Bc,aAXiBA,CAAC50B,EAAO8zB,IAASjhC,KAAKsD,KAAK6J,EAAO8zB,GAYnDe,gBAXoBA,IAAMrD,IAAUV,IACpC,IAAIr3B,EACJ,MAAwC,WAAjC5G,KAAKmlC,kBAAkBlH,KAC0B,QAAlDr3B,EAAK5G,KAAK0kC,mBAAmBzG,GAAMn6B,iBAA8B,IAAP8C,OAAgB,EAASA,EAAG5B,OAAO,KASpG,CACC27B,mBAAoB3gC,KAAKoC,cAAcgjC,wBACvCvE,mBACAD,cAAeR,GAAiBpgC,KAAKoC,gBAE7C,CACAkB,IAAAA,CAAK6J,EAAO8zB,GACR,MAAMl1B,EAAa/L,KAAK+L,WAExB,GADA/L,KAAKsE,UACAyH,EACD,OACJ,MAAM,SAAE7K,GAAa+/B,EACrBjhC,KAAK4T,eAAe1S,GACpB,MAAM,UAAEmkC,GAAcrlC,KAAKgD,WACvBqiC,GACA/5B,EAAMP,YAAW,IAAMs6B,EAAUl4B,EAAO8zB,IAEhD,CACA38B,MAAAA,GACItE,KAAK+L,YAAa,EAClB,MAAM,WAAEy4B,EAAU,eAAEpN,GAAmBp3B,KAAKoC,cACxCoiC,IACAA,EAAWC,oBAAqB,GAEpCzkC,KAAKikC,YAAcjkC,KAAKikC,WAAWpC,MACnC7hC,KAAKikC,gBAAazkC,EAClB,MAAM,gBAAE6kC,GAAoBrkC,KAAKgD,YAC5BqhC,GAAmBrkC,KAAK0jC,eACzB1jC,KAAK0jC,eACL1jC,KAAK0jC,aAAe,MAExBtM,GAAkBA,EAAewE,UAAU,aAAa,EAC5D,CACAsJ,UAAAA,CAAWjH,EAAMqH,EAAQ/T,GACrB,MAAM,KAAE6S,GAASpkC,KAAKgD,WAEtB,IAAKuuB,IAAWgU,GAAWtH,EAAMmG,EAAMpkC,KAAK2jC,kBACxC,OACJ,MAAM6B,EAAYxlC,KAAK0kC,mBAAmBzG,GAC1C,IAAIp4B,EAAO7F,KAAKm+B,YAAYF,GAAQ1M,EAAO0M,GAEvCj+B,KAAK4jC,aAAe5jC,KAAK4jC,YAAY3F,KACrCp4B,EDpLZ,SAA0B63B,EAAK71B,EAAgBi8B,GAAS,IAAvB,IAAE34B,EAAG,IAAExG,GAAKkD,EAazC,YAZYrI,IAAR2L,GAAqBuyB,EAAQvyB,EAE7BuyB,EAAQoG,EACF3a,GAAUhe,EAAKuyB,EAAOoG,EAAQ34B,KAC9BvG,KAAKD,IAAI+4B,EAAOvyB,QAET3L,IAARmF,GAAqB+4B,EAAQ/4B,IAElC+4B,EAAQoG,EACF3a,GAAUxkB,EAAK+4B,EAAOoG,EAAQn/B,KAC9BC,KAAKuG,IAAIuyB,EAAO/4B,IAEnB+4B,CACX,CCsKmB+H,CAAiB5/B,EAAM7F,KAAK4jC,YAAY3F,GAAOj+B,KAAK8jC,QAAQ7F,KAEvEuH,EAAUzjC,IAAI8D,EAClB,CACA0+B,kBAAAA,GACI,IAAI39B,EACJ,MAAM,gBAAE8+B,EAAe,YAAExC,GAAgBljC,KAAKgD,WACxCsO,EAAStR,KAAKoC,cAAcoiC,aAC7BxkC,KAAKoC,cAAcoiC,WAAWlzB,OAC7BtR,KAAKoC,cAAcoiC,WAAWmB,SAAQ,GACG,QAAxC/+B,EAAK5G,KAAKoC,cAAcoiC,kBAA+B,IAAP59B,OAAgB,EAASA,EAAG0K,OAC7Es0B,EAAkB5lC,KAAK4jC,YACzB8B,GAAmBnF,GAAYmF,GAC1B1lC,KAAK4jC,cACN5jC,KAAK4jC,YAAc5jC,KAAK6lC,yBAKxB7lC,KAAK4jC,eADL8B,IAAmBp0B,IDtKnC,SAAiCszB,EAAS7iB,GAAgC,IAA9B,IAAE/R,EAAG,KAAED,EAAI,OAAEI,EAAM,MAAEF,GAAO8R,EACpE,MAAO,CACH/V,EAAG42B,GAA4BgC,EAAU54B,EAAG+D,EAAME,GAClDhE,EAAG22B,GAA4BgC,EAAU34B,EAAG+D,EAAKG,GAEzD,CCkKmC21B,CAAwBx0B,EAAOszB,UAAWc,GAMrE1lC,KAAK8jC,QD/Gb,WAA0D,IAA9BZ,EAAWxhC,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAGshC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHh3B,EAAGi3B,GAAmBC,EAAa,OAAQ,SAC3Cj3B,EAAGg3B,GAAmBC,EAAa,MAAO,UAElD,CCoGuB6C,CAAmB7C,GAK9B0C,IAAoB5lC,KAAK4jC,aACzBtyB,GACAtR,KAAK4jC,cACJ5jC,KAAK6jC,uBACNlF,IAAUV,KACmB,IAArBj+B,KAAK4jC,aACL5jC,KAAK0kC,mBAAmBzG,KACxBj+B,KAAK4jC,YAAY3F,GDzIrC,SAA+B3sB,EAAQsyB,GACnC,MAAMoC,EAAsB,CAAC,EAO7B,YANwBxmC,IAApBokC,EAAYz4B,MACZ66B,EAAoB76B,IAAMy4B,EAAYz4B,IAAMmG,EAAOnG,UAE/B3L,IAApBokC,EAAYj/B,MACZqhC,EAAoBrhC,IAAMi/B,EAAYj/B,IAAM2M,EAAOnG,KAEhD66B,CACX,CCgI6CC,CAAsB30B,EAAOszB,UAAU3G,GAAOj+B,KAAK4jC,YAAY3F,IAC5F,GAGZ,CACA4H,qBAAAA,GACI,MAAQH,gBAAiB9B,EAAW,yBAAEsC,GAA6BlmC,KAAKgD,WACxE,IAAK4gC,IAAgBrD,GAAYqD,GAC7B,OAAO,EACX,MAAMuC,EAAqBvC,EAAY/gC,QACvC1D,EAAiC,OAAvBgnC,EAA6B,0GACvC,MAAM,WAAE3B,GAAexkC,KAAKoC,cAE5B,IAAKoiC,IAAeA,EAAWlzB,OAC3B,OAAO,EACX,MAAM80B,EN5Od,SAAwB11B,EAAS21B,EAAoB1F,GACjD,MAAM2F,EAAczf,GAAmBnW,EAASiwB,IAC1C,OAAE4F,GAAWF,EAKnB,OAJIE,IACA9G,GAAc6G,EAAYt6B,EAAGu6B,EAAOhV,OAAOvlB,GAC3CyzB,GAAc6G,EAAYr6B,EAAGs6B,EAAOhV,OAAOtlB,IAExCq6B,CACX,CMoO+BE,CAAeL,EAAoB3B,EAAW93B,KAAM1M,KAAKoC,cAAcgjC,yBAC9F,IAAIqB,EDlLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHp6B,EAAG62B,GAA4B+B,EAAU54B,EAAGo6B,EAAep6B,GAC3DC,EAAG42B,GAA4B+B,EAAU34B,EAAGm6B,EAAen6B,GAEnE,CC6KkCy6B,CAAwBlC,EAAWlzB,OAAOszB,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EZ9OpC,SAAgCnkB,GAAW,IAAV,EAAE/V,EAAC,EAAEC,GAAG8V,EACrC,MAAO,CAAE/R,IAAK/D,EAAEd,IAAK8E,MAAOjE,EAAErH,IAAKwL,OAAQlE,EAAEtH,IAAKoL,KAAM/D,EAAEb,IAC9D,CY4O6Dy7B,CAAwBH,IACzEzmC,KAAK6jC,wBAA0B8C,EAC3BA,IACAF,EAAsB1I,GAAwB4I,GAEtD,CACA,OAAOF,CACX,CACA7yB,cAAAA,CAAe1S,GACX,MAAM,KAAEkjC,EAAI,aAAEyC,EAAY,YAAE3D,EAAW,eAAE4D,EAAc,iBAAEjG,EAAgB,oBAAEkG,GAAyB/mC,KAAKgD,WACnG4gC,EAAc5jC,KAAK4jC,aAAe,CAAC,EACnCoD,EAAqBrI,IAAUV,IACjC,IAAKsH,GAAWtH,EAAMmG,EAAMpkC,KAAK2jC,kBAC7B,OAEJ,IAAIl+B,EAAcm+B,GAAeA,EAAY3F,IAAU,CAAC,EACpD4C,IACAp7B,EAAa,CAAE0F,IAAK,EAAGxG,IAAK,IAOhC,MAAM0qB,EAAkB6T,EAAc,IAAM,IACtC9T,EAAgB8T,EAAc,GAAK,IACnCjU,EAAU,CACZhpB,KAAM,UACN/E,SAAU2lC,EAAe3lC,EAAS+8B,GAAQ,EAC1C5O,kBACAD,gBACAD,aAAc,IACd9C,UAAW,EACXF,UAAW,MACR2a,KACArhC,GAKP,OAAOzF,KAAKinC,wBAAwBhJ,EAAMhP,EAAQ,IAGtD,OAAOtrB,QAAQC,IAAIojC,GAAoB5hC,KAAK2hC,EAChD,CACAE,uBAAAA,CAAwBhJ,EAAMx4B,GAC1B,MAAM+/B,EAAYxlC,KAAK0kC,mBAAmBzG,GAE1C,OADAnpB,GAAqB9U,KAAKoC,cAAe67B,GAClCuH,EAAUtjC,MAAM+zB,GAAmBgI,EAAMuH,EAAW,EAAG//B,EAAYzF,KAAKoC,eAAe,GAClG,CACA+hC,aAAAA,GACIxF,IAAUV,GAASj+B,KAAK0kC,mBAAmBzG,GAAM36B,QACrD,CACA4gC,cAAAA,GACIvF,IAAUV,IAAW,IAAIr3B,EAAI,OAA0D,QAAlDA,EAAK5G,KAAK0kC,mBAAmBzG,GAAMn6B,iBAA8B,IAAP8C,OAAgB,EAASA,EAAG3B,OAAO,GACtI,CACAkgC,iBAAAA,CAAkBlH,GACd,IAAIr3B,EACJ,OAA0D,QAAlDA,EAAK5G,KAAK0kC,mBAAmBzG,GAAMn6B,iBAA8B,IAAP8C,OAAgB,EAASA,EAAGvE,KAClG,CAOAqiC,kBAAAA,CAAmBzG,GACf,MAAMiJ,EAAU,QAAQjJ,EAAKkJ,gBACvBzkC,EAAQ1C,KAAKoC,cAAcY,WAC3BokC,EAAsB1kC,EAAMwkC,GAClC,OAAOE,GAEDpnC,KAAKoC,cAAcuS,SAASspB,GAAOv7B,EAAM02B,QACrC12B,EAAM02B,QAAQ6E,QACdz+B,IAAc,EAC5B,CACAwkC,YAAAA,CAAatG,GACTiB,IAAUV,IACN,MAAM,KAAEmG,GAASpkC,KAAKgD,WAEtB,IAAKuiC,GAAWtH,EAAMmG,EAAMpkC,KAAK2jC,kBAC7B,OACJ,MAAM,WAAEa,GAAexkC,KAAKoC,cACtBojC,EAAYxlC,KAAK0kC,mBAAmBzG,GAC1C,GAAIuG,GAAcA,EAAWlzB,OAAQ,CACjC,MAAM,IAAEnG,EAAG,IAAExG,GAAQ6/B,EAAWlzB,OAAOszB,UAAU3G,GACjDuH,EAAUzjC,IAAI27B,EAAMO,GAAQ9U,GAAUhe,EAAKxG,EAAK,IACpD,IAER,CAMA0iC,8BAAAA,GACI,IAAKrnC,KAAKoC,cAAcS,QACpB,OACJ,MAAM,KAAEuhC,EAAI,gBAAEsB,GAAoB1lC,KAAKgD,YACjC,WAAEwhC,GAAexkC,KAAKoC,cAC5B,IAAKm+B,GAAYmF,KAAqBlB,IAAexkC,KAAK4jC,YACtD,OAKJ5jC,KAAKmkC,gBAKL,MAAMmD,EAAc,CAAEt7B,EAAG,EAAGC,EAAG,GAC/B0yB,IAAUV,IACN,MAAMuH,EAAYxlC,KAAK0kC,mBAAmBzG,GAC1C,GAAIuH,IAAkC,IAArBxlC,KAAK4jC,YAAuB,CACzC,MAAM/T,EAAS2V,EAAU7jC,MACzB2lC,EAAYrJ,GDlS5B,SAAoBhjB,EAAQzN,GACxB,IAAI4Y,EAAS,GACb,MAAMmhB,EAAevJ,GAAW/iB,GAC1BusB,EAAexJ,GAAWxwB,GAOhC,OANIg6B,EAAeD,EACfnhB,EAAS3mB,EAAS+N,EAAOrC,IAAKqC,EAAO7I,IAAM4iC,EAActsB,EAAO9P,KAE3Do8B,EAAeC,IACpBphB,EAAS3mB,EAASwb,EAAO9P,IAAK8P,EAAOtW,IAAM6iC,EAAch6B,EAAOrC,MAE7DgM,GAAM,EAAG,EAAGiP,EACvB,CCuRoCqhB,CAAW,CAAEt8B,IAAK0kB,EAAQlrB,IAAKkrB,GAAU7vB,KAAK4jC,YAAY3F,GAClF,KAKJ,MAAM,kBAAErI,GAAsB51B,KAAKoC,cAAcY,WACjDhD,KAAKoC,cAAcS,QAAQ6kC,MAAMpwB,UAAYse,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACN4O,EAAW93B,MAAQ83B,EAAW93B,KAAKi7B,eACnCnD,EAAWoD,eACX5nC,KAAKukC,qBAKL5F,IAAUV,IACN,IAAKsH,GAAWtH,EAAMmG,EAAM,MACxB,OAIJ,MAAMoB,EAAYxlC,KAAK0kC,mBAAmBzG,IACpC,IAAE9yB,EAAG,IAAExG,GAAQ3E,KAAK4jC,YAAY3F,GACtCuH,EAAUzjC,IAAIonB,GAAUhe,EAAKxG,EAAK2iC,EAAYrJ,IAAO,GAE7D,CACA4J,YAAAA,GACI,IAAK7nC,KAAKoC,cAAcS,QACpB,OACJ0gC,GAAoBxhC,IAAI/B,KAAKoC,cAAepC,MAC5C,MAIM8nC,EAAsBjK,GAJZ79B,KAAKoC,cAAcS,QAIkB,eAAgBsK,IACjE,MAAM,KAAEi3B,EAAI,aAAE2D,GAAe,GAAS/nC,KAAKgD,WAC3CohC,GAAQ2D,GAAgB/nC,KAAKkC,MAAMiL,EAAM,IAEvC66B,EAAyBA,KAC3B,MAAM,gBAAEtC,GAAoB1lC,KAAKgD,WAC7Bu9B,GAAYmF,IAAoBA,EAAgB7iC,UAChD7C,KAAK4jC,YAAc5jC,KAAK6lC,wBAC5B,GAEE,WAAErB,GAAexkC,KAAKoC,cACtB6lC,EAA4BzD,EAAWh0B,iBAAiB,UAAWw3B,GACrExD,IAAeA,EAAWlzB,SAC1BkzB,EAAW93B,MAAQ83B,EAAW93B,KAAKi7B,eACnCnD,EAAWoD,gBAEft8B,EAAMZ,KAAKs9B,GAKX,MAAME,EAAqB1K,GAAYt6B,OAAQ,UAAU,IAAMlD,KAAKqnC,mCAK9Dc,EAA2B3D,EAAWh0B,iBAAiB,aAAc3I,IAAiC,IAAhC,MAAEqB,EAAK,iBAAEk/B,GAAkBvgC,EAC/F7H,KAAK+L,YAAcq8B,IACnBzJ,IAAUV,IACN,MAAM7pB,EAAcpU,KAAK0kC,mBAAmBzG,GACvC7pB,IAELpU,KAAKm+B,YAAYF,IAAS/0B,EAAM+0B,GAAMG,UACtChqB,EAAYrS,IAAIqS,EAAYzS,MAAQuH,EAAM+0B,GAAMG,WAAU,IAE9Dp+B,KAAKoC,cAAc0I,SACvB,IAEJ,MAAO,KACHo9B,IACAJ,IACAG,IACAE,GAA4BA,GAA0B,CAE9D,CACAnlC,QAAAA,GACI,MAAMN,EAAQ1C,KAAKoC,cAAcY,YAC3B,KAAEohC,GAAO,EAAK,kBAAES,GAAoB,EAAK,gBAAER,GAAkB,EAAK,gBAAEqB,GAAkB,EAAK,YAAExC,EAAcF,GAAc,aAAE6D,GAAe,GAAUnkC,EAC1J,MAAO,IACAA,EACH0hC,OACAS,oBACAR,kBACAqB,kBACAxC,cACA2D,eAER,EAEJ,SAAStB,GAAWnQ,EAAWgP,EAAMT,GACjC,QAAkB,IAATS,GAAiBA,IAAShP,KACT,OAArBuO,GAA6BA,IAAqBvO,EAC3D,CExcA,MAAMiT,GAAgBloC,GAAY,CAACgN,EAAO8zB,KAClC9gC,GACAmL,EAAMP,YAAW,IAAM5K,EAAQgN,EAAO8zB,IAC1C,E,yBCJJ,MAAMqH,IACUC,EAAAA,GAAAA,eAAc,MCJ9B,MAAMC,IAAqBD,EAAAA,GAAAA,eAAc,CAAC,GCGpCE,IAA2BF,EAAAA,GAAAA,eAAc,CAAC,GCD1CG,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQ7K,GAC7B,OAAIA,EAAKt5B,MAAQs5B,EAAK9yB,IACX,EACH29B,GAAU7K,EAAKt5B,IAAMs5B,EAAK9yB,KAAQ,GAC9C,CAQA,MAAM49B,GAAsB,CACxBC,QAASA,CAACnZ,EAAQ2M,KACd,IAAKA,EAAKhvB,OACN,OAAOqiB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIlW,GAAGzC,KAAK2Y,GAIR,OAAOA,EAHPA,EAASld,WAAWkd,EAK5B,CAOA,MAAO,GAFGgZ,GAAgBhZ,EAAQ2M,EAAKhvB,OAAOxB,OACpC68B,GAAgBhZ,EAAQ2M,EAAKhvB,OAAOvB,KAC1B,GCjCtBg9B,GAAmB,CACrBD,QAASA,CAACnZ,EAAMhoB,KAAqC,IAAnC,UAAEqhC,EAAS,gBAAEC,GAAiBthC,EAC5C,MAAMuhC,EAAWvZ,EACXwZ,EAAShuB,GAAQhE,MAAMwY,GAE7B,GAAIwZ,EAAO5oC,OAAS,EAChB,OAAO2oC,EACX,MAAMre,EAAW1P,GAAQL,kBAAkB6U,GACrC0B,EAA8B,kBAAd8X,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBn9B,EAAEwL,MAAQ0xB,EAAUl9B,EAC7Cu9B,EAASJ,EAAgBl9B,EAAEuL,MAAQ0xB,EAAUj9B,EACnDo9B,EAAO,EAAI9X,IAAW+X,EACtBD,EAAO,EAAI9X,IAAWgY,EAOtB,MAAMC,EAAergB,GAAUmgB,EAAQC,EAAQ,IAO/C,MALkC,kBAAvBF,EAAO,EAAI9X,KAClB8X,EAAO,EAAI9X,IAAWiY,GAEQ,kBAAvBH,EAAO,EAAI9X,KAClB8X,EAAO,EAAI9X,IAAWiY,GACnBze,EAASse,EAAO,GC5BzBI,GAAkB,CAAC,ECUzB,MAAMC,WAAiCC,GAAAA,UAMnCC,iBAAAA,GACI,MAAM,cAAExnC,EAAa,YAAEynC,EAAW,kBAAEC,EAAiB,SAAEC,GAAa/pC,KAAK0C,OACnE,WAAE8hC,GAAepiC,GDjB/B,SAA2B4nC,GACvB,IAAK,MAAMnoC,KAAOmoC,EACdP,GAAgB5nC,GAAOmoC,EAAWnoC,GAC9BgjB,GAAkBhjB,KAClB4nC,GAAgB5nC,GAAKooC,eAAgB,EAGjD,CCWQC,CAAkBC,IACd3F,IACIqF,EAAYO,OACZP,EAAYO,MAAMlqC,IAAIskC,GACtBsF,GAAqBA,EAAkBvM,UAAYwM,GACnDD,EAAkBvM,SAASiH,GAE/BA,EAAW93B,KAAK29B,YAChB7F,EAAWh0B,iBAAiB,qBAAqB,KAC7CxQ,KAAKsqC,cAAc,IAEvB9F,EAAW+F,WAAW,IACf/F,EAAWn4B,QACd8wB,eAAgBA,IAAMn9B,KAAKsqC,kBAGnC5B,GAAsBE,gBAAiB,CAC3C,CACA4B,uBAAAA,CAAwBxN,GACpB,MAAM,iBAAEyN,EAAgB,cAAEroC,EAAa,KAAEgiC,EAAI,UAAElH,GAAcl9B,KAAK0C,MAC5D8hC,EAAapiC,EAAcoiC,WACjC,OAAKA,GASLA,EAAWtH,UAAYA,EACnBkH,GACApH,EAAUyN,mBAAqBA,QACVjrC,IAArBirC,GACAzN,EAAUE,YAAcA,EACxBsH,EAAWkG,aAGX1qC,KAAKsqC,eAELtN,EAAUE,YAAcA,IACpBA,EACAsH,EAAWmG,UAELnG,EAAWoG,YAMjBt/B,EAAMP,YAAW,KACb,MAAM8/B,EAAQrG,EAAWsG,WACpBD,GAAUA,EAAME,QAAQtqC,QACzBT,KAAKsqC,cACT,KAIL,MApCI,IAqCf,CACAU,kBAAAA,GACI,MAAM,WAAExG,GAAexkC,KAAK0C,MAAMN,cAC9BoiC,IACAA,EAAW93B,KAAK29B,YAChB3+B,EAAUX,YAAW,MACZy5B,EAAWyG,kBAAoBzG,EAAW0G,UAC3ClrC,KAAKsqC,cACT,IAGZ,CACAa,oBAAAA,GACI,MAAM,cAAE/oC,EAAa,YAAEynC,EAAaC,kBAAmBsB,GAAoBprC,KAAK0C,OAC1E,WAAE8hC,GAAepiC,EACnBoiC,IACAA,EAAW6G,4BACPxB,GAAeA,EAAYO,OAC3BP,EAAYO,MAAMkB,OAAO9G,GACzB4G,GAAkBA,EAAeG,YACjCH,EAAeG,WAAW/G,GAEtC,CACA8F,YAAAA,GACI,MAAM,aAAEA,GAAiBtqC,KAAK0C,MAC9B4nC,GAAgBA,GACpB,CACAx/B,MAAAA,GACI,OAAO,IACX,EAEJ,SAAS0gC,GAAc9oC,GACnB,MAAOw6B,EAAWoN,GCtFtB,WAAuC,IAAlBzN,IAASn7B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,KAAAA,UAAA,GAC1B,MAAMy3B,GAAUsS,EAAAA,GAAAA,YAAWnD,IAC3B,GAAgB,OAAZnP,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAE+D,EAAS,eAAEC,EAAc,SAAEI,GAAapE,EAG1CuD,GAAKgP,EAAAA,GAAAA,UACXC,EAAAA,GAAAA,YAAU,KACN,GAAI9O,EACA,OAAOU,EAASb,EACpB,GACD,CAACG,IACJ,MAAMyN,GAAesB,EAAAA,GAAAA,cAAY,IAAM/O,GAAaM,GAAkBA,EAAeT,IAAK,CAACA,EAAIS,EAAgBN,IAC/G,OAAQK,GAAaC,EAAiB,EAAC,EAAOmN,GAAgB,EAAC,EACnE,CDuEsCuB,GAC5BhC,GAAc4B,EAAAA,GAAAA,YAAWjD,IAC/B,OAAQsD,EAAAA,GAAAA,KAAIpC,GAA0B,IAAKhnC,EAAOmnC,YAAaA,EAAaC,mBAAmB2B,EAAAA,GAAAA,YAAWhD,IAA2BvL,UAAWA,EAAWoN,aAAcA,GAC7K,CACA,MAAMH,GAAyB,CAC3B3tB,aAAc,IACPusB,GACHgD,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRrvB,oBAAqBqsB,GACrBpsB,qBAAsBosB,GACtBlsB,uBAAwBksB,GACxBnsB,wBAAyBmsB,GACzBiD,UAAW/C,IElIf,MAAMgD,GAAiBA,CAAC5rC,EAAGC,IAAMD,EAAE8kB,MAAQ7kB,EAAE6kB,MCG7C,MAAM+mB,GACFnsC,WAAAA,GACIC,KAAKmsC,SAAW,GAChBnsC,KAAKosC,SAAU,CACnB,CACAlsC,GAAAA,CAAI2N,GACArP,EAAcwB,KAAKmsC,SAAUt+B,GAC7B7N,KAAKosC,SAAU,CACnB,CACAd,MAAAA,CAAOz9B,GACHhP,EAAWmB,KAAKmsC,SAAUt+B,GAC1B7N,KAAKosC,SAAU,CACnB,CACA7pC,OAAAA,CAAQjD,GACJU,KAAKosC,SAAWpsC,KAAKmsC,SAAS9T,KAAK4T,IACnCjsC,KAAKosC,SAAU,EACfpsC,KAAKmsC,SAAS5pC,QAAQjD,EAC1B,ECdJ,SAAS2oB,GAAM3oB,EAAU+sC,GACrB,MAAMnqC,EAAQqC,EAAK2G,MACbohC,EAAezkC,IAAmB,IAAlB,UAAEsB,GAAWtB,EAC/B,MAAMgsB,EAAU1qB,EAAYjH,EACxB2xB,GAAWwY,IACX9gC,EAAY+gC,GACZhtC,EAASu0B,EAAUwY,GACvB,EAGJ,OADA/gC,EAAMZ,KAAK4hC,GAAc,GAClB,IAAM/gC,EAAY+gC,EAC7B,CCTA,SAASC,GAAmB3sC,GACxB,MAAM4sC,EAAiB33B,GAAcjV,GAASA,EAAM+B,MAAQ/B,EAC5D,O1CRmBqC,E0CQEuqC,E1CPd/oC,QAAQxB,GAAkB,kBAANA,GAAkBA,EAAEupB,KAAOvpB,EAAEwqC,S0CQlDD,EAAeC,UACfD,E1CVavqC,K0CWvB,CCRA,MAAMyqC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQjsC,OACrBmsC,GAAYhtC,GAA2B,kBAAVA,EAAqB+S,WAAW/S,GAASA,EACtEitC,GAAQjtC,GAA2B,kBAAVA,GAAsB+Z,GAAGzC,KAAKtX,GA0C7D,SAASktC,GAAUxqC,EAAQyqC,GACvB,YAA8BvtC,IAAvB8C,EAAOyqC,GACRzqC,EAAOyqC,GACPzqC,EAAOka,YACjB,CAwBA,MAAMwwB,GAAgCC,GAAS,EAAG,GAAK5kC,IACjD6kC,GAAiCD,GAAS,GAAK,IAAMjuC,GAC3D,SAASiuC,GAAS9hC,EAAKxG,EAAKyB,GACxB,OAAQqQ,GAEAA,EAAItL,EACG,EACPsL,EAAI9R,EACG,EACJyB,EAAO3G,EAAS0L,EAAKxG,EAAK8R,GAEzC,CCpFA,SAAS02B,GAAalP,EAAMmP,GACxBnP,EAAK9yB,IAAMiiC,EAAWjiC,IACtB8yB,EAAKt5B,IAAMyoC,EAAWzoC,GAC1B,CAMA,SAAS0oC,GAAY/N,EAAKgO,GACtBH,GAAa7N,EAAItzB,EAAGshC,EAAUthC,GAC9BmhC,GAAa7N,EAAIrzB,EAAGqhC,EAAUrhC,EAClC,CAMA,SAASshC,GAAkBrkC,EAAOskC,GAC9BtkC,EAAMk1B,UAAYoP,EAAYpP,UAC9Bl1B,EAAMsO,MAAQg2B,EAAYh2B,MAC1BtO,EAAMi1B,YAAcqP,EAAYrP,YAChCj1B,EAAMkd,OAASonB,EAAYpnB,MAC/B,CCrBA,SAASqnB,GAAiB/P,EAAOU,EAAW5mB,EAAO2mB,EAAagB,GAM5D,OAJAzB,EAAQuB,GADRvB,GAASU,EACiB,EAAI5mB,EAAO2mB,QACpB3+B,IAAb2/B,IACAzB,EAAQuB,GAAWvB,EAAO,EAAIyB,EAAUhB,IAErCT,CACX,CAsBA,SAASgQ,GAAqBzP,EAAM0P,EAAU9lC,EAA8Bue,EAAQwnB,GAAY,IAA/C/rC,EAAKgsC,EAAUC,GAAUjmC,GAlB1E,SAAyBo2B,GAA8F,IAAxFG,EAAS18B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAAG8V,EAAK9V,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAAG0kB,EAAM1kB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,GAAKy9B,EAAQz9B,UAAAjB,OAAA,EAAAiB,UAAA,QAAAlC,EAAE4tC,EAAU1rC,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAGu8B,EAAM2P,EAAUlsC,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAGu8B,EACzGvkB,GAAQxC,KAAKknB,KACbA,EAAYzrB,WAAWyrB,GAEvBA,EADyBjV,GAAUykB,EAAWziC,IAAKyiC,EAAWjpC,IAAKy5B,EAAY,KAChDwP,EAAWziC,KAE9C,GAAyB,kBAAdizB,EACP,OACJ,IAAID,EAAchV,GAAUikB,EAAWjiC,IAAKiiC,EAAWzoC,IAAKyhB,GACxD6X,IAASmP,IACTjP,GAAeC,GACnBH,EAAK9yB,IAAMsiC,GAAiBxP,EAAK9yB,IAAKizB,EAAW5mB,EAAO2mB,EAAagB,GACrElB,EAAKt5B,IAAM8oC,GAAiBxP,EAAKt5B,IAAKy5B,EAAW5mB,EAAO2mB,EAAagB,EACzE,CAMI4O,CAAgB9P,EAAM0P,EAAW9rC,GAAM8rC,EAAWE,GAAWF,EAAWG,GAAYH,EAAWn2B,MAAO4O,EAAQwnB,EAClH,CAIA,MAAMI,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoB5O,EAAKqO,EAAYL,EAAWa,GACrDT,GAAqBpO,EAAItzB,EAAG2hC,EAAYK,GAAOV,EAAYA,EAAUthC,OAAIxM,EAAW2uC,EAAYA,EAAUniC,OAAIxM,GAC9GkuC,GAAqBpO,EAAIrzB,EAAG0hC,EAAYM,GAAOX,EAAYA,EAAUrhC,OAAIzM,EAAW2uC,EAAYA,EAAUliC,OAAIzM,EAClH,CCjDA,SAAS4uC,GAAgBllC,GACrB,OAA2B,IAApBA,EAAMk1B,WAAmC,IAAhBl1B,EAAMsO,KAC1C,CACA,SAAS62B,GAAYnlC,GACjB,OAAOklC,GAAgBllC,EAAM8C,IAAMoiC,GAAgBllC,EAAM+C,EAC7D,CACA,SAASqiC,GAAWjuC,EAAGC,GACnB,OAAOD,EAAE8K,MAAQ7K,EAAE6K,KAAO9K,EAAEsE,MAAQrE,EAAEqE,GAC1C,CAIA,SAAS4pC,GAAkBluC,EAAGC,GAC1B,OAAQsE,KAAK2C,MAAMlH,EAAE8K,OAASvG,KAAK2C,MAAMjH,EAAE6K,MACvCvG,KAAK2C,MAAMlH,EAAEsE,OAASC,KAAK2C,MAAMjH,EAAEqE,IAC3C,CACA,SAAS6pC,GAAiBnuC,EAAGC,GACzB,OAAOiuC,GAAkBluC,EAAE2L,EAAG1L,EAAE0L,IAAMuiC,GAAkBluC,EAAE4L,EAAG3L,EAAE2L,EACnE,CACA,SAASwiC,GAAYnP,GACjB,OAAOtB,GAAWsB,EAAItzB,GAAKgyB,GAAWsB,EAAIrzB,EAC9C,CACA,SAASyiC,GAAgBruC,EAAGC,GACxB,OAAQD,EAAE+9B,YAAc99B,EAAE89B,WACtB/9B,EAAEmX,QAAUlX,EAAEkX,OACdnX,EAAE89B,cAAgB79B,EAAE69B,WAC5B,CC1BA,MAAMwQ,GACF5uC,WAAAA,GACIC,KAAK+qC,QAAU,EACnB,CACA7qC,GAAAA,CAAIs8B,GACAh+B,EAAcwB,KAAK+qC,QAASvO,GAC5BA,EAAKoS,gBACT,CACAtD,MAAAA,CAAO9O,GAKH,GAJA39B,EAAWmB,KAAK+qC,QAASvO,GACrBA,IAASx8B,KAAK6uC,WACd7uC,KAAK6uC,cAAWrvC,GAEhBg9B,IAASx8B,KAAK8uC,KAAM,CACpB,MAAMD,EAAW7uC,KAAK+qC,QAAQ/qC,KAAK+qC,QAAQtqC,OAAS,GAChDouC,GACA7uC,KAAK2qC,QAAQkE,EAErB,CACJ,CACAjE,QAAAA,CAASpO,GACL,MAAMuS,EAAc/uC,KAAK+qC,QAAQiE,WAAWC,GAAWzS,IAASyS,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAInuC,EAAIquC,EAAaruC,GAAK,EAAGA,IAAK,CACnC,MAAMuuC,EAASjvC,KAAK+qC,QAAQrqC,GAC5B,IAAyB,IAArBuuC,EAAO/R,UAAqB,CAC5B2R,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA7uC,KAAK2qC,QAAQkE,IACN,EAKf,CACAlE,OAAAA,CAAQnO,EAAM0S,GACV,MAAML,EAAW7uC,KAAK8uC,KACtB,GAAItS,IAASqS,IAEb7uC,KAAK6uC,SAAWA,EAChB7uC,KAAK8uC,KAAOtS,EACZA,EAAK2S,OACDN,GAAU,CACVA,EAAS9O,UAAY8O,EAASD,iBAC9BpS,EAAKoS,iBACLpS,EAAK4S,WAAaP,EACdK,IACA1S,EAAK4S,WAAWC,iBAAkB,GAElCR,EAASS,WACT9S,EAAK8S,SAAWT,EAASS,SACzB9S,EAAK8S,SAAShY,aACVuX,EAASU,iBAAmBV,EAASvX,cAEzCkF,EAAK9vB,MAAQ8vB,EAAK9vB,KAAK8iC,aACvBhT,EAAKiT,eAAgB,GAEzB,MAAM,UAAEC,GAAclT,EAAKnwB,SACT,IAAdqjC,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACI5vC,KAAK+qC,QAAQxoC,SAASi6B,IAClB,MAAM,QAAEnwB,EAAO,aAAEwjC,GAAiBrT,EAClCnwB,EAAQ8wB,gBAAkB9wB,EAAQ8wB,iBAC9B0S,GACAA,EAAaxjC,QAAQ8wB,gBACjB0S,EAAaxjC,QAAQ8wB,gBAC7B,GAER,CACAyR,cAAAA,GACI5uC,KAAK+qC,QAAQxoC,SAASi6B,IAClBA,EAAKuD,UAAYvD,EAAKoS,gBAAe,EAAM,GAEnD,CAKAkB,kBAAAA,GACQ9vC,KAAK8uC,MAAQ9uC,KAAK8uC,KAAKQ,WACvBtvC,KAAK8uC,KAAKQ,cAAW9vC,EAE7B,ECpFJ,MAAMuwC,GAAU,CACZC,MAAO,EACPC,uBAAwB,EACxBC,sBAAuB,GAErBC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAI3T,GAAK,EACT,SAAS4T,GAAyBzuC,EAAKO,EAAeE,EAAQiuC,GAC1D,MAAM,aAAEjZ,GAAiBl1B,EAErBk1B,EAAaz1B,KACbS,EAAOT,GAAOy1B,EAAaz1B,GAC3BO,EAAcouC,eAAe3uC,EAAK,GAC9B0uC,IACAA,EAAsB1uC,GAAO,GAGzC,CACA,SAAS4uC,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAehkC,OAASgkC,EACxB,OACJ,MAAM,cAAEtuC,GAAkBsuC,EAAerkC,QACzC,IAAKjK,EACD,OACJ,MAAMq1B,EAAWpiB,GAAqBjT,GACtC,GAAIc,OAAO0tC,4BAA4BnZ,EAAU,aAAc,CAC3D,MAAM,OAAEnmB,EAAM,SAAEy4B,GAAa2G,EAAerkC,QAC5CnJ,OAAO2tC,+BAA+BpZ,EAAU,YAAansB,IAASgG,GAAUy4B,GACpF,CACA,MAAM,OAAEn8B,GAAW8iC,EACf9iC,IAAWA,EAAO+iC,2BAClBF,GAAuC7iC,EAE/C,CACA,SAASkjC,GAAoBjpC,GAA6F,IAA5F,qBAAEkpC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiBtpC,EACpH,OAAO,MACH9H,WAAAA,GAAuH,IAA3Gu3B,EAAY51B,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGkM,EAAMlM,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAqB,OAAlBsvC,QAA4C,IAAlBA,OAA2B,EAASA,IAIlGhxC,KAAK08B,GAAKA,KAIV18B,KAAKoxC,YAAc,EAOnBpxC,KAAKmsC,SAAW,IAAI/qC,IAKpBpB,KAAKqM,QAAU,CAAC,EAMhBrM,KAAKqxC,iBAAkB,EACvBrxC,KAAKykC,oBAAqB,EAO1BzkC,KAAKyvC,eAAgB,EAKrBzvC,KAAKsxC,mBAAoB,EAKzBtxC,KAAKuxC,yBAA0B,EAK/BvxC,KAAKwxC,kBAAmB,EAIxBxxC,KAAKyxC,uBAAwB,EAC7BzxC,KAAK0xC,uBAAwB,EAK7B1xC,KAAKwvC,YAAa,EAIlBxvC,KAAK2xC,OAAQ,EAKb3xC,KAAK4xC,YAAa,EAIlB5xC,KAAK6xC,sBAAuB,EAO5B7xC,KAAK2wC,2BAA4B,EASjC3wC,KAAKkpC,UAAY,CAAEl9B,EAAG,EAAGC,EAAG,GAI5BjM,KAAK8xC,cAAgB,IAAIrwC,IACzBzB,KAAK+xC,iBAAkB,EAEvB/xC,KAAKgyC,iBAAkB,EACvBhyC,KAAKiyC,eAAiB,IAAMjyC,KAAK4K,SACjC5K,KAAKkyC,2BAA4B,EACjClyC,KAAKmyC,kBAAoB,KACjBnyC,KAAKwvC,aACLxvC,KAAKwvC,YAAa,EAClBxvC,KAAKoyC,oBACT,EAOJpyC,KAAKqyC,iBAAmB,KACpBryC,KAAKkyC,2BAA4B,EAK7BvpC,EAAY/I,QACZmwC,GAAQC,MACJD,GAAQE,uBACJF,GAAQG,sBACJ,GAEhBlwC,KAAKgwC,MAAMztC,QAAQ+vC,IACnBtyC,KAAKgwC,MAAMztC,QAAQgwC,IACnBvyC,KAAKgwC,MAAMztC,QAAQiwC,IACnBxyC,KAAKgwC,MAAMztC,QAAQkwC,IACf9pC,EAAYC,sBACZD,EAAYC,qBAAqBmnC,GACrC,EAKJ/vC,KAAK0yC,yBAA2B,EAChC1yC,KAAK2yC,cAAe,EACpB3yC,KAAK4yC,WAAY,EACjB5yC,KAAK6yC,kBAAoB,EAKzB7yC,KAAK8yC,YAAc,IAAIrxC,IACvBzB,KAAKs3B,aAAeA,EACpBt3B,KAAK0M,KAAOkB,EAASA,EAAOlB,MAAQkB,EAAS5N,KAC7CA,KAAK+yC,KAAOnlC,EAAS,IAAIA,EAAOmlC,KAAMnlC,GAAU,GAChD5N,KAAK4N,OAASA,EACd5N,KAAKmlB,MAAQvX,EAASA,EAAOuX,MAAQ,EAAI,EACzC,IAAK,IAAIzkB,EAAI,EAAGA,EAAIV,KAAK+yC,KAAKtyC,OAAQC,IAClCV,KAAK+yC,KAAKryC,GAAGmxC,sBAAuB,EAEpC7xC,KAAK0M,OAAS1M,OACdA,KAAKgwC,MAAQ,IAAI9D,GACzB,CACA17B,gBAAAA,CAAiBoL,EAAMzb,GAInB,OAHKH,KAAK8xC,cAAchwC,IAAI8Z,IACxB5b,KAAK8xC,cAAc/vC,IAAI6Z,EAAM,IAAI9b,GAE9BE,KAAK8xC,cAAcnwC,IAAIia,GAAM1b,IAAIC,EAC5C,CACA6yC,eAAAA,CAAgBp3B,GACZ,MAAMq3B,EAAsBjzC,KAAK8xC,cAAcnwC,IAAIia,GAAM,QAAAwO,EAAA1oB,UAAAjB,OADpCyyC,EAAI,IAAA7sC,MAAA+jB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ4oB,EAAI5oB,EAAA,GAAA5oB,UAAA4oB,GAEzB2oB,GAAuBA,EAAoB7yC,UAAU8yC,EACzD,CACAC,YAAAA,CAAav3B,GACT,OAAO5b,KAAK8xC,cAAchwC,IAAI8Z,EAClC,CAIAkhB,KAAAA,CAAMiD,GAAqD,IAA3C0P,EAAa/tC,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG1B,KAAK0M,KAAKqlC,gBACtC,GAAI/xC,KAAK+/B,SACL,OC7OhB,IAAsBrvB,ED8OV1Q,KAAK2xC,OC9OKjhC,ED8OgBqvB,aC7ORqT,YAAkC,QAApB1iC,EAAQG,QD8OxC7Q,KAAK+/B,SAAWA,EAChB,MAAM,SAAEgK,EAAQ,OAAEz4B,EAAM,cAAElP,GAAkBpC,KAAKqM,QASjD,GARIjK,IAAkBA,EAAcS,SAChCT,EAAc06B,MAAMiD,GAExB//B,KAAK0M,KAAKsjC,MAAM9vC,IAAIF,MACpBA,KAAK4N,QAAU5N,KAAK4N,OAAOu+B,SAASjsC,IAAIF,MACpCyvC,IAAkBn+B,GAAUy4B,KAC5B/pC,KAAKyvC,eAAgB,GAErBsB,EAAsB,CACtB,IAAIsC,EACJ,MAAMC,EAAsBA,IAAOtzC,KAAK0M,KAAKglC,uBAAwB,EACrEX,EAAqBhR,GAAU,KAC3B//B,KAAK0M,KAAKglC,uBAAwB,EAClC2B,GAAeA,IACfA,EAAcprB,GAAMqrB,EAAqB,KACrC5K,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C3oC,KAAKgwC,MAAMztC,QAAQgxC,IACvB,GAER,CACIxJ,GACA/pC,KAAK0M,KAAK8mC,mBAAmBzJ,EAAU/pC,OAGd,IAAzBA,KAAKqM,QAAQrF,SACb5E,IACC2nC,GAAYz4B,IACbtR,KAAKwQ,iBAAiB,aAAauR,IAA+E,IAA9E,MAAE7Y,EAAK,iBAAEk/B,EAAgB,yBAAEqL,EAA0BniC,OAAQoiC,GAAY3xB,EACzG,GAAI/hB,KAAK2zC,yBAGL,OAFA3zC,KAAKwN,YAAShO,OACdQ,KAAK4zC,oBAAiBp0C,GAI1B,MAAMq0C,EAAmB7zC,KAAKqM,QAAQ5G,YAClCrD,EAAc2zB,wBACd+d,IACE,uBAAEC,EAAsB,0BAAEC,GAA+B5xC,EAAcY,WAKvEixC,GAAoBj0C,KAAKk0C,eAC1B1F,GAAiBxuC,KAAKk0C,aAAcR,GAYnCS,GAAgC/L,GAAoBqL,EAC1D,GAAIzzC,KAAKqM,QAAQ+nC,YACbp0C,KAAKovC,YACL+E,GACC/L,IACI6L,IAAqBj0C,KAAKirC,kBAAoB,CAC/CjrC,KAAKovC,aACLpvC,KAAK6vC,aAAe7vC,KAAKovC,WACzBpvC,KAAK6vC,aAAaA,kBAAerwC,GAErCQ,KAAKq0C,mBAAmBnrC,EAAOirC,GAC/B,MAAMG,EAAmB,IAClB9uC,EAAmBquC,EAAkB,UACxCtf,OAAQwf,EACRhwB,WAAYiwB,IAEZ5xC,EAAcs1B,oBACd13B,KAAKqM,QAAQ+nC,cACbE,EAAiBrsB,MAAQ,EACzBqsB,EAAiBruC,MAAO,GAE5BjG,KAAK4T,eAAe0gC,EACxB,MAOSlM,GACDmL,GAAgBvzC,MAEhBA,KAAKkrC,UAAYlrC,KAAKqM,QAAQ8wB,gBAC9Bn9B,KAAKqM,QAAQ8wB,iBAGrBn9B,KAAKk0C,aAAeR,CAAS,GAGzC,CACAzW,OAAAA,GACIj9B,KAAKqM,QAAQ09B,UAAY/pC,KAAK0qC,aAC9B1qC,KAAK0M,KAAKsjC,MAAM1E,OAAOtrC,MACvB,MAAM6qC,EAAQ7qC,KAAK8qC,WACnBD,GAASA,EAAMS,OAAOtrC,MACtBA,KAAK4N,QAAU5N,KAAK4N,OAAOu+B,SAAS9hC,OAAOrK,MAC3CA,KAAK+/B,cAAWvgC,EAChB+L,EAAYvL,KAAKqyC,iBACrB,CAEAkC,WAAAA,GACIv0C,KAAKyxC,uBAAwB,CACjC,CACA+C,aAAAA,GACIx0C,KAAKyxC,uBAAwB,CACjC,CACAgD,eAAAA,GACI,OAAOz0C,KAAKyxC,uBAAyBzxC,KAAK0xC,qBAC9C,CACAiC,sBAAAA,GACI,OAAQ3zC,KAAKykC,oBACRzkC,KAAK4N,QAAU5N,KAAK4N,OAAO+lC,2BAC5B,CACR,CAEAe,WAAAA,GACQ10C,KAAKy0C,oBAETz0C,KAAKwvC,YAAa,EAClBxvC,KAAKgwC,OAAShwC,KAAKgwC,MAAMztC,QAAQoyC,IACjC30C,KAAKoxC,cACT,CACAwD,oBAAAA,GACI,MAAM,cAAExyC,GAAkBpC,KAAKqM,QAC/B,OAAOjK,GAAiBA,EAAcY,WAAW4yB,iBACrD,CACA8U,UAAAA,GAAyC,IAA9BmK,IAAqBnzC,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,KAAAA,UAAA,GAE5B,GADA1B,KAAK0M,KAAKqlC,iBAAkB,EACxB/xC,KAAK0M,KAAK+nC,kBAEV,YADAz0C,KAAKqM,QAAQ8wB,gBAAkBn9B,KAAKqM,QAAQ8wB,kBAoBhD,GALIj6B,OAAO2tC,iCACN7wC,KAAK2wC,2BACNF,GAAuCzwC,OAE1CA,KAAK0M,KAAK8iC,YAAcxvC,KAAK0M,KAAKgoC,cAC/B10C,KAAKyvC,cACL,OACJzvC,KAAKyvC,eAAgB,EACrB,IAAK,IAAI/uC,EAAI,EAAGA,EAAIV,KAAK+yC,KAAKtyC,OAAQC,IAAK,CACvC,MAAM87B,EAAOx8B,KAAK+yC,KAAKryC,GACvB87B,EAAKqV,sBAAuB,EAC5BrV,EAAKmL,aAAa,YACdnL,EAAKnwB,QAAQ+nC,YACb5X,EAAKkO,YAAW,EAExB,CACA,MAAM,SAAEX,EAAQ,OAAEz4B,GAAWtR,KAAKqM,QAClC,QAAiB7M,IAAbuqC,IAA2Bz4B,EAC3B,OACJ,MAAMskB,EAAoB51B,KAAK40C,uBAC/B50C,KAAK80C,2BAA6Blf,EAC5BA,EAAkB51B,KAAKs3B,aAAc,SACrC93B,EACNQ,KAAK+0C,iBACLF,GAAyB70C,KAAKgzC,gBAAgB,aAClD,CACApoC,MAAAA,GACI5K,KAAKgyC,iBAAkB,EAKvB,GAJyBhyC,KAAKy0C,kBAQ1B,OAHAz0C,KAAKw0C,gBACLx0C,KAAKoyC,yBACLpyC,KAAKgwC,MAAMztC,QAAQyyC,IAGlBh1C,KAAKwvC,YACNxvC,KAAKgwC,MAAMztC,QAAQ0yC,IAEvBj1C,KAAKwvC,YAAa,EAIlBxvC,KAAKgwC,MAAMztC,QAAQ2yC,IAKnBl1C,KAAKgwC,MAAMztC,QAAQqlC,IAKnB5nC,KAAKgwC,MAAMztC,QAAQ4yC,IACnBn1C,KAAKoyC,oBAML,MAAMlnC,EAAM3G,EAAK2G,MACjBX,EAAUrB,MAAQiO,GAAM,EAAG,IAAO,GAAIjM,EAAMX,EAAUpB,WACtDoB,EAAUpB,UAAY+B,EACtBX,EAAUnB,cAAe,EACzBoC,EAAWZ,OAAON,QAAQC,GAC1BiB,EAAWX,UAAUP,QAAQC,GAC7BiB,EAAWV,OAAOR,QAAQC,GAC1BA,EAAUnB,cAAe,CAC7B,CACAihC,SAAAA,GACSrqC,KAAKgyC,kBACNhyC,KAAKgyC,iBAAkB,EACvBtmC,EAAUhB,KAAK1K,KAAKiyC,gBAE5B,CACAG,iBAAAA,GACIpyC,KAAKgwC,MAAMztC,QAAQ6yC,IACnBp1C,KAAK8yC,YAAYvwC,QAAQ8yC,GAC7B,CACAC,wBAAAA,GACSt1C,KAAKkyC,4BACNlyC,KAAKkyC,2BAA4B,EACjC5mC,EAAMT,UAAU7K,KAAKqyC,kBAAkB,GAAO,GAEtD,CACAhH,yBAAAA,GAMI//B,EAAMP,YAAW,KACT/K,KAAKyvC,cACLzvC,KAAK0M,KAAK29B,YAGVrqC,KAAK0M,KAAKylC,mBACd,GAER,CAIA4C,cAAAA,IACQ/0C,KAAKsvC,UAAatvC,KAAK+/B,WAE3B//B,KAAKsvC,SAAWtvC,KAAK2lC,WACjB3lC,KAAKsvC,UACJtR,GAAWh+B,KAAKsvC,SAASiG,YAAYvpC,IACrCgyB,GAAWh+B,KAAKsvC,SAASiG,YAAYtpC,KACtCjM,KAAKsvC,cAAW9vC,GAExB,CACAooC,YAAAA,GACI,IAAK5nC,KAAK+/B,SACN,OAGJ,GADA//B,KAAK2nC,iBACC3nC,KAAKqM,QAAQmpC,sBAAuBx1C,KAAKkrC,YAC1ClrC,KAAKyvC,cACN,OASJ,GAAIzvC,KAAKovC,aAAepvC,KAAKovC,WAAWrP,SACpC,IAAK,IAAIr/B,EAAI,EAAGA,EAAIV,KAAK+yC,KAAKtyC,OAAQC,IAAK,CAC1BV,KAAK+yC,KAAKryC,GAClBinC,cACT,CAEJ,MAAM8N,EAAaz1C,KAAKsR,OACxBtR,KAAKsR,OAAStR,KAAK2lC,SAAQ,GAC3B3lC,KAAK01C,gB/BvgBC,CACd1pC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BygB7B3E,KAAKyvC,eAAgB,EACrBzvC,KAAKmpC,qBAAkB3pC,EACvBQ,KAAKgzC,gBAAgB,UAAWhzC,KAAKsR,OAAOszB,WAC5C,MAAM,cAAExiC,GAAkBpC,KAAKqM,QAC/BjK,GACIA,EAAchC,OAAO,gBAAiBJ,KAAKsR,OAAOszB,UAAW6Q,EAAaA,EAAW7Q,eAAYplC,EACzG,CACAmoC,YAAAA,GAAgC,IAAnBgO,EAAKj0C,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,UACbuhB,EAAmBxf,QAAQzD,KAAKqM,QAAQupC,cAAgB51C,KAAK+/B,UAMjE,GALI//B,KAAKumC,QACLvmC,KAAKumC,OAAO6K,cAAgBpxC,KAAK0M,KAAK0kC,aACtCpxC,KAAKumC,OAAOoP,QAAUA,IACtB1yB,GAAmB,GAEnBA,EAAkB,CAClB,MAAM4yB,EAAS3E,EAAkBlxC,KAAK+/B,UACtC//B,KAAKumC,OAAS,CACV6K,YAAapxC,KAAK0M,KAAK0kC,YACvBuE,QACAE,SACAtkB,OAAQ0f,EAAcjxC,KAAK+/B,UAC3B+V,QAAS91C,KAAKumC,OAASvmC,KAAKumC,OAAOsP,OAASA,EAEpD,CACJ,CACA1E,cAAAA,GACI,IAAKA,EACD,OACJ,MAAM4E,EAAmB/1C,KAAKyvC,eAC1BzvC,KAAK6xC,sBACL7xC,KAAKqM,QAAQmpC,oBACXQ,EAAgBh2C,KAAKmpC,kBAAoBkF,GAAYruC,KAAKmpC,iBAC1DvT,EAAoB51B,KAAK40C,uBACzBqB,EAAyBrgB,EACzBA,EAAkB51B,KAAKs3B,aAAc,SACrC93B,EACA02C,EAA8BD,IAA2Bj2C,KAAK80C,2BAChEiB,IACCC,GACGlX,GAAa9+B,KAAKs3B,eAClB4e,KACJ/E,EAAenxC,KAAK+/B,SAAUkW,GAC9Bj2C,KAAK6xC,sBAAuB,EAC5B7xC,KAAK4uC,iBAEb,CACAjJ,OAAAA,GAAgC,IAAxBwQ,IAAez0C,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,KAAAA,UAAA,GACnB,MAAM00C,EAAUp2C,KAAKwmC,iBACrB,IAAI5B,EAAY5kC,KAAKq2C,oBAAoBD,GA8+BrD,IAAkB9W,EAp+BN,OAJI6W,IACAvR,EAAY5kC,KAAKm2C,gBAAgBvR,IAw+B7C0R,IADchX,EAr+BGsF,GAs+BH54B,GACdsqC,GAAUhX,EAAIrzB,GAt+BC,CACHmlC,YAAapxC,KAAK0M,KAAK0kC,YACvBmE,YAAaa,EACbxR,YACAtN,aAAc,CAAC,EACfrc,OAAQjb,KAAK08B,GAErB,CACA8J,cAAAA,GACI,IAAI5/B,EACJ,MAAM,cAAExE,GAAkBpC,KAAKqM,QAC/B,IAAKjK,EACD,M/B9kBE,CACd4J,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BglB7B,MAAM26B,EAAMl9B,EAAcykB,qBAE1B,MADgD,QAAtBjgB,EAAK5G,KAAKumC,cAA2B,IAAP3/B,OAAgB,EAASA,EAAGkvC,UAAY91C,KAAK+yC,KAAKplB,KAAK4oB,KACzF,CAElB,MAAM,OAAEhQ,GAAWvmC,KAAK0M,KACpB65B,IACA9G,GAAcH,EAAItzB,EAAGu6B,EAAOhV,OAAOvlB,GACnCyzB,GAAcH,EAAIrzB,EAAGs6B,EAAOhV,OAAOtlB,GAE3C,CACA,OAAOqzB,CACX,CACA+W,mBAAAA,CAAoB/W,GAChB,IAAI14B,EACJ,MAAM4vC,E/B7lBA,CACdxqC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BgmB7B,GADA0oC,GAAYmJ,EAAkBlX,GACH,QAAtB14B,EAAK5G,KAAKumC,cAA2B,IAAP3/B,OAAgB,EAASA,EAAGkvC,QAC3D,OAAOU,EAMX,IAAK,IAAI91C,EAAI,EAAGA,EAAIV,KAAK+yC,KAAKtyC,OAAQC,IAAK,CACvC,MAAM87B,EAAOx8B,KAAK+yC,KAAKryC,IACjB,OAAE6lC,EAAM,QAAEl6B,GAAYmwB,EACxBA,IAASx8B,KAAK0M,MAAQ65B,GAAUl6B,EAAQupC,eAKpCrP,EAAOuP,SACPzI,GAAYmJ,EAAkBlX,GAElCG,GAAc+W,EAAiBxqC,EAAGu6B,EAAOhV,OAAOvlB,GAChDyzB,GAAc+W,EAAiBvqC,EAAGs6B,EAAOhV,OAAOtlB,GAExD,CACA,OAAOuqC,CACX,CACAC,cAAAA,CAAenX,GAA4B,IAAvBoX,EAAah1C,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GAC7B,MAAMi1C,E/BxnBA,CACd3qC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+B0nB7B0oC,GAAYsJ,EAAgBrX,GAC5B,IAAK,IAAI5+B,EAAI,EAAGA,EAAIV,KAAK+yC,KAAKtyC,OAAQC,IAAK,CACvC,MAAM87B,EAAOx8B,KAAK+yC,KAAKryC,IAClBg2C,GACDla,EAAKnwB,QAAQupC,cACbpZ,EAAK+J,QACL/J,IAASA,EAAK9vB,MACdozB,GAAa6W,EAAgB,CACzB3qC,GAAIwwB,EAAK+J,OAAOhV,OAAOvlB,EACvBC,GAAIuwB,EAAK+J,OAAOhV,OAAOtlB,IAG1B6yB,GAAatC,EAAKlF,eAEvBwI,GAAa6W,EAAgBna,EAAKlF,aACtC,CAIA,OAHIwH,GAAa9+B,KAAKs3B,eAClBwI,GAAa6W,EAAgB32C,KAAKs3B,cAE/Bqf,CACX,CACAR,eAAAA,CAAgB7W,GACZ,MAAMsX,E/B/oBA,CACd5qC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BipB7B0oC,GAAYuJ,EAAqBtX,GACjC,IAAK,IAAI5+B,EAAI,EAAGA,EAAIV,KAAK+yC,KAAKtyC,OAAQC,IAAK,CACvC,MAAM87B,EAAOx8B,KAAK+yC,KAAKryC,GACvB,IAAK87B,EAAKuD,SACN,SACJ,IAAKjB,GAAatC,EAAKlF,cACnB,SACJuH,GAASrC,EAAKlF,eAAiBkF,EAAKuY,iBACpC,MAAM5G,E/BxpBJ,CACdniC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+B2pBzB0oC,GAAYc,EADI3R,EAAKgK,kBAErB0H,GAAoB0I,EAAqBpa,EAAKlF,aAAckF,EAAK8S,SAAW9S,EAAK8S,SAAS1K,eAAYplC,EAAW2uC,EACrH,CAIA,OAHIrP,GAAa9+B,KAAKs3B,eAClB4W,GAAoB0I,EAAqB52C,KAAKs3B,cAE3Csf,CACX,CACAC,cAAAA,CAAe3tC,GACXlJ,KAAK82C,YAAc5tC,EACnBlJ,KAAK0M,KAAK4oC,2BACVt1C,KAAKsxC,mBAAoB,CAC7B,CACA/G,UAAAA,CAAWl+B,GACPrM,KAAKqM,QAAU,IACRrM,KAAKqM,WACLA,EACHqjC,eAAiClwC,IAAtB6M,EAAQqjC,WAA0BrjC,EAAQqjC,UAE7D,CACAsF,iBAAAA,GACIh1C,KAAKumC,YAAS/mC,EACdQ,KAAKsR,YAAS9R,EACdQ,KAAKsvC,cAAW9vC,EAChBQ,KAAK80C,gCAA6Bt1C,EAClCQ,KAAK82C,iBAAct3C,EACnBQ,KAAKwN,YAAShO,EACdQ,KAAKyvC,eAAgB,CACzB,CACAsH,kCAAAA,GACS/2C,KAAKg3C,gBAQNh3C,KAAKg3C,eAAetE,2BACpBnoC,EAAUpB,WACVnJ,KAAKg3C,eAAezE,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5B0E,EAAkBv1C,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GACjC,IAAIkF,EAMJ,MAAMkoC,EAAO9uC,KAAKk3C,UAClBl3C,KAAKsxC,oBAAsBtxC,KAAKsxC,kBAAoBxC,EAAKwC,mBACzDtxC,KAAKwxC,mBAAqBxxC,KAAKwxC,iBAAmB1C,EAAK0C,kBACvDxxC,KAAKuxC,0BAA4BvxC,KAAKuxC,wBAA0BzC,EAAKyC,yBACrE,MAAM4F,EAAW1zC,QAAQzD,KAAK6vC,eAAiB7vC,OAAS8uC,EAWxD,KANkBmI,GACbE,GAAYn3C,KAAKuxC,yBAClBvxC,KAAKsxC,oBACmB,QAAtB1qC,EAAK5G,KAAK4N,cAA2B,IAAPhH,OAAgB,EAASA,EAAG0qC,oBAC5DtxC,KAAKo3C,gCACLp3C,KAAK0M,KAAKglC,uBAEV,OACJ,MAAM,OAAEpgC,EAAM,SAAEy4B,GAAa/pC,KAAKqM,QAIlC,GAAKrM,KAAKsR,SAAYA,GAAUy4B,GAAhC,CAQA,GANA/pC,KAAK0yC,yBAA2BnoC,EAAUpB,WAMrCnJ,KAAK82C,cAAgB92C,KAAK4zC,eAAgB,CAC3C,MAAMoD,EAAiBh3C,KAAKq3C,6BACxBL,GACAA,EAAe1lC,QACY,IAA3BtR,KAAK6yC,mBACL7yC,KAAKg3C,eAAiBA,EACtBh3C,KAAK+2C,qCACL/2C,KAAK4zC,e/BhvBP,CACd5nC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BkvBrB3E,KAAKs3C,qB/BjvBP,CACdtrC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BmvBrB85B,GAAqBz+B,KAAKs3C,qBAAsBt3C,KAAKsR,OAAOszB,UAAWoS,EAAe1lC,OAAOszB,WAC7FyI,GAAYrtC,KAAK4zC,eAAgB5zC,KAAKs3C,uBAGtCt3C,KAAKg3C,eAAiBh3C,KAAK4zC,oBAAiBp0C,CAEpD,CAKA,GAAKQ,KAAK4zC,gBAAmB5zC,KAAK82C,YAAlC,ChCluBZ,IAAyBtpC,EAAQ+wB,EAAU3wB,EgC2wB/B,GApCK5N,KAAKwN,SACNxN,KAAKwN,O/BnwBH,CACdxB,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BqwBzB3E,KAAKu3C,qB/BpwBH,CACdvrC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,K+B0wBzB3E,KAAK4zC,gBACL5zC,KAAKs3C,sBACLt3C,KAAKg3C,gBACLh3C,KAAKg3C,eAAexpC,QACpBxN,KAAK+2C,qChClvBIvpC,EgCmvBOxN,KAAKwN,OhCnvBJ+wB,EgCmvBYv+B,KAAK4zC,ehCnvBPhmC,EgCmvBuB5N,KAAKg3C,eAAexpC,OhClvBlF8wB,GAAiB9wB,EAAOxB,EAAGuyB,EAASvyB,EAAG4B,EAAO5B,GAC9CsyB,GAAiB9wB,EAAOvB,EAAGsyB,EAAStyB,EAAG2B,EAAO3B,IgCsvB7BjM,KAAK82C,aACNrzC,QAAQzD,KAAK6vC,cAEb7vC,KAAKwN,OAASxN,KAAKy2C,eAAez2C,KAAKsR,OAAOszB,WAG9CyI,GAAYrtC,KAAKwN,OAAQxN,KAAKsR,OAAOszB,WAEzCvF,GAAcr/B,KAAKwN,OAAQxN,KAAK82C,cAMhCzJ,GAAYrtC,KAAKwN,OAAQxN,KAAKsR,OAAOszB,WAKrC5kC,KAAKo3C,+BAAgC,CACrCp3C,KAAKo3C,gCAAiC,EACtC,MAAMJ,EAAiBh3C,KAAKq3C,6BACxBL,GACAvzC,QAAQuzC,EAAenH,gBACnBpsC,QAAQzD,KAAK6vC,gBAChBmH,EAAe3qC,QAAQupC,cACxBoB,EAAexpC,QACY,IAA3BxN,KAAK6yC,mBACL7yC,KAAKg3C,eAAiBA,EACtBh3C,KAAK+2C,qCACL/2C,KAAK4zC,e/BjzBP,CACd5nC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BmzBrB3E,KAAKs3C,qB/BlzBP,CACdtrC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BozBrB85B,GAAqBz+B,KAAKs3C,qBAAsBt3C,KAAKwN,OAAQwpC,EAAexpC,QAC5E6/B,GAAYrtC,KAAK4zC,eAAgB5zC,KAAKs3C,uBAGtCt3C,KAAKg3C,eAAiBh3C,KAAK4zC,oBAAiBp0C,CAEpD,CAIImJ,EAAY/I,OACZmwC,GAAQE,wBAhEF,CA5BA,CA8Fd,CACAoH,0BAAAA,GACI,GAAKr3C,KAAK4N,SACNixB,GAAS7+B,KAAK4N,OAAO0pB,gBACrByH,GAAe/+B,KAAK4N,OAAO0pB,cAG/B,OAAIt3B,KAAK4N,OAAO4pC,eACLx3C,KAAK4N,OAGL5N,KAAK4N,OAAOypC,4BAE3B,CACAG,YAAAA,GACI,OAAO/zC,SAASzD,KAAK4zC,gBACjB5zC,KAAK82C,aACL92C,KAAKqM,QAAQ+nC,aACbp0C,KAAKsR,OACb,CACAkhC,cAAAA,GACI,IAAI5rC,EACJ,MAAMkoC,EAAO9uC,KAAKk3C,UACZC,EAAW1zC,QAAQzD,KAAK6vC,eAAiB7vC,OAAS8uC,EACxD,IAAI2I,GAAU,EAuBd,IAlBIz3C,KAAKsxC,oBAA6C,QAAtB1qC,EAAK5G,KAAK4N,cAA2B,IAAPhH,OAAgB,EAASA,EAAG0qC,sBACtFmG,GAAU,GAMVN,IACCn3C,KAAKuxC,yBAA2BvxC,KAAKwxC,oBACtCiG,GAAU,GAMVz3C,KAAK0yC,2BAA6BnoC,EAAUpB,YAC5CsuC,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEnmC,EAAM,SAAEy4B,GAAa/pC,KAAKqM,QAWlC,GANArM,KAAKqxC,gBAAkB5tC,QAASzD,KAAK4N,QAAU5N,KAAK4N,OAAOyjC,iBACvDrxC,KAAKirC,kBACLjrC,KAAK03C,kBACJ13C,KAAKqxC,kBACNrxC,KAAK82C,YAAc92C,KAAK4zC,oBAAiBp0C,IAExCQ,KAAKsR,SAAYA,IAAUy4B,EAC5B,OAKJsD,GAAYrtC,KAAK01C,gBAAiB11C,KAAKsR,OAAOszB,WAI9C,MAAM+S,EAAiB33C,KAAKkpC,UAAUl9B,EAChC4rC,EAAiB53C,KAAKkpC,UAAUj9B,G5Bx2BlD,SAAyBqzB,EAAK4J,EAAW2O,GAAsC,IAA5BC,EAAkBp2C,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GACjE,MAAMq2C,EAAaF,EAASp3C,OAC5B,IAAKs3C,EACD,OAGJ,IAAIvb,EACAtzB,EAFJggC,EAAUl9B,EAAIk9B,EAAUj9B,EAAI,EAG5B,IAAK,IAAIvL,EAAI,EAAGA,EAAIq3C,EAAYr3C,IAAK,CACjC87B,EAAOqb,EAASn3C,GAChBwI,EAAQszB,EAAK2M,gBAKb,MAAM,cAAE/mC,GAAkBo6B,EAAKnwB,QAC3BjK,GACAA,EAAcM,MAAMglC,OACkB,aAAtCtlC,EAAcM,MAAMglC,MAAMsQ,UAG1BF,GACAtb,EAAKnwB,QAAQupC,cACbpZ,EAAK+J,QACL/J,IAASA,EAAK9vB,MACdozB,GAAaR,EAAK,CACdtzB,GAAIwwB,EAAK+J,OAAOhV,OAAOvlB,EACvBC,GAAIuwB,EAAK+J,OAAOhV,OAAOtlB,IAG3B/C,IAEAggC,EAAUl9B,GAAK9C,EAAM8C,EAAEwL,MACvB0xB,EAAUj9B,GAAK/C,EAAM+C,EAAEuL,MAEvB6nB,GAAcC,EAAKp2B,IAEnB4uC,GAAsBhZ,GAAatC,EAAKlF,eACxCwI,GAAaR,EAAK9C,EAAKlF,cAE/B,CAKI4R,EAAUl9B,EAAIwzB,IACd0J,EAAUl9B,EAAIuzB,KACd2J,EAAUl9B,EAAI,GAEdk9B,EAAUj9B,EAAIuzB,IACd0J,EAAUj9B,EAAIszB,KACd2J,EAAUj9B,EAAI,EAEtB,C4BwzBYgsC,CAAgBj4C,KAAK01C,gBAAiB11C,KAAKkpC,UAAWlpC,KAAK+yC,KAAMoE,IAK7DrI,EAAKx9B,QACJw9B,EAAKthC,QACgB,IAArBxN,KAAKkpC,UAAUl9B,GAAgC,IAArBhM,KAAKkpC,UAAUj9B,IAC1C6iC,EAAKthC,OAASshC,EAAKx9B,OAAOszB,UAC1BkK,EAAKyI,qB/Br5BH,CACdvrC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,K+Bw5B7B,MAAM,OAAE6I,GAAWshC,EACdthC,GAYAxN,KAAKmpC,iBAAoBnpC,KAAKk4C,qBAI/B3K,GAAkBvtC,KAAKk4C,oBAAoBlsC,EAAGhM,KAAKmpC,gBAAgBn9B,GACnEuhC,GAAkBvtC,KAAKk4C,oBAAoBjsC,EAAGjM,KAAKmpC,gBAAgBl9B,IAJnEjM,KAAKm4C,yBAeT9Z,GAAar+B,KAAKmpC,gBAAiBnpC,KAAK01C,gBAAiBloC,EAAQxN,KAAKs3B,cAClEt3B,KAAKkpC,UAAUl9B,IAAM2rC,GACrB33C,KAAKkpC,UAAUj9B,IAAM2rC,GACpBlJ,GAAgB1uC,KAAKmpC,gBAAgBn9B,EAAGhM,KAAKk4C,oBAAoBlsC,IACjE0iC,GAAgB1uC,KAAKmpC,gBAAgBl9B,EAAGjM,KAAKk4C,oBAAoBjsC,KAClEjM,KAAK2yC,cAAe,EACpB3yC,KAAK4uC,iBACL5uC,KAAKgzC,gBAAgB,mBAAoBxlC,IAKzC7E,EAAY/I,OACZmwC,GAAQG,yBAnCJlwC,KAAKk4C,sBACLl4C,KAAKm4C,yBACLn4C,KAAK4uC,iBAmCjB,CACAe,IAAAA,GACI3vC,KAAK4yC,WAAY,CAErB,CACAzD,IAAAA,GACInvC,KAAK4yC,WAAY,CAErB,CACAhE,cAAAA,GAAiC,IAAlBwJ,IAAS12C,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,KAAAA,UAAA,GACpB,IAAIkF,EAEJ,GADsC,QAArCA,EAAK5G,KAAKqM,QAAQjK,qBAAkC,IAAPwE,GAAyBA,EAAGgoC,iBACtEwJ,EAAW,CACX,MAAMvN,EAAQ7qC,KAAK8qC,WACnBD,GAASA,EAAM+D,gBACnB,CACI5uC,KAAK6vC,eAAiB7vC,KAAK6vC,aAAa9P,WACxC//B,KAAK6vC,kBAAerwC,EAE5B,CACA24C,sBAAAA,GACIn4C,KAAKk4C,oB/B79BG,CAChBlsC,EAPoB,CACpBoyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,GAIblyB,EARoB,CACpBmyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,I+Bg+BLn+B,KAAKmpC,gB/B99BG,CAChBn9B,EAPoB,CACpBoyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,GAIblyB,EARoB,CACpBmyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,I+Bi+BLn+B,KAAKq4C,6B/B/9BG,CAChBrsC,EAPoB,CACpBoyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,GAIblyB,EARoB,CACpBmyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,G+Bk+BT,CACAkW,kBAAAA,CAAmBnrC,GAA6C,IAAtCirC,EAA4BzyC,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GAClD,MAAM4tC,EAAWtvC,KAAKsvC,SAChBgJ,EAAuBhJ,EACvBA,EAAShY,aACT,CAAC,EACDihB,EAAc,IAAKv4C,KAAKs3B,cACxBwf,E/Bv+BE,CAChB9qC,EAPoB,CACpBoyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,GAIblyB,EARoB,CACpBmyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,I+B0+BAn+B,KAAKg3C,gBACLh3C,KAAKg3C,eAAe3qC,QAAQ+nC,aAC7Bp0C,KAAK4zC,eAAiB5zC,KAAKs3C,0BAAuB93C,GAEtDQ,KAAKo3C,gCAAkCjD,EACvC,MAAMqE,E/Bx+BA,CACdxsC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+B4+BvB8zC,GAFiBnJ,EAAWA,EAASr0B,YAASzb,MAC/BQ,KAAKsR,OAAStR,KAAKsR,OAAO2J,YAASzb,GAElDqrC,EAAQ7qC,KAAK8qC,WACb4N,GAAgB7N,GAASA,EAAME,QAAQtqC,QAAU,EACjDk4C,EAAyBl1C,QAAQg1C,IAClCC,IAC0B,IAA3B14C,KAAKqM,QAAQqjC,YACZ1vC,KAAK+yC,KAAKplB,KAAKirB,KAEpB,IAAIC,EADJ74C,KAAK6yC,kBAAoB,EAEzB7yC,KAAK84C,eAAkBjpB,IACnB,MAAMpwB,EAAWowB,EAAS,IFr/B1C,IAAmBxvB,EAAGC,EE2gDN6a,EAAQzb,EAAMC,EAAI8W,EArhBlBsiC,GAAajC,EAAY9qC,EAAG9C,EAAM8C,EAAGvM,GACrCs5C,GAAajC,EAAY7qC,EAAG/C,EAAM+C,EAAGxM,GACrCO,KAAK62C,eAAeC,GAChB92C,KAAK4zC,gBACL5zC,KAAKs3C,sBACLt3C,KAAKsR,QACLtR,KAAKg3C,gBACLh3C,KAAKg3C,eAAe1lC,SACpBmtB,GAAqB+Z,EAAgBx4C,KAAKsR,OAAOszB,UAAW5kC,KAAKg3C,eAAe1lC,OAAOszB,WA6gB3FzpB,EA5gBWnb,KAAK4zC,eA4gBRl0C,EA5gBwBM,KAAKs3C,qBA4gBvB33C,EA5gB6C64C,EA4gBzC/hC,EA5gByDhX,EA6gBvFu5C,GAAQ79B,EAAOnP,EAAGtM,EAAKsM,EAAGrM,EAAGqM,EAAGyK,GAChCuiC,GAAQ79B,EAAOlP,EAAGvM,EAAKuM,EAAGtM,EAAGsM,EAAGwK,GAzgBZoiC,IFpgCLx4C,EEqgCeL,KAAK4zC,eFrgCjBtzC,EEqgCiCu4C,EFpgC5CvK,GAAWjuC,EAAE2L,EAAG1L,EAAE0L,IAAMsiC,GAAWjuC,EAAE4L,EAAG3L,EAAE2L,MEqgC7BjM,KAAKsxC,mBAAoB,GAExBuH,IACDA,E/BzgCN,CACd7sC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,K+B2gCrB0oC,GAAYwL,EAAoB74C,KAAK4zC,iBAErC6E,IACAz4C,KAAKuvC,gBAAkBgJ,EL/gC3C,SAAmB/qC,EAAQyrC,EAAQnK,EAAMrvC,EAAUk5C,EAAwBD,GACnEC,GACAnrC,EAAOvG,QAAUkiB,GAAU,OAEV3pB,IAAjBsvC,EAAK7nC,QAAwB6nC,EAAK7nC,QAAU,EAAG+lC,GAAgBvtC,IAC/D+N,EAAO0rC,YAAc/vB,QAA6B3pB,IAAnBy5C,EAAOhyC,QAAwBgyC,EAAOhyC,QAAU,EAAG,EAAGimC,GAAiBztC,KAEjGi5C,IACLlrC,EAAOvG,QAAUkiB,QAA6B3pB,IAAnBy5C,EAAOhyC,QAAwBgyC,EAAOhyC,QAAU,OAAoBzH,IAAjBsvC,EAAK7nC,QAAwB6nC,EAAK7nC,QAAU,EAAGxH,IAKjI,IAAK,IAAIiB,EAAI,EAAGA,EAAIisC,GAAYjsC,IAAK,CACjC,MAAMy4C,EAAc,SAASzM,GAAQhsC,WACrC,IAAI04C,EAAetM,GAAUmM,EAAQE,GACjCE,EAAavM,GAAUgC,EAAMqK,QACZ35C,IAAjB45C,QAA6C55C,IAAf65C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAxM,GAAKuM,KAAkBvM,GAAKwM,IAE5B7rC,EAAO2rC,GAAev0C,KAAKD,IAAIwkB,GAAUyjB,GAASwM,GAAexM,GAASyM,GAAa55C,GAAW,IAC9Fia,GAAQxC,KAAKmiC,IAAe3/B,GAAQxC,KAAKkiC,MACzC5rC,EAAO2rC,IAAgB,MAI3B3rC,EAAO2rC,GAAeE,EAE9B,EAIIJ,EAAOl7B,QAAU+wB,EAAK/wB,UACtBvQ,EAAOuQ,OAASoL,GAAU8vB,EAAOl7B,QAAU,EAAG+wB,EAAK/wB,QAAU,EAAGte,GAExE,CKw+BoB65C,CAAUf,EAAaD,EAAsBt4C,KAAKs3B,aAAc73B,EAAUk5C,EAAwBD,IAEtG14C,KAAK0M,KAAK4oC,2BACVt1C,KAAK4uC,iBACL5uC,KAAK6yC,kBAAoBpzC,CAAQ,EAErCO,KAAK84C,eAAe94C,KAAKqM,QAAQ+nC,WAAa,IAAO,EACzD,CACAxgC,cAAAA,CAAevH,GACXrM,KAAKgzC,gBAAgB,kBACrBhzC,KAAKirC,kBAAoBjrC,KAAKirC,iBAAiB3nC,OAC3CtD,KAAK6vC,cAAgB7vC,KAAK6vC,aAAa5E,kBACvCjrC,KAAK6vC,aAAa5E,iBAAiB3nC,OAEnCtD,KAAK03C,mBACLnsC,EAAYvL,KAAK03C,kBACjB13C,KAAK03C,sBAAmBl4C,GAO5BQ,KAAK03C,iBAAmBpsC,EAAMV,QAAO,KACjC89B,GAAsBC,wBAAyB,EAC/Ct3B,GAAiBC,SACjBtR,KAAKirC,iBE/iCrB,SAA4BrrC,EAAOwnB,EAAW/a,GAC1C,MAAMktC,EAAgB1kC,GAAcjV,GAASA,EAAQwU,GAAYxU,GAEjE,OADA25C,EAAcr3C,MAAM+zB,GAAmB,GAAIsjB,EAAenyB,EAAW/a,IAC9DktC,EAAcz1C,SACzB,CF2iCwC01C,CAAmB,EAhhCnC,IAghCuD,IACxDntC,EACHsc,SAAWkH,IACP7vB,KAAK84C,eAAejpB,GACpBxjB,EAAQsc,UAAYtc,EAAQsc,SAASkH,EAAO,EAEhDkD,OAAQA,KACJ1hB,GAAiBC,QAAQ,EAE7ByS,WAAYA,KACR1S,GAAiBC,SACjBjF,EAAQ0X,YAAc1X,EAAQ0X,aAC9B/jB,KAAKy5C,mBAAmB,IAG5Bz5C,KAAK6vC,eACL7vC,KAAK6vC,aAAa5E,iBAAmBjrC,KAAKirC,kBAE9CjrC,KAAK03C,sBAAmBl4C,CAAS,GAEzC,CACAi6C,iBAAAA,GACQz5C,KAAK6vC,eACL7vC,KAAK6vC,aAAa5E,sBAAmBzrC,EACrCQ,KAAK6vC,aAAaR,qBAAkB7vC,GAExC,MAAMqrC,EAAQ7qC,KAAK8qC,WACnBD,GAASA,EAAM+E,wBACf5vC,KAAK6vC,aACD7vC,KAAKirC,iBACDjrC,KAAKuvC,qBACD/vC,EACZQ,KAAKgzC,gBAAgB,oBACzB,CACAO,eAAAA,GACQvzC,KAAKirC,mBACLjrC,KAAK84C,gBAAkB94C,KAAK84C,eApjCpB,KAqjCR94C,KAAKirC,iBAAiB3nC,QAE1BtD,KAAKy5C,mBACT,CACAC,uBAAAA,GACI,MAAM5K,EAAO9uC,KAAKk3C,UAClB,IAAI,qBAAEK,EAAoB,OAAE/pC,EAAM,OAAE8D,EAAM,aAAEgmB,GAAiBwX,EAC7D,GAAKyI,GAAyB/pC,GAAW8D,EAAzC,CAOA,GAAItR,OAAS8uC,GACT9uC,KAAKsR,QACLA,GACAqoC,GAA0B35C,KAAKqM,QAAQutC,cAAe55C,KAAKsR,OAAOszB,UAAWtzB,EAAOszB,WAAY,CAChGp3B,EAASxN,KAAKwN,Q/B/lCZ,CACdxB,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+BimCzB,MAAMk1C,EAAU7b,GAAWh+B,KAAKsR,OAAOszB,UAAU54B,GACjDwB,EAAOxB,EAAEb,IAAM2jC,EAAKthC,OAAOxB,EAAEb,IAC7BqC,EAAOxB,EAAErH,IAAM6I,EAAOxB,EAAEb,IAAM0uC,EAC9B,MAAMC,EAAU9b,GAAWh+B,KAAKsR,OAAOszB,UAAU34B,GACjDuB,EAAOvB,EAAEd,IAAM2jC,EAAKthC,OAAOvB,EAAEd,IAC7BqC,EAAOvB,EAAEtH,IAAM6I,EAAOvB,EAAEd,IAAM2uC,CAClC,CACAzM,GAAYkK,EAAsB/pC,GAMlCsyB,GAAayX,EAAsBjgB,GAOnC+G,GAAar+B,KAAKq4C,6BAA8Br4C,KAAK01C,gBAAiB6B,EAAsBjgB,EA/BlF,CAgCd,CACAkc,kBAAAA,CAAmBzJ,EAAUvN,GACpBx8B,KAAK8yC,YAAYhxC,IAAIioC,IACtB/pC,KAAK8yC,YAAY/wC,IAAIgoC,EAAU,IAAI4E,IAEzB3uC,KAAK8yC,YAAYnxC,IAAIooC,GAC7B7pC,IAAIs8B,GACV,MAAMud,EAASvd,EAAKnwB,QAAQ2tC,uBAC5Bxd,EAAKmO,QAAQ,CACTllC,WAAYs0C,EAASA,EAAOt0C,gBAAajG,EACzC0vC,sBAAuB6K,GAAUA,EAAOE,4BAClCF,EAAOE,4BAA4Bzd,QACnCh9B,GAEd,CACA0rC,MAAAA,GACI,MAAML,EAAQ7qC,KAAK8qC,WACnB,OAAOD,GAAQA,EAAMiE,OAAS9uC,IAClC,CACAk3C,OAAAA,GACI,IAAItwC,EACJ,MAAM,SAAEmjC,GAAa/pC,KAAKqM,QAC1B,OAAO09B,IAAuC,QAA1BnjC,EAAK5G,KAAK8qC,kBAA+B,IAAPlkC,OAAgB,EAASA,EAAGkoC,OAAgB9uC,IACtG,CACAk6C,WAAAA,GACI,IAAItzC,EACJ,MAAM,SAAEmjC,GAAa/pC,KAAKqM,QAC1B,OAAO09B,EAAsC,QAA1BnjC,EAAK5G,KAAK8qC,kBAA+B,IAAPlkC,OAAgB,EAASA,EAAGioC,cAAWrvC,CAChG,CACAsrC,QAAAA,GACI,MAAM,SAAEf,GAAa/pC,KAAKqM,QAC1B,GAAI09B,EACA,OAAO/pC,KAAK0M,KAAKomC,YAAYnxC,IAAIooC,EACzC,CACAY,OAAAA,GAAiE,IAAzD,WAAEiH,EAAU,WAAEnsC,EAAU,sBAAEypC,GAAwBxtC,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAMmpC,EAAQ7qC,KAAK8qC,WACfD,GACAA,EAAMF,QAAQ3qC,KAAMkvC,GACpB0C,IACA5xC,KAAKmpC,qBAAkB3pC,EACvBQ,KAAK4xC,YAAa,GAElBnsC,GACAzF,KAAKuqC,WAAW,CAAE9kC,cAC1B,CACAmlC,QAAAA,GACI,MAAMC,EAAQ7qC,KAAK8qC,WACnB,QAAID,GACOA,EAAMD,SAAS5qC,KAK9B,CACA20C,oBAAAA,GACI,MAAM,cAAEvyC,GAAkBpC,KAAKqM,QAC/B,IAAKjK,EACD,OAEJ,IAAI+3C,GAAyB,EAK7B,MAAM,aAAE7iB,GAAiBl1B,EAWzB,IAVIk1B,EAAazY,GACbyY,EAAavZ,QACbuZ,EAAatZ,SACbsZ,EAAarZ,SACbqZ,EAAapZ,SACboZ,EAAa/Y,OACb+Y,EAAa9Y,SACb27B,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAC,EACjB9iB,EAAazY,GACbyxB,GAAyB,IAAKluC,EAAeg4C,EAAap6C,KAAKuvC,iBAGnE,IAAK,IAAI7uC,EAAI,EAAGA,EAAIyvC,GAAc1vC,OAAQC,IACtC4vC,GAAyB,SAASH,GAAczvC,KAAM0B,EAAeg4C,EAAap6C,KAAKuvC,iBACvFe,GAAyB,OAAOH,GAAczvC,KAAM0B,EAAeg4C,EAAap6C,KAAKuvC,iBAIzFntC,EAAc0I,SAEd,IAAK,MAAMjJ,KAAOu4C,EACdh4C,EAAcouC,eAAe3uC,EAAKu4C,EAAYv4C,IAC1C7B,KAAKuvC,kBACLvvC,KAAKuvC,gBAAgB1tC,GAAOu4C,EAAYv4C,IAKhDO,EAAcwsC,gBAClB,CACAyL,mBAAAA,CAAoBC,GAChB,IAAI1zC,EAAI0U,EACR,IAAKtb,KAAK+/B,UAAY//B,KAAK2xC,MACvB,OACJ,IAAK3xC,KAAK4yC,UACN,OAAOxC,GAEX,MAAMmK,EAAS,CACXlK,WAAY,IAEVza,EAAoB51B,KAAK40C,uBAC/B,GAAI50C,KAAK4xC,WAQL,OAPA5xC,KAAK4xC,YAAa,EAClB2I,EAAOtzC,QAAU,GACjBszC,EAAOC,cACHjO,GAAiC,OAAd+N,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,GACzGD,EAAOjjC,UAAYse,EACbA,EAAkB51B,KAAKs3B,aAAc,IACrC,OACCijB,EAEX,MAAMzL,EAAO9uC,KAAKk3C,UAClB,IAAKl3C,KAAKmpC,kBAAoBnpC,KAAKsR,SAAWw9B,EAAKthC,OAAQ,CACvD,MAAMitC,EAAc,CAAC,EAerB,OAdIz6C,KAAKqM,QAAQ09B,WACb0Q,EAAYxzC,aACsBzH,IAA9BQ,KAAKs3B,aAAarwB,QACZjH,KAAKs3B,aAAarwB,QAClB,EACVwzC,EAAYD,cACRjO,GAAiC,OAAd+N,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,IAEzGx6C,KAAK2yC,eAAiB7T,GAAa9+B,KAAKs3B,gBACxCmjB,EAAYnjC,UAAYse,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN51B,KAAK2yC,cAAe,GAEjB8H,CACX,CACA,MAAMC,EAAiB5L,EAAKS,iBAAmBT,EAAKxX,aACpDt3B,KAAK05C,0BACLa,EAAOjjC,UG9wCnB,SAAkCpO,EAAOggC,EAAWyR,GAChD,IAAIrjC,EAAY,GAOhB,MAAMsjC,EAAa1xC,EAAM8C,EAAEoyB,UAAY8K,EAAUl9B,EAC3C6uC,EAAa3xC,EAAM+C,EAAEmyB,UAAY8K,EAAUj9B,EAC3C6uC,GAAkC,OAApBH,QAAgD,IAApBA,OAA6B,EAASA,EAAgB97B,IAAM,EAW5G,IAVI+7B,GAAcC,GAAcC,KAC5BxjC,EAAY,eAAesjC,QAAiBC,QAAiBC,SAM7C,IAAhB5R,EAAUl9B,GAA2B,IAAhBk9B,EAAUj9B,IAC/BqL,GAAa,SAAS,EAAI4xB,EAAUl9B,MAAM,EAAIk9B,EAAUj9B,OAExD0uC,EAAiB,CACjB,MAAM,qBAAE57B,EAAoB,OAAEhB,EAAM,QAAEC,EAAO,QAAEC,EAAO,MAAEM,EAAK,MAAEC,GAAUm8B,EACrE57B,IACAzH,EAAY,eAAeyH,QAA2BzH,KACtDyG,IACAzG,GAAa,UAAUyG,UACvBC,IACA1G,GAAa,WAAW0G,UACxBC,IACA3G,GAAa,WAAW2G,UACxBM,IACAjH,GAAa,SAASiH,UACtBC,IACAlH,GAAa,SAASkH,SAC9B,CAKA,MAAMu8B,EAAgB7xC,EAAM8C,EAAEwL,MAAQ0xB,EAAUl9B,EAC1CgvC,EAAgB9xC,EAAM+C,EAAEuL,MAAQ0xB,EAAUj9B,EAIhD,OAHsB,IAAlB8uC,GAAyC,IAAlBC,IACvB1jC,GAAa,SAASyjC,MAAkBC,MAErC1jC,GAAa,MACxB,CHguC+B2jC,CAAyBj7C,KAAKq4C,6BAA8Br4C,KAAKkpC,UAAWwR,GAC3F9kB,IACA2kB,EAAOjjC,UAAYse,EAAkB8kB,EAAgBH,EAAOjjC,YAEhE,MAAM,EAAEtL,EAAC,EAAEC,GAAMjM,KAAKmpC,gBACtBoR,EAAOW,gBAAkB,GAAc,IAAXlvC,EAAEoa,WAA4B,IAAXna,EAAEma,YAC7C0oB,EAAKS,gBAKLgL,EAAOtzC,QACH6nC,IAAS9uC,KACiG,QAAnGsb,EAAuC,QAAjC1U,EAAK8zC,EAAezzC,eAA4B,IAAPL,EAAgBA,EAAK5G,KAAKs3B,aAAarwB,eAA4B,IAAPqU,EAAgBA,EAAK,EACjItb,KAAKqvC,gBACDrvC,KAAKs3B,aAAarwB,QAClByzC,EAAexB,YAO7BqB,EAAOtzC,QACH6nC,IAAS9uC,UACwBR,IAA3Bk7C,EAAezzC,QACXyzC,EAAezzC,QACf,QAC2BzH,IAA/Bk7C,EAAexB,YACXwB,EAAexB,YACf,EAKlB,IAAK,MAAMr3C,KAAO4nC,GAAiB,CAC/B,QAA4BjqC,IAAxBk7C,EAAe74C,GACf,SACJ,MAAM,QAAEmnC,EAAO,QAAE+C,EAAO,cAAE9B,GAAkBR,GAAgB5nC,GAOtDs5C,EAAiC,SAArBZ,EAAOjjC,UACnBojC,EAAe74C,GACfmnC,EAAQ0R,EAAe74C,GAAMitC,GACnC,GAAI/C,EAAS,CACT,MAAMqP,EAAMrP,EAAQtrC,OACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI06C,EAAK16C,IACrB65C,EAAOxO,EAAQrrC,IAAMy6C,CAE7B,MAKQlR,EACAjqC,KAAKqM,QAAQjK,cAAci5C,YAAYC,KAAKz5C,GAAOs5C,EAGnDZ,EAAO14C,GAAOs5C,CAG1B,CAYA,OANIn7C,KAAKqM,QAAQ09B,WACbwQ,EAAOC,cACH1L,IAAS9uC,KACHusC,GAAiC,OAAd+N,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,GACrG,QAEPD,CACX,CACAnF,aAAAA,GACIp1C,KAAKovC,WAAapvC,KAAKsvC,cAAW9vC,CACtC,CAEA+7C,SAAAA,GACIv7C,KAAK0M,KAAKsjC,MAAMztC,SAASi6B,IAAW,IAAI51B,EAAI,OAAwC,QAAhCA,EAAK41B,EAAKyO,wBAAqC,IAAPrkC,OAAgB,EAASA,EAAGtD,MAAM,IAC9HtD,KAAK0M,KAAKsjC,MAAMztC,QAAQyyC,IACxBh1C,KAAK0M,KAAKomC,YAAYlyC,OAC1B,EAER,CACA,SAASgnC,GAAapL,GAClBA,EAAKoL,cACT,CACA,SAASuN,GAAmB3Y,GACxB,IAAI51B,EACJ,MAAM0oC,GAAuC,QAA1B1oC,EAAK41B,EAAK4S,kBAA+B,IAAPxoC,OAAgB,EAASA,EAAG0oC,WAAa9S,EAAK8S,SACnG,GAAI9S,EAAK0O,UACL1O,EAAKlrB,QACLg+B,GACA9S,EAAK2W,aAAa,aAAc,CAChC,MAAQvO,UAAWtzB,EAAQikC,YAAaiG,GAAmBhf,EAAKlrB,QAC1D,cAAEsoC,GAAkBpd,EAAKnwB,QACzB8qC,EAAW7H,EAASr0B,SAAWuhB,EAAKlrB,OAAO2J,OAG3B,SAAlB2+B,EACAjb,IAAUV,IACN,MAAMwd,EAAetE,EACf7H,EAASiG,YAAYtX,GACrBqR,EAAS1K,UAAU3G,GACnBx9B,EAASu9B,GAAWyd,GAC1BA,EAAatwC,IAAMmG,EAAO2sB,GAAM9yB,IAChCswC,EAAa92C,IAAM82C,EAAatwC,IAAM1K,CAAM,IAG3Ck5C,GAA0BC,EAAetK,EAAS1K,UAAWtzB,IAClEqtB,IAAUV,IACN,MAAMwd,EAAetE,EACf7H,EAASiG,YAAYtX,GACrBqR,EAAS1K,UAAU3G,GACnBx9B,EAASu9B,GAAW1sB,EAAO2sB,IACjCwd,EAAa92C,IAAM82C,EAAatwC,IAAM1K,EAIlC+7B,EAAKoX,iBAAmBpX,EAAKyO,mBAC7BzO,EAAK8U,mBAAoB,EACzB9U,EAAKoX,eAAe3V,GAAMt5B,IACtB63B,EAAKoX,eAAe3V,GAAM9yB,IAAM1K,EACxC,IAGR,MAAMi7C,E/B54CM,CAChB1vC,EAPoB,CACpBoyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,GAIblyB,EARoB,CACpBmyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,I+B+4CTE,GAAaqd,EAAapqC,EAAQg+B,EAAS1K,WAC3C,MAAM+W,E/B94CM,CAChB3vC,EAPoB,CACpBoyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,GAIblyB,EARoB,CACpBmyB,UAAW,EACX5mB,MAAO,EACP4O,OAAQ,EACR+X,YAAa,I+Bi5CLgZ,EACA9Y,GAAasd,EAAanf,EAAKia,eAAe+E,GAAgB,GAAOlM,EAASiG,aAG9ElX,GAAasd,EAAarqC,EAAQg+B,EAAS1K,WAE/C,MAAMwD,GAAoBiG,GAAYqN,GACtC,IAAIjI,GAA2B,EAC/B,IAAKjX,EAAK4S,WAAY,CAClB,MAAM4H,EAAiBxa,EAAK6a,6BAK5B,GAAIL,IAAmBA,EAAe5H,WAAY,CAC9C,MAAQE,SAAUsM,EAAgBtqC,OAAQuqC,GAAiB7E,EAC3D,GAAI4E,GAAkBC,EAAc,CAChC,MAAMC,E/B35CR,CACd9vC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+B65CrB85B,GAAqBqd,EAAkBxM,EAAS1K,UAAWgX,EAAehX,WAC1E,MAAM4T,E/B75CR,CACdxsC,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,I+B+5CrB85B,GAAqB+Z,EAAgBlnC,EAAQuqC,EAAajX,WACrD4J,GAAiBsN,EAAkBtD,KACpC/E,GAA2B,GAE3BuD,EAAe3qC,QAAQ+nC,aACvB5X,EAAKoX,eAAiB4E,EACtBhc,EAAK8a,qBAAuBwE,EAC5Btf,EAAKwa,eAAiBA,EAE9B,CACJ,CACJ,CACAxa,EAAKwW,gBAAgB,YAAa,CAC9B1hC,SACAg+B,WACApmC,MAAOyyC,EACPD,cACAtT,mBACAqL,4BAER,MACK,GAAIjX,EAAK0O,SAAU,CACpB,MAAM,eAAE/N,GAAmBX,EAAKnwB,QAChC8wB,GAAkBA,GACtB,CAMAX,EAAKnwB,QAAQ5G,gBAAajG,CAC9B,CACA,SAAS8yC,GAAoB9V,GAIrB7zB,EAAY/I,OACZmwC,GAAQC,QAEPxT,EAAK5uB,SAQL4uB,EAAKgb,iBACNhb,EAAK8U,kBAAoB9U,EAAK5uB,OAAO0jC,mBAOzC9U,EAAK+U,0BAA4B/U,EAAK+U,wBAA0B9tC,QAAQ+4B,EAAK8U,mBACzE9U,EAAK5uB,OAAO0jC,mBACZ9U,EAAK5uB,OAAO2jC,0BAChB/U,EAAKgV,mBAAqBhV,EAAKgV,iBAAmBhV,EAAK5uB,OAAO4jC,kBAClE,CACA,SAASiB,GAAgBjW,GACrBA,EAAK8U,kBACD9U,EAAK+U,wBACD/U,EAAKgV,kBACD,CAChB,CACA,SAAS4D,GAAc5Y,GACnBA,EAAK4Y,eACT,CACA,SAASJ,GAAkBxY,GACvBA,EAAKwY,mBACT,CACA,SAASC,GAAmBzY,GACxBA,EAAKiT,eAAgB,CACzB,CACA,SAASyF,GAAoB1Y,GACzB,MAAM,cAAEp6B,GAAkBo6B,EAAKnwB,QAC3BjK,GAAiBA,EAAcY,WAAW+4C,uBAC1C35C,EAAchC,OAAO,uBAEzBo8B,EAAK2U,gBACT,CACA,SAASoC,GAAgB/W,GACrBA,EAAK+W,kBACL/W,EAAKsa,YAActa,EAAKoX,eAAiBpX,EAAKhvB,YAAShO,EACvDg9B,EAAK8U,mBAAoB,CAC7B,CACA,SAASiB,GAAmB/V,GACxBA,EAAK+V,oBACT,CACA,SAASC,GAAehW,GACpBA,EAAKgW,gBACT,CACA,SAASmC,GAAqBnY,GAC1BA,EAAKmY,sBACT,CACA,SAASU,GAAoBxK,GACzBA,EAAMiF,oBACV,CACA,SAASiJ,GAAa59B,EAAQjS,EAAOuN,GACjC0E,EAAOijB,UAAYjV,GAAUjgB,EAAMk1B,UAAW,EAAG3nB,GACjD0E,EAAO3D,MAAQ2R,GAAUjgB,EAAMsO,MAAO,EAAGf,GACzC0E,EAAOiL,OAASld,EAAMkd,OACtBjL,EAAOgjB,YAAcj1B,EAAMi1B,WAC/B,CACA,SAAS6a,GAAQ79B,EAAQzb,EAAMC,EAAI8W,GAC/B0E,EAAOhQ,IAAMge,GAAUzpB,EAAKyL,IAAKxL,EAAGwL,IAAKsL,GACzC0E,EAAOxW,IAAMwkB,GAAUzpB,EAAKiF,IAAKhF,EAAGgF,IAAK8R,EAC7C,CAKA,SAASmiC,GAAoBpc,GACzB,OAAQA,EAAK+S,sBAAwD/vC,IAArCg9B,EAAK+S,gBAAgB2J,WACzD,CACA,MAAMpF,GAA0B,CAC5BpvC,SAAU,IACVsD,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBg0C,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAUhnC,cAAcgM,SAAS86B,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEp3C,KAAK2C,MACLvI,EACN,SAASs3C,GAAUrY,GAEfA,EAAK9yB,IAAMixC,GAAWne,EAAK9yB,KAC3B8yB,EAAKt5B,IAAMy3C,GAAWne,EAAKt5B,IAC/B,CAKA,SAASg1C,GAA0BC,EAAetK,EAAUh+B,GACxD,MAA0B,aAAlBsoC,GACe,oBAAlBA,IhC5iDOh6C,EgC6iDI6uC,GAAYa,GhC7iDT9hC,EgC6iDoBihC,GAAYn9B,GhC7iDxB+qC,EgC6iDiC,KhC5iDrDz3C,KAAK0R,IAAI1W,EAAQ4N,IAAW6uC,IADvC,IAAgBz8C,EAAO4N,EAAQ6uC,CgC8iD/B,CACA,SAAS9F,GAAuB/Z,GAC5B,IAAI51B,EACJ,OAAO41B,IAASA,EAAK9vB,OAAgC,QAAtB9F,EAAK41B,EAAK+J,cAA2B,IAAP3/B,OAAgB,EAASA,EAAGkvC,QAC7F,CI1jDA,MAAMwG,GAAyBxL,GAAqB,CAChDC,qBAAsBA,CAACvQ,EAAKpgC,IAAWo9B,GAAYgD,EAAK,SAAUpgC,GAClE6wC,cAAeA,KAAA,CACXjlC,EAAGlF,SAASy1C,gBAAgBC,YAAc11C,SAAS21C,KAAKD,WACxDvwC,EAAGnF,SAASy1C,gBAAgBG,WAAa51C,SAAS21C,KAAKC,YAE3DxL,kBAAmBA,KAAM,ICNvB7K,GAAqB,CACvBxjC,aAASrD,GAEPm9C,GAAqB7L,GAAqB,CAC5CG,cAAgBlR,IAAQ,CACpB/zB,EAAG+zB,EAASyc,WACZvwC,EAAG8zB,EAAS2c,YAEhB1L,cAAeA,KACX,IAAK3K,GAAmBxjC,QAAS,CAC7B,MAAM+5C,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAa9f,MAAM55B,QACnB05C,EAAarS,WAAW,CAAEqL,cAAc,IACxCvP,GAAmBxjC,QAAU+5C,CACjC,CACA,OAAOvW,GAAmBxjC,OAAO,EAErCsuC,eAAgBA,CAACpR,EAAUngC,KACvBmgC,EAAS2H,MAAMpwB,eAAsB9X,IAAVI,EAAsBA,EAAQ,MAAM,EAEnEsxC,kBAAoBnR,GAAat8B,QAAuD,UAA/CP,OAAOuiB,iBAAiBsa,GAAU8c,YClBzEzY,GAAO,CACT0Y,IAAK,CACDvgB,QzBKR,cAAyBA,GACrBx8B,WAAAA,GACIkmB,SAASvkB,WACT1B,KAAK+8C,0BAA4B/9C,CACrC,CACAg+C,aAAAA,CAAcC,GACVj9C,KAAKk9C,QAAU,IAAIzc,GAAWwc,EAAkBj9C,KAAKm9C,oBAAqB,CACtExc,mBAAoB3gC,KAAKw8B,KAAK4I,wBAC9BxE,cAAeR,GAAiBpgC,KAAKw8B,OAE7C,CACA2gB,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAav9C,KAAKw8B,KAAKx5B,WACrE,MAAO,CACHm/B,eAAgBkG,GAAa+U,GAC7B3b,QAAS4G,GAAagV,GACtB3b,OAAQ4b,EACRxb,MAAOA,CAAC30B,EAAO8zB,YACJjhC,KAAKk9C,QACRK,GACAjyC,EAAMP,YAAW,IAAMwyC,EAASpwC,EAAO8zB,IAC3C,EAGZ,CACAnE,KAAAA,GACI98B,KAAK+8C,0BAA4Blf,GAAgB79B,KAAKw8B,KAAK35B,QAAS,eAAgBsK,GAAUnN,KAAKg9C,cAAc7vC,IACrH,CACAvC,MAAAA,GACI5K,KAAKk9C,SAAWl9C,KAAKk9C,QAAQ7a,eAAeriC,KAAKm9C,oBACrD,CACAlgB,OAAAA,GACIj9B,KAAK+8C,4BACL/8C,KAAKk9C,SAAWl9C,KAAKk9C,QAAQrb,KACjC,IyBrCAuC,KAAM,CACF7H,QCNR,cAA0BA,GACtBx8B,WAAAA,CAAYy8B,GACRvW,MAAMuW,GACNx8B,KAAKw9C,oBAAsBx+C,EAC3BgB,KAAKoiC,gBAAkBpjC,EACvBgB,KAAK8E,SAAW,IAAI2+B,GAA0BjH,EAClD,CACAM,KAAAA,GAGI,MAAM,aAAE2gB,GAAiBz9C,KAAKw8B,KAAKx5B,WAC/By6C,IACAz9C,KAAKw9C,oBAAsBC,EAAa5gB,UAAU78B,KAAK8E,WAE3D9E,KAAKoiC,gBAAkBpiC,KAAK8E,SAAS+iC,gBAAkB7oC,CAC3D,CACAi+B,OAAAA,GACIj9B,KAAKw9C,sBACLx9C,KAAKoiC,iBACT,GDZIsb,eAAgBf,GAChBnR,cAAaA,KERrB,SAASmS,GAAiBnhB,EAAMrvB,EAAOywC,GACnC,MAAM,MAAEl7C,GAAU85B,EACdA,EAAKpF,gBAAkB10B,EAAMw5B,YAC7BM,EAAKpF,eAAewE,UAAU,aAA4B,UAAdgiB,GAEhD,MACMt+C,EAAWoD,EADE,UAAYk7C,GAE3Bt+C,GACAgM,EAAMP,YAAW,IAAMzL,EAAS6N,EAAOswB,GAAiBtwB,KAEhE,CCVA,SAAS0wC,GAAiBrhB,EAAMrvB,EAAOywC,GACnC,MAAM,MAAEl7C,GAAU85B,EAClB,GAAIA,EAAK35B,mBAAmBi7C,mBAAqBthB,EAAK35B,QAAQk7C,SAC1D,OAEAvhB,EAAKpF,gBAAkB10B,EAAMy5B,UAC7BK,EAAKpF,eAAewE,UAAU,WAA0B,UAAdgiB,GAE9C,MACMt+C,EAAWoD,EADE,SAAyB,QAAdk7C,EAAsB,GAAKA,IAErDt+C,GACAgM,EAAMP,YAAW,IAAMzL,EAAS6N,EAAOswB,GAAiBtwB,KAEhE,CCZA,MAAM6wC,GAAoB,IAAIxa,QAMxBya,GAAY,IAAIza,QAChB0a,GAAwBC,IAC1B,MAAM7+C,EAAW0+C,GAAkBr8C,IAAIw8C,EAAM3wC,QAC7ClO,GAAYA,EAAS6+C,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQ97C,QAAQ27C,GAAqB,EAqBzC,SAASI,GAAoB5tC,EAASrE,EAAS/M,GAC3C,MAAMi/C,EApBV,SAAiC12C,GAAuB,IAAtB,KAAE6E,KAASL,GAASxE,EAClD,MAAM22C,EAAa9xC,GAAQ5F,SAItBm3C,GAAUn8C,IAAI08C,IACfP,GAAUl8C,IAAIy8C,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAUt8C,IAAI68C,GAC9B38C,EAAM68C,KAAKC,UAAUtyC,GAQ3B,OAHKoyC,EAAc58C,KACf48C,EAAc58C,GAAO,IAAI+8C,qBAAqBR,GAA0B,CAAE1xC,UAASL,KAEhFoyC,EAAc58C,EACzB,CAEsCg9C,CAAyBxyC,GAG3D,OAFA2xC,GAAkBj8C,IAAI2O,EAASpR,GAC/Bi/C,EAA0BO,QAAQpuC,GAC3B,KACHstC,GAAkB3zC,OAAOqG,GACzB6tC,EAA0BQ,UAAUruC,EAAQ,CAEpD,CC3CA,MAAMsuC,GAAiB,CACnBrxB,KAAM,EACN/pB,IAAK,GCAT,MAAMq7C,GAAoB,CACtBC,OAAQ,CACJ3iB,QDAR,cAA4BA,GACxBx8B,WAAAA,GACIkmB,SAASvkB,WACT1B,KAAKm/C,gBAAiB,EACtBn/C,KAAKo/C,UAAW,CACpB,CACAC,aAAAA,GACIr/C,KAAKi9B,UACL,MAAM,SAAEqiB,EAAW,CAAC,GAAMt/C,KAAKw8B,KAAKx5B,YAC9B,KAAE0J,EAAM6Q,OAAQgiC,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDjzC,EAAU,CACZK,KAAMA,EAAOA,EAAK7J,aAAUrD,EAC5B+/C,aACAG,UAA6B,kBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOlB,GAAoBt+C,KAAKw8B,KAAK35B,QAASwJ,GA7BhB8xC,IAC1B,MAAM,eAAEwB,GAAmBxB,EAI3B,GAAIn+C,KAAKo/C,WAAaO,EAClB,OAMJ,GALA3/C,KAAKo/C,SAAWO,EAKZF,IAASE,GAAkB3/C,KAAKm/C,eAChC,OAEKQ,IACL3/C,KAAKm/C,gBAAiB,GAEtBn/C,KAAKw8B,KAAKpF,gBACVp3B,KAAKw8B,KAAKpF,eAAewE,UAAU,cAAe+jB,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB7/C,KAAKw8B,KAAKx5B,WACjD1D,EAAWqgD,EAAiBC,EAAkBC,EACpDvgD,GAAYA,EAAS6+C,EAAM,GAGnC,CACArhB,KAAAA,GACI98B,KAAKq/C,eACT,CACAz0C,MAAAA,GACI,GAAoC,qBAAzBg0C,qBACP,OACJ,MAAM,MAAEl8C,EAAK,UAAEs6B,GAAch9B,KAAKw8B,KAC5BsjB,EAAoB,CAAC,SAAU,SAAU,QAAQnyB,KAO/D,SAAiC9lB,GAA0D,IAAzD,SAAEy3C,EAAW,CAAC,GAAGz3C,GAAIy3C,SAAUS,EAAe,CAAC,GAAGr+C,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQka,GAAS0jC,EAAS1jC,KAAUmkC,EAAankC,EACrD,CAToEokC,CAAyBt9C,EAAOs6B,IACxF8iB,GACA9/C,KAAKq/C,eAEb,CACApiB,OAAAA,GAAY,ICxDZgjB,IAAK,CACD1jB,QHQR,cAA2BA,GACvBO,KAAAA,GACI,MAAM,QAAEj6B,GAAY7C,KAAKw8B,KACpB35B,IAEL7C,KAAKi9B,QAAUvuB,GAAM7L,GAAS,CAACq9C,EAAUjxC,KACrC4uC,GAAiB79C,KAAKw8B,KAAMvtB,EAAY,SACjC,CAACI,EAAQxH,KAAA,IAAE,QAAEyH,GAASzH,EAAA,OAAKg2C,GAAiB79C,KAAKw8B,KAAMntB,EAAUC,EAAU,MAAQ,SAAS,IACpG,CAAEqB,gBAAiB3Q,KAAKw8B,KAAK95B,MAAMy9C,kBAC1C,CACAljB,OAAAA,GAAY,IGhBZmjB,MAAO,CACH7jB,QCTR,cAA2BA,GACvBx8B,WAAAA,GACIkmB,SAASvkB,WACT1B,KAAKu6B,UAAW,CACpB,CACA8lB,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBtgD,KAAKw8B,KAAK35B,QAAQ09C,QAAQ,iBAC/C,CACA,MAAOr5C,GACHo5C,GAAiB,CACrB,CACKA,GAAmBtgD,KAAKw8B,KAAKpF,iBAElCp3B,KAAKw8B,KAAKpF,eAAewE,UAAU,cAAc,GACjD57B,KAAKu6B,UAAW,EACpB,CACAimB,MAAAA,GACSxgD,KAAKu6B,UAAav6B,KAAKw8B,KAAKpF,iBAEjCp3B,KAAKw8B,KAAKpF,eAAewE,UAAU,cAAc,GACjD57B,KAAKu6B,UAAW,EACpB,CACAuC,KAAAA,GACI98B,KAAKi9B,QAAU9S,GAAKqT,GAAYx9B,KAAKw8B,KAAK35B,QAAS,SAAS,IAAM7C,KAAKqgD,YAAY7iB,GAAYx9B,KAAKw8B,KAAK35B,QAAS,QAAQ,IAAM7C,KAAKwgD,WACzI,CACAvjB,OAAAA,GAAY,IDtBZwjB,MAAO,CACHlkB,QJDR,cAA2BA,GACvBO,KAAAA,GACI,MAAM,QAAEj6B,GAAY7C,KAAKw8B,KACpB35B,IAEL7C,KAAKi9B,QxJPb,SAAe7wB,EAAmBs0C,GAA4B,IAAdr0C,EAAO3K,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAO4K,EAAUwC,EAAcxK,GAAU6H,EAAaC,EAAmBC,GACnEs0C,EAAkBC,IACpB,IAAK1zC,EAAa0zC,GACd,OACJ,MAAM,OAAEpzC,GAAWozC,EACbC,EAAaH,EAAalzC,EAAQozC,GACxC,GAA0B,oBAAfC,IAA8BrzC,EACrC,OACJ,MAAMszC,EAAkBC,IACf7zC,EAAa6zC,KAElBF,EAAWE,GACXvzC,EAAO+B,oBAAoB,eAAgBuxC,GAAe,EAE9DtzC,EAAOgD,iBAAiB,eAAgBswC,EAAgBhyC,EAAa,EAKzE,OAHAxC,EAAS/J,SAASmO,IACdA,EAAQF,iBAAiB,eAAgBmwC,EAAgB7xC,EAAa,IAEnExK,CACX,CwJduBm8C,CAAM59C,GAAS,CAACq9C,EAAUjxC,KACrC0uC,GAAiB39C,KAAKw8B,KAAMvtB,EAAY,SAChCI,GAAasuC,GAAiB39C,KAAKw8B,KAAMntB,EAAU,UAEnE,CACA4tB,OAAAA,GAAY,KMtBV3rB,GAAS,CACXA,OAAQ,CACJosC,eAAgBf,GAChBnR,cAAaA,KCHfwV,IAAczY,EAAAA,GAAAA,eAAc,CAAE0Y,QAAQ,ICGtCC,IAAsB3Y,EAAAA,GAAAA,eAAc,CACtC5H,mBAAqBlqB,GAAMA,EAC3B0qC,UAAU,EACVC,cAAe,UCNbC,IAAgC9Y,EAAAA,GAAAA,eAAc,CAAC,GCCrD,SAASrP,GAAsBx2B,GAC3B,OAAQV,EAAoBU,EAAMsE,UAC9B+xB,GAAapL,MAAM/R,GAASid,GAAen2B,EAAMkZ,KACzD,CACA,SAAS0lC,GAAc5+C,GACnB,OAAOe,QAAQy1B,GAAsBx2B,IAAUA,EAAMI,SACzD,CCNA,SAASy+C,GAAuB7+C,GAC5B,MAAM,QAAE02B,EAAO,QAAEpyB,GCFrB,SAAgCtE,EAAOy2B,GACnC,GAAID,GAAsBx2B,GAAQ,CAC9B,MAAM,QAAE02B,EAAO,QAAEpyB,GAAYtE,EAC7B,MAAO,CACH02B,SAAqB,IAAZA,GAAqBP,GAAeO,GACvCA,OACA55B,EACNwH,QAAS6xB,GAAe7xB,GAAWA,OAAUxH,EAErD,CACA,OAAyB,IAAlBkD,EAAM8+C,QAAoBroB,EAAU,CAAC,CAChD,CDTiCsoB,CAAuB/+C,GAAO+oC,EAAAA,GAAAA,YAAW4V,KACtE,OAAOK,EAAAA,GAAAA,UAAQ,KAAM,CAAGtoB,UAASpyB,aAAY,CAAC26C,GAA0BvoB,GAAUuoB,GAA0B36C,IAChH,CACA,SAAS26C,GAA0BtoB,GAC/B,OAAOhzB,MAAMC,QAAQ+yB,GAAQA,EAAKpd,KAAK,KAAOod,CAClD,CEVA,MAAMuoB,GAA8B,qBAAX1+C,OCAnB2+C,GAAe,CACjB/9C,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJw4B,KAAM,CAAC,QACP8H,KAAM,CAAC,OAAQ,gBACfgc,MAAO,CAAC,cACRK,MAAO,CAAC,aAAc,eAAgB,cACtCR,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCnD,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDoC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3C5tC,OAAQ,CAAC,SAAU,aAEjBwwC,GAAqB,CAAC,EAC5B,IAAK,MAAMjgD,MAAOggD,GACdC,GAAmBjgD,IAAO,CACtBkgD,UAAYr/C,GAAUm/C,GAAahgD,IAAK8rB,MAAM/R,KAAWlZ,EAAMkZ,MCvBvE,MAAMomC,GAAwBC,OAAOC,IAAI,yBCOzC,SAASC,GAAaC,EAAahgD,EAAeigD,GAC9C,OAAOzW,EAAAA,GAAAA,cAAa7L,IACZA,GACAqiB,EAAYE,SAAWF,EAAYE,QAAQviB,GAE3C39B,IACI29B,EACA39B,EAAc06B,MAAMiD,GAGpB39B,EAAc66B,WAGlBolB,IAC2B,oBAAhBA,EACPA,EAAYtiB,GAEPQ,GAAY8hB,KACjBA,EAAYx/C,QAAUk9B,GAE9B,GAOJ,CAAC39B,GACL,CChCA,MAAMmgD,GAA4BX,GAAYY,GAAAA,gBAAkB7W,GAAAA,UCQhE,SAAS8W,GAAiB9Y,EAAWyY,EAAa1/C,EAAOggD,EAAqBC,GAC1E,IAAI/7C,EAAI0U,EACR,MAAQlZ,cAAewL,IAAW69B,EAAAA,GAAAA,YAAW4V,IACvCuB,GAAcnX,EAAAA,GAAAA,YAAWuV,IACzBlpB,GAAkB2T,EAAAA,GAAAA,YAAWnD,IAC7Bua,GAAsBpX,EAAAA,GAAAA,YAAWyV,IAAqBE,cACtD0B,GAAmBC,EAAAA,GAAAA,QAAO,MAIhCL,EAAsBA,GAAuBE,EAAYI,UACpDF,EAAiBjgD,SAAW6/C,IAC7BI,EAAiBjgD,QAAU6/C,EAAoB/Y,EAAW,CACtDyY,cACAx0C,SACAlL,QACAo1B,kBACAwD,wBAAuBxD,IACW,IAA5BA,EAAgBsB,QAEtBypB,yBAGR,MAAMzgD,EAAgB0gD,EAAiBjgD,QAKjCogD,GAA2BxX,EAAAA,GAAAA,YAAWhD,KACxCrmC,GACCA,EAAcoiC,aACfme,GACwB,SAAvBvgD,EAAc6D,MAA0C,QAAvB7D,EAAc6D,MA2DxD,SAA8B7D,EAAeM,EAAOigD,EAA2B3I,GAC3E,MAAM,SAAEjQ,EAAQ,OAAEz4B,EAAM,KAAE8yB,EAAI,gBAAEsB,EAAe,aAAEkQ,EAAY,WAAExB,GAAgB1xC,EAC/EN,EAAcoiC,WAAa,IAAIme,EAA0BvgD,EAAck1B,aAAc50B,EAAM,8BACrFlD,EACA0jD,GAAyB9gD,EAAcwL,SAC7CxL,EAAcoiC,WAAW+F,WAAW,CAChCR,WACAz4B,SACAkkC,oBAAqB/xC,QAAQ2gC,IAAUsB,GAAmBnF,GAAYmF,GACtEtjC,gBAQAw3C,cAAiC,kBAAXtoC,EAAsBA,EAAS,OACrD0oC,yBACApE,eACAxB,cAER,CAhFQtD,CAAqBgS,EAAiBjgD,QAASH,EAAOigD,EAA2BM,GAErF,MAAMxmB,GAAYsmB,EAAAA,GAAAA,SAAO,IACzBI,EAAAA,GAAAA,qBAAmB,KAKX/gD,GAAiBq6B,EAAU55B,SAC3BT,EAAcwI,OAAOlI,EAAOo1B,EAChC,IAMJ,MAAMsrB,EAAoB1gD,EAAM0S,IAC1BiuC,GAAeN,EAAAA,GAAAA,QAAOt/C,QAAQ2/C,MACY,QAAzCx8C,EAAK1D,OAAOogD,+BAA4C,IAAP18C,OAAgB,EAASA,EAAGwR,KAAKlV,OAAQkgD,MAC9C,QAA7C9nC,EAAKpY,OAAO0tC,mCAAgD,IAAPt1B,OAAgB,EAASA,EAAGlD,KAAKlV,OAAQkgD,KAqCpG,OApCAb,IAA0B,KACjBngD,IAELq6B,EAAU55B,SAAU,EACpBK,OAAOqgD,iBAAkB,EACzBnhD,EAAcohD,iBACd93C,EAAUZ,OAAO1I,EAAc0I,QAW3Bu4C,EAAaxgD,SAAWT,EAAcg1B,gBACtCh1B,EAAcg1B,eAAe2C,iBACjC,KAEJ4R,EAAAA,GAAAA,YAAU,KACDvpC,KAEAihD,EAAaxgD,SAAWT,EAAcg1B,gBACvCh1B,EAAcg1B,eAAe2C,iBAE7BspB,EAAaxgD,UAEb+I,gBAAe,KACX,IAAIhF,EAC0C,QAA7CA,EAAK1D,OAAOugD,mCAAgD,IAAP78C,GAAyBA,EAAGwR,KAAKlV,OAAQkgD,EAAkB,IAErHC,EAAaxgD,SAAU,GAC3B,IAEGT,CACX,CAwBA,SAAS8gD,GAAyB9gD,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAciK,QAAQq3C,gBACvBthD,EAAcoiC,WACd0e,GAAyB9gD,EAAcwL,OACjD,CC1GA,SAAS+1C,GAA6B97C,GAAoF,IAAnF,kBAAE+7C,EAAiB,oBAAElB,EAAmB,UAAEmB,EAAS,eAAEC,EAAc,UAAEna,GAAY9hC,EACpH,IAAIjB,EAAI0U,EAER,SAASyoC,EAAgBrhD,EAAO2/C,GAK5B,IAAI7W,EACJ,MAAMwY,EAAiB,KAChBvY,EAAAA,GAAAA,YAAWyV,OACXx+C,EACHqnC,SAAUka,GAAYvhD,KAEpB,SAAEy+C,GAAa6C,EACf7qB,EAAUooB,GAAuB7+C,GACjC0/C,EAAc0B,EAAephD,EAAOy+C,GAC1C,IAAKA,GAAYS,GAAW,EA+BpC,YACqBnW,EAAAA,GAAAA,YAAWuV,IAAaC,OAKrC32C,CAQR,CA5CY45C,GACA,MAAMC,EA4ClB,SAAoCzhD,GAChC,MAAM,KAAE0hC,EAAI,OAAE9yB,GAAWwwC,GACzB,IAAK1d,IAAS9yB,EACV,MAAO,CAAC,EACZ,MAAM8yC,EAAW,IAAKhgB,KAAS9yB,GAC/B,MAAO,CACHk6B,eAAyB,OAATpH,QAA0B,IAATA,OAAkB,EAASA,EAAK2d,UAAUr/C,MAAuB,OAAX4O,QAA8B,IAAXA,OAAoB,EAASA,EAAOywC,UAAUr/C,IAClJ0hD,EAAS5Y,mBACThsC,EACNk+C,eAAgB0G,EAAS1G,eAEjC,CAvDqC2G,CAA2BL,GACpDxY,EAAgB2Y,EAAiB3Y,cAOjCrS,EAAQ/2B,cAAgBqgD,GAAiB9Y,EAAWyY,EAAa4B,EAAgBtB,EAAqByB,EAAiBzG,eAC3H,CAKA,OAAQ4G,EAAAA,GAAAA,MAAKjD,GAAckD,SAAU,CAAE3kD,MAAOu5B,EAASgT,SAAU,CAACX,GAAiBrS,EAAQ/2B,eAAiB0pC,EAAAA,GAAAA,KAAIN,EAAe,CAAEppC,cAAe+2B,EAAQ/2B,iBAAkB4hD,IAAqB,KAAMH,EAAUla,EAAWjnC,EAAOy/C,GAAaC,EAAajpB,EAAQ/2B,cAAeigD,GAAcD,EAAajB,EAAUhoB,EAAQ/2B,iBACnU,CAhCAwhD,GCzBJ,SAAsBY,GAClB,IAAK,MAAM3iD,KAAO2iD,EACd1C,GAAmBjgD,GAAO,IACnBigD,GAAmBjgD,MACnB2iD,EAAS3iD,GAGxB,CDkByB4iD,CAAab,GAiClCG,EAAgBW,YAAc,UAA+B,kBAAd/a,EACzCA,EACA,UAAkG,QAAvFruB,EAAsC,QAAhC1U,EAAK+iC,EAAU+a,mBAAgC,IAAP99C,EAAgBA,EAAK+iC,EAAU/tB,YAAyB,IAAPN,EAAgBA,EAAK,QACrI,MAAMqpC,GAA4BC,EAAAA,GAAAA,YAAWb,GAE7C,OADAY,EAA0B3C,IAAyBrY,EAC5Cgb,CACX,CACA,SAASV,GAAWliC,GAAe,IAAd,SAAEgoB,GAAUhoB,EAC7B,MAAM8iC,GAAgBpZ,EAAAA,GAAAA,YAAWjD,IAAoB9L,GACrD,OAAOmoB,QAA8BrlD,IAAbuqC,EAClB8a,EAAgB,IAAM9a,EACtBA,CACV,CErEA,SAAS+a,GAAoBjjD,EAAGgG,GAAwB,IAAtB,OAAEyJ,EAAM,SAAEy4B,GAAUliC,EAClD,OAAQyM,GAAexS,IAAID,IACvBA,EAAIkW,WAAW,YACbzG,QAAuB9R,IAAbuqC,OACLN,GAAgB5nC,IAAgB,YAARA,EACvC,CCLA,MAAMkjD,GAAiBA,CAACnlD,EAAOqG,IACpBA,GAAyB,kBAAVrG,EAChBqG,EAAKqR,UAAU1X,GACfA,ECFJolD,GAAiB,CACnBh5C,EAAG,aACHC,EAAG,aACH4S,EAAG,aACHE,qBAAsB,eAEpBkmC,GAAgB5wC,GAAmB5T,OCJzC,SAASykD,GAAgB7iD,EAAOi1B,EAAc1B,GAC1C,MAAM,MAAE8R,EAAK,KAAE4T,EAAI,gBAAEJ,GAAoB74C,EAEzC,IAAIy8B,GAAe,EACfqmB,GAAqB,EAOzB,IAAK,MAAMtjD,KAAOy1B,EAAc,CAC5B,MAAM13B,EAAQ03B,EAAaz1B,GAC3B,GAAIyS,GAAexS,IAAID,GAEnBi9B,GAAe,OAGd,GAAIja,GAAkBhjB,GACvBy5C,EAAKz5C,GAAOjC,MAGX,CAED,MAAMwlD,EAAcL,GAAenlD,EAAOwf,GAAiBvd,IACvDA,EAAIkW,WAAW,WAEfotC,GAAqB,EACrBjK,EAAgBr5C,GACZujD,GAGJ1d,EAAM7lC,GAAOujD,CAErB,CACJ,CAiBA,GAhBK9tB,EAAahgB,YACVwnB,GAAgBlJ,EAChB8R,EAAMpwB,UD3BlB,SAAwBggB,EAAchgB,EAAWse,GAE7C,IAAIyvB,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAI5kD,EAAI,EAAGA,EAAIukD,GAAevkD,IAAK,CACpC,MAAMmB,EAAMwS,GAAmB3T,GACzBd,EAAQ03B,EAAaz1B,GAC3B,QAAcrC,IAAVI,EACA,SACJ,IAAI2lD,GAAiB,EAOrB,GALIA,EADiB,kBAAV3lD,EACUA,KAAWiC,EAAIkW,WAAW,SAAW,EAAI,GAGnB,IAAtBpF,WAAW/S,IAE3B2lD,GAAkB3vB,EAAmB,CACtC,MAAMwvB,EAAcL,GAAenlD,EAAOwf,GAAiBvd,IACtD0jD,IACDD,GAAqB,EAErBD,GAAmB,GADGL,GAAenjD,IAAQA,KACNujD,OAEvCxvB,IACAte,EAAUzV,GAAOujD,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgB3jC,OAG9BkU,EACAyvB,EAAkBzvB,EAAkBte,EAAWguC,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CCf8BG,CAAeluB,EAAcj1B,EAAMiV,UAAWse,GAE3D8R,EAAMpwB,YAKXowB,EAAMpwB,UAAY,SAOtB6tC,EAAoB,CACpB,MAAM,QAAEnmC,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOg8B,EAC3DxT,EAAMwT,gBAAkB,GAAGl8B,KAAWC,KAAWC,GACrD,CACJ,CC9DA,MAAMumC,GAAwBA,KAAA,CAC1B/d,MAAO,CAAC,EACRpwB,UAAW,CAAC,EACZ4jC,gBAAiB,CAAC,EAClBI,KAAM,CAAC,ICEX,SAASoK,GAAkBl4C,EAAQyN,EAAQvY,GACvC,IAAK,MAAMb,KAAOoZ,EACTpG,GAAcoG,EAAOpZ,KAAUijD,GAAoBjjD,EAAKa,KACzD8K,EAAO3L,GAAOoZ,EAAOpZ,GAGjC,CAQA,SAAS8jD,GAASjjD,EAAO0/C,GACrB,MACM1a,EAAQ,CAAC,EAMf,OAFAge,GAAkBhe,EALAhlC,EAAMglC,OAAS,CAAC,EAKEhlC,GACpCuV,OAAOib,OAAOwU,EAdlB,SAA+B7/B,EAAwBu6C,GAAa,IAApC,kBAAExsB,GAAmB/tB,EACjD,OAAO65C,EAAAA,GAAAA,UAAQ,KACX,MAAMr/C,EDfgB,CAC1BqlC,MAAO,CAAC,EACRpwB,UAAW,CAAC,EACZ4jC,gBAAiB,CAAC,EAClBI,KAAM,CAAC,GCaH,OADA4J,GAAgB7iD,EAAO+/C,EAAaxsB,GAC7B3d,OAAOib,OAAO,CAAC,EAAG7wB,EAAMi5C,KAAMj5C,EAAMqlC,MAAM,GAClD,CAAC0a,GACR,CAQyBwD,CAAuBljD,EAAO0/C,IAC5C1a,CACX,CACA,SAASme,GAAanjD,EAAO0/C,GAEzB,MAAM0D,EAAY,CAAC,EACbpe,EAAQie,GAASjjD,EAAO0/C,GAoB9B,OAnBI1/C,EAAM0hC,OAA+B,IAAvB1hC,EAAMqlC,eAEpB+d,EAAUC,WAAY,EAEtBre,EAAMse,WACFte,EAAMue,iBACFve,EAAMwe,mBACF,OAEZxe,EAAMye,aACa,IAAfzjD,EAAM0hC,KACA,OACA,QAAsB,MAAf1hC,EAAM0hC,KAAe,IAAM,WAEzB5kC,IAAnBkD,EAAMoO,WACLpO,EAAM0jD,OAAS1jD,EAAM2jD,YAAc3jD,EAAMy5B,YAC1C2pB,EAAUh1C,SAAW,GAEzBg1C,EAAUpe,MAAQA,EACXoe,CACX,CChDA,MAAMQ,GAAmB,IAAIllD,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASmlD,GAAkB1kD,GACvB,OAAQA,EAAIkW,WAAW,UAClBlW,EAAIkW,WAAW,SAAmB,cAARlW,GAC3BA,EAAIkW,WAAW,WACflW,EAAIkW,WAAW,UACflW,EAAIkW,WAAW,UACflW,EAAIkW,WAAW,aACfuuC,GAAiBxkD,IAAID,EAC7B,CCpDA,IAAI2kD,GAAiB3kD,IAAS0kD,GAAkB1kD,GAoBhD,KAnBiC4kD,GAyBLC,QAAQ,0BAA0BjvC,WArB1D+uC,GAAiB3kD,GAAQA,EAAIkW,WAAW,OAASwuC,GAAkB1kD,GAAO4kD,GAAY5kD,GAsB1F,CACA,MAAO+E,IACH,CA5BJ,IAAiC6/C,GCCjC,MAAME,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAejd,GACpB,MAKqB,kBAAdA,IAIHA,EAAUxoB,SAAS,SAOvBwlC,GAAqBhoD,QAAQgrC,IAAc,GAIvC,SAASzyB,KAAKyyB,GAItB,CCzBA,MAAMkd,GAAW,CACbt1B,OAAQ,oBACRu1B,MAAO,oBAELC,GAAY,CACdx1B,OAAQ,mBACRu1B,MAAO,mBCNX,SAASrf,GAAWrhB,EAAQmL,EAAQjS,GAChC,MAAyB,kBAAX8G,EACRA,EACAzM,GAAGrC,UAAUia,EAASjS,EAAO8G,EACvC,CCCA,SAAS4gC,GAAc3kD,EAAKwF,EAEfo/C,EAAUrxB,GAAmB,IAFZ,MAAEsxB,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAEpoC,EAAO,QAAEC,EAAO,WAAEooC,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElH13B,GAAQhoB,EAMP,GALAq9C,GAAgB7iD,EAAOwtB,EAAQ+F,GAK3BqxB,EAIA,YAHI5kD,EAAMqlC,MAAM8f,UACZnlD,EAAMolD,MAAMD,QAAUnlD,EAAMqlC,MAAM8f,UAI1CnlD,EAAMolD,MAAQplD,EAAMqlC,MACpBrlC,EAAMqlC,MAAQ,CAAC,EACf,MAAM,MAAE+f,EAAK,MAAE/f,EAAK,WAAEggB,GAAerlD,EAKjColD,EAAMnwC,YACFowC,IACAhgB,EAAMpwB,UAAYmwC,EAAMnwC,kBACrBmwC,EAAMnwC,WAGbowC,SACaloD,IAAZwf,QAAqCxf,IAAZyf,GAAyByoB,EAAMpwB,aACzDowB,EAAMwT,gBDzBd,SAAgCwM,EAAY1oC,EAASC,GAGjD,MAAO,GAFWwoB,GAAWzoB,EAAS0oC,EAAW17C,EAAG07C,EAAW5qC,UAC7C2qB,GAAWxoB,EAASyoC,EAAWz7C,EAAGy7C,EAAW1qC,SAEnE,CCqBgC2qC,CAAuBD,OAAwBloD,IAAZwf,EAAwBA,EAAU,QAAiBxf,IAAZyf,EAAwBA,EAAU,UAG1Hzf,IAAV0nD,IACAO,EAAMz7C,EAAIk7C,QACA1nD,IAAV2nD,IACAM,EAAMx7C,EAAIk7C,QACI3nD,IAAd4nD,IACAK,EAAMjwC,MAAQ4vC,QAEC5nD,IAAf6nD,GF7BR,SAAsBI,EAAOhnD,GAAqD,IAA7CmnD,EAAOlmD,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAAG6vB,EAAM7vB,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,EAAGmmD,IAAWnmD,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,KAAAA,UAAA,GAErE+lD,EAAMJ,WAAa,EAGnB,MAAM35B,EAAOm6B,EAAchB,GAAWE,GAEtCU,EAAM/5B,EAAK6D,QAAU5X,GAAGrC,WAAWia,GAEnC,MAAM81B,EAAa1tC,GAAGrC,UAAU7W,GAC1B6mD,EAAc3tC,GAAGrC,UAAUswC,GACjCH,EAAM/5B,EAAKo5B,OAAS,GAAGO,KAAcC,GACzC,CEkBQQ,CAAaL,EAAOJ,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMQ,GAAuBA,KAAA,CTDzBrgB,MAAO,CAAC,EACRpwB,UAAW,CAAC,EACZ4jC,gBAAiB,CAAC,EAClBI,KAAM,CAAC,ESAPmM,MAAO,CAAC,ICJNR,GAAYe,GAAuB,kBAARA,GAA0C,QAAtBA,EAAI7yC,cCMzD,SAAS8yC,GAAYvlD,EAAO0/C,EAAa8F,EAAWve,GAChD,MAAMwe,GAAczG,EAAAA,GAAAA,UAAQ,KACxB,MAAMr/C,EFNe,CTDzBqlC,MAAO,CAAC,EACRpwB,UAAW,CAAC,EACZ4jC,gBAAiB,CAAC,EAClBI,KAAM,CAAC,ESAPmM,MAAO,CAAC,GEMJ,OADAT,GAAc3kD,EAAO+/C,EAAa6E,GAAStd,GAAYjnC,EAAMkzB,mBACtD,IACAvzB,EAAMolD,MACT/f,MAAO,IAAKrlC,EAAMqlC,OACrB,GACF,CAAC0a,IACJ,GAAI1/C,EAAMglC,MAAO,CACb,MAAM0gB,EAAY,CAAC,EACnB1C,GAAkB0C,EAAW1lD,EAAMglC,MAAOhlC,GAC1CylD,EAAYzgB,MAAQ,IAAK0gB,KAAcD,EAAYzgB,MACvD,CACA,OAAOygB,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkB5mD,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,IAAAA,UAAA,GAsBvC,MArBkBmiD,CAACla,EAAWjnC,EAAO89B,EAAG34B,EAAoBs5C,KAAa,IAA/B,aAAE7pB,GAAczvB,EACtD,MAGMsgD,GAHiBvB,GAAejd,GAChCse,GACApC,IAC6BnjD,EAAO40B,EAAc6pB,EAAUxX,GAC5D4e,EToBd,SAAqB7lD,EAAO8lD,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM1mD,KAAOa,EAQF,WAARb,GAA4C,kBAAjBa,EAAMJ,SAEjCkkD,GAAc3kD,KACU,IAAvBymD,GAA+B/B,GAAkB1kD,KAChD2mD,IAAUjC,GAAkB1kD,IAE7Ba,EAAiB,WACdb,EAAIkW,WAAW,aACnBwwC,EAAc1mD,GACVa,EAAMb,IAGlB,OAAO0mD,CACX,CS3C8BE,CAAY/lD,EAA4B,kBAAdinC,EAAwB2e,GAClEI,EAAe/e,IAAcgf,GAAAA,SAC7B,IAAKJ,KAAkBJ,EAAa3nB,OACpC,CAAC,GAMD,SAAE2L,GAAazpC,EACfkmD,GAAmBlH,EAAAA,GAAAA,UAAQ,IAAO7sC,GAAcs3B,GAAYA,EAASxqC,MAAQwqC,GAAW,CAACA,IAC/F,OAAOplC,EAAAA,GAAAA,eAAc4iC,EAAW,IACzB+e,EACHvc,SAAUyc,GACZ,CAGV,CCLA,MAAMC,GAAsB9O,GAAW,CAACr3C,EAAOy+C,KAC3C,MAAMhoB,GAAUsS,EAAAA,GAAAA,YAAW4V,IACrBvpB,GAAkB2T,EAAAA,GAAAA,YAAWnD,IAC7BwgB,EAAOA,IAnBjB,SAAkBjhD,EAAgEnF,EAAOy2B,EAASrB,GAAiB,IAAhG,4BAAEixB,EAA2B,kBAAEC,EAAiB,SAAErgC,GAAW9gB,EAC5E,MAAMxF,EAAQ,CACVi1B,aAAc2xB,GAAiBvmD,EAAOy2B,EAASrB,EAAiBixB,GAChE1N,YAAa2N,KAWjB,OATIrgC,IAMAtmB,EAAMigD,QAAWviB,GAAapX,EAAS,CAAEjmB,QAAOG,QAASk9B,KAAa19B,IACtEA,EAAMsmB,SAAYvmB,GAAkBumB,EAASvmB,IAE1CC,CACX,CAIuB6mD,CAAUnP,EAAQr3C,EAAOy2B,EAASrB,GACrD,OAAOqpB,EAAW2H,ICpBtB,SAAqBn3C,GACjB,MAAM6uB,GAAMuiB,EAAAA,GAAAA,QAAO,MAInB,OAHoB,OAAhBviB,EAAI39B,UACJ29B,EAAI39B,QAAU8O,KAEX6uB,EAAI39B,OACf,CDc+BsmD,CAAYL,EAAK,EAEhD,SAASG,GAAiBvmD,EAAOy2B,EAASrB,EAAiBsxB,GACvD,MAAM9mD,EAAS,CAAC,EACV+mD,EAAeD,EAAmB1mD,EAAO,CAAC,GAChD,IAAK,MAAMb,KAAOwnD,EACd/mD,EAAOT,GAAO0qC,GAAmB8c,EAAaxnD,IAElD,IAAI,QAAEu3B,EAAO,QAAEpyB,GAAYtE,EAC3B,MAAM4mD,EAA0BpwB,GAAsBx2B,GAChD6mD,EAAkBjI,GAAc5+C,GAClCy2B,GACAowB,IACCD,IACiB,IAAlB5mD,EAAM8+C,eACUhiD,IAAZ45B,IACAA,EAAUD,EAAQC,cACN55B,IAAZwH,IACAA,EAAUmyB,EAAQnyB,UAE1B,IAAIwiD,IAA4B1xB,IACE,IAA5BA,EAAgBsB,QAEtBowB,EAA4BA,IAAyC,IAAZpwB,EACzD,MAAMqwB,EAAeD,EAA4BxiD,EAAUoyB,EAC3D,GAAIqwB,GACwB,mBAAjBA,IACNznD,EAAoBynD,GAAe,CACpC,MAAMC,EAAOrjD,MAAMC,QAAQmjD,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAI/oD,EAAI,EAAGA,EAAIgpD,EAAKjpD,OAAQC,IAAK,CAClC,MAAM8kB,EAAW/iB,EAAwBC,EAAOgnD,EAAKhpD,IACrD,GAAI8kB,EAAU,CACV,MAAM,cAAE0R,EAAa,WAAEzxB,KAAe+H,GAAWgY,EACjD,IAAK,MAAM3jB,KAAO2L,EAAQ,CACtB,IAAI+pB,EAAc/pB,EAAO3L,GACzB,GAAIwE,MAAMC,QAAQixB,GAAc,CAQ5BA,EAAcA,EAHAiyB,EACRjyB,EAAY92B,OAAS,EACrB,EAEV,CACoB,OAAhB82B,IACAj1B,EAAOT,GAAO01B,EAEtB,CACA,IAAK,MAAM11B,KAAOq1B,EACd50B,EAAOT,GAAOq1B,EAAcr1B,EAEpC,CACJ,CACJ,CACA,OAAOS,CACX,CElFA,SAASymD,GAA4BrmD,EAAOs6B,EAAW56B,GACnD,IAAIwE,EACJ,MAAM,MAAE8gC,GAAUhlC,EACZinD,EAAY,CAAC,EACnB,IAAK,MAAM9nD,KAAO6lC,GACV7yB,GAAc6yB,EAAM7lC,KACnBm7B,EAAU0K,OACP7yB,GAAcmoB,EAAU0K,MAAM7lC,KAClCijD,GAAoBjjD,EAAKa,SACgIlD,KAAnD,QAApGoH,EAAuB,OAAlBxE,QAA4C,IAAlBA,OAA2B,EAASA,EAAcuS,SAAS9S,UAAyB,IAAP+E,OAAgB,EAASA,EAAGw0B,cAC1IuuB,EAAU9nD,GAAO6lC,EAAM7lC,IAG/B,OAAO8nD,CACX,CCbA,MAAMC,GAAmB,CACrB9F,eAAgB+E,GAAmB,CAC/BE,4BAA2B,GAC3BC,kBAAmBvD,MCP3B,SAASoE,GAAoB9pB,EAAUsb,GACnC,IACIA,EAAYqM,WACoB,oBAArB3nB,EAAS+pB,QACV/pB,EAAS+pB,UACT/pB,EAASjwB,uBACvB,CACA,MAAO5I,GAEHm0C,EAAYqM,WAAa,CACrB17C,EAAG,EACHC,EAAG,EACH6Q,MAAO,EACPE,OAAQ,EAEhB,CACJ,CChBA,SAAS+sC,GAAWr5C,EAAO7I,EAAmByyC,EAAW9V,GAAY,IAAxC,MAAEkD,EAAK,KAAE4T,GAAMzzC,EACxCoQ,OAAOib,OAAOxiB,EAAQg3B,MAAOA,EAAOlD,GAAcA,EAAW6V,oBAAoBC,IAEjF,IAAK,MAAMz4C,KAAOy5C,EACd5qC,EAAQg3B,MAAMsiB,YAAYnoD,EAAKy5C,EAAKz5C,GAE5C,CCHA,MAAMooD,GAAsB,IAAI7oD,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS8oD,GAAUx5C,EAAS2qC,EAAa8O,EAAY3lB,GACjDulB,GAAWr5C,EAAS2qC,OAAa77C,EAAWglC,GAC5C,IAAK,MAAM3iC,KAAOw5C,EAAYoM,MAC1B/2C,EAAQ05C,aAAcH,GAAoBnoD,IAAID,GAA0BA,EAAnBmT,GAAYnT,GAAYw5C,EAAYoM,MAAM5lD,GAEvG,CCLA,SAASknD,GAA4BrmD,EAAOs6B,EAAW56B,GACnD,MAAMunD,EAAYU,GAA8B3nD,EAAOs6B,EAAW56B,GAClE,IAAK,MAAMP,KAAOa,EACd,GAAImS,GAAcnS,EAAMb,KACpBgT,GAAcmoB,EAAUn7B,IAAO,CAI/B8nD,GAHuD,IAArCt1C,GAAmB1V,QAAQkD,GACvC,OAASA,EAAIyoD,OAAO,GAAGnjB,cAAgBtlC,EAAI2F,UAAU,GACrD3F,GACiBa,EAAMb,EACjC,CAEJ,OAAO8nD,CACX,CCNA,MAAMY,GAAc,CAAC,IAAK,IAAK,QAAS,SAAU,KAAM,KAAM,KACxDC,GAAkB,CACpB1G,eAAgB+E,GAAmB,CAC/BE,4BAA6BA,GAC7BC,kBAAmBjB,GACnBp/B,SAAU9gB,IAA+D,IAA9D,MAAEnF,EAAK,UAAEs6B,EAAS,QAAEn6B,EAAO,YAAEw4C,EAAW,aAAE/jB,GAAezvB,EAChE,IAAKhF,EACD,OACJ,IAAIi8B,IAAiBp8B,EAAM0hC,KAC3B,IAAKtF,EACD,IAAK,MAAMj9B,KAAOy1B,EACd,GAAIhjB,GAAexS,IAAID,GAAM,CACzBi9B,GAAe,EACf,KACJ,CAGR,IAAKA,EACD,OACJ,IAAI2rB,GAAgBztB,EACpB,GAAIA,EAKA,IAAK,IAAIt8B,EAAI,EAAGA,EAAI6pD,GAAY9pD,OAAQC,IAAK,CACzC,MAAMmB,EAAM0oD,GAAY7pD,GACpBgC,EAAMb,KACNm7B,EAAUn7B,KACV4oD,GAAe,EAEvB,CAECA,GAELn/C,EAAMZ,MAAK,KACPm/C,GAAoBhnD,EAASw4C,GAC7B/vC,EAAMR,QAAO,KACTk8C,GAAc3L,EAAa/jB,EAAc2vB,GAASpkD,EAAQgO,SAAUnO,EAAMkzB,mBAC1Es0B,GAAUrnD,EAASw4C,EAAY,GACjC,GACJ,KC7Cd,SAASqP,GAA6B9G,EAAmBlB,GACrD,OAAO,SAA+B/Y,GAAmE,IAAxD,mBAAE2e,GAAoB5mD,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAE4mD,oBAAoB,GAW5F,OAAO3E,GAPQ,IAHIiD,GAAejd,GAC5B6gB,GACAZ,GAGFhG,oBACAC,UAAWwE,GAAgBC,GAC3B5F,sBACA/Y,aAGR,CACJ,CCnBA,MAAMghB,GAAuB,CAAE9nD,QAAS,MAClC+nD,GAA2B,CAAE/nD,SAAS,GCM5C,MAAMgoD,GAAa,IAAIhlC,GAAqB1L,GAAOkB,ICR7CyvC,GAAqB,IAAItnB,QCmB/B,MAAMunB,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQFjC,2BAAAA,CAA4BkC,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACAprD,WAAAA,CAAW8H,GAA6G,IAA5G,OAAE+F,EAAM,MAAElL,EAAK,gBAAEo1B,EAAe,oBAAE+qB,EAAmB,sBAAEvnB,EAAqB,YAAE8mB,GAAcv6C,EAAEwE,EAAO3K,UAAAjB,OAAA,QAAAjB,IAAAkC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjH1B,KAAK6C,QAAU,KAIf7C,KAAKmsC,SAAW,IAAI/qC,IAIpBpB,KAAKshD,eAAgB,EACrBthD,KAAKk5B,uBAAwB,EAQ7Bl5B,KAAK03B,mBAAqB,KAM1B13B,KAAKsC,OAAS,IAAIb,IAClBzB,KAAK6jB,iBAAmBA,GAIxB7jB,KAAKwkD,SAAW,CAAC,EAKjBxkD,KAAKorD,mBAAqB,IAAI3pD,IAM9BzB,KAAKqrD,iBAAmB,CAAC,EAIzBrrD,KAAK+R,OAAS,CAAC,EAMf/R,KAAKsrD,uBAAyB,CAAC,EAC/BtrD,KAAKurD,aAAe,IAAMvrD,KAAKI,OAAO,SAAUJ,KAAKs3B,cACrDt3B,KAAK8K,OAAS,KACL9K,KAAK6C,UAEV7C,KAAKwrD,eACLxrD,KAAKyrD,eAAezrD,KAAK6C,QAAS7C,KAAKq7C,YAAar7C,KAAK0C,MAAMglC,MAAO1nC,KAAKwkC,YAAW,EAE1FxkC,KAAK0rD,kBAAoB,EACzB1rD,KAAK4uC,eAAiB,KAClB,MAAM1jC,EAAM3G,EAAK2G,MACblL,KAAK0rD,kBAAoBxgD,IACzBlL,KAAK0rD,kBAAoBxgD,EACzBI,EAAMR,OAAO9K,KAAK8K,QAAQ,GAAO,GACrC,EAEJ,MAAM,aAAEwsB,EAAY,YAAE+jB,EAAW,SAAE1yB,GAAay5B,EAChDpiD,KAAK2oB,SAAWA,EAChB3oB,KAAKs3B,aAAeA,EACpBt3B,KAAK2rD,WAAa,IAAKr0B,GACvBt3B,KAAK4rD,cAAgBlpD,EAAM02B,QAAU,IAAK9B,GAAiB,CAAC,EAC5Dt3B,KAAKq7C,YAAcA,EACnBr7C,KAAK4N,OAASA,EACd5N,KAAK0C,MAAQA,EACb1C,KAAK83B,gBAAkBA,EACvB93B,KAAKmlB,MAAQvX,EAASA,EAAOuX,MAAQ,EAAI,EACzCnlB,KAAK6iD,oBAAsBA,EAC3B7iD,KAAKqM,QAAUA,EACfrM,KAAKs7B,sBAAwB73B,QAAQ63B,GACrCt7B,KAAKk5B,sBAAwBA,GAAsBx2B,GACnD1C,KAAKshD,cAAgBA,GAAc5+C,GAC/B1C,KAAKshD,gBACLthD,KAAKi4B,gBAAkB,IAAI72B,KAE/BpB,KAAKy6B,uBAAyBh3B,QAAQmK,GAAUA,EAAO/K,SAWvD,MAAM,WAAEkS,KAAe82C,GAAwB7rD,KAAK+oD,4BAA4BrmD,EAAO,CAAC,EAAG1C,MAC3F,IAAK,MAAM6B,KAAOgqD,EAAqB,CACnC,MAAMjsD,EAAQisD,EAAoBhqD,QACRrC,IAAtB83B,EAAaz1B,IAAsBgT,GAAcjV,IACjDA,EAAMmC,IAAIu1B,EAAaz1B,IAAM,EAErC,CACJ,CACAi7B,KAAAA,CAAMiD,GACF//B,KAAK6C,QAAUk9B,EACf+qB,GAAmB/oD,IAAIg+B,EAAU//B,MAC7BA,KAAKwkC,aAAexkC,KAAKwkC,WAAWzE,UACpC//B,KAAKwkC,WAAW1H,MAAMiD,GAEtB//B,KAAK4N,QAAU5N,KAAKshD,gBAAkBthD,KAAKk5B,wBAC3Cl5B,KAAK8rD,sBAAwB9rD,KAAK4N,OAAOm+C,gBAAgB/rD,OAE7DA,KAAKsC,OAAOC,SAAQ,CAAC3C,EAAOiC,IAAQ7B,KAAKgsD,kBAAkBnqD,EAAKjC,KAC3DgrD,GAAyB/nD,SC7JtC,WAEI,GADA+nD,GAAyB/nD,SAAU,EAC9B++C,GAEL,GAAI1+C,OAAO+oD,WAAY,CACnB,MAAMC,EAAmBhpD,OAAO+oD,WAAW,4BACrCE,EAA8BA,IAAOxB,GAAqB9nD,QAAUqpD,EAAiB3L,QAC3F2L,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqB9nD,SAAU,CAEvC,CDiJYwpD,GAEJrsD,KAAK03B,mBAC4B,UAA7B13B,KAAK6iD,sBAE8B,WAA7B7iD,KAAK6iD,qBAED8H,GAAqB9nD,SAI/B7C,KAAK4N,QACL5N,KAAK4N,OAAOu+B,SAASjsC,IAAIF,MAC7BA,KAAK4K,OAAO5K,KAAK0C,MAAO1C,KAAK83B,gBACjC,CACAmF,OAAAA,GACIj9B,KAAKwkC,YAAcxkC,KAAKwkC,WAAWvH,UACnC1xB,EAAYvL,KAAKurD,cACjBhgD,EAAYvL,KAAK8K,QACjB9K,KAAKorD,mBAAmB7oD,SAAS+oC,GAAWA,MAC5CtrC,KAAKorD,mBAAmBxqD,QACxBZ,KAAK8rD,uBAAyB9rD,KAAK8rD,wBACnC9rD,KAAK4N,QAAU5N,KAAK4N,OAAOu+B,SAAS9hC,OAAOrK,MAC3C,IAAK,MAAM6B,KAAO7B,KAAK+R,OACnB/R,KAAK+R,OAAOlQ,GAAKjB,QAErB,IAAK,MAAMiB,KAAO7B,KAAKwkD,SAAU,CAC7B,MAAM8H,EAAUtsD,KAAKwkD,SAAS3iD,GAC1ByqD,IACAA,EAAQrvB,UACRqvB,EAAQ7vB,WAAY,EAE5B,CACAz8B,KAAK6C,QAAU,IACnB,CACAmpD,iBAAAA,CAAkBnqD,EAAKjC,GACfI,KAAKorD,mBAAmBtpD,IAAID,IAC5B7B,KAAKorD,mBAAmBzpD,IAAIE,EAA5B7B,GAEJ,MAAMusD,EAAmBj4C,GAAexS,IAAID,GACxC0qD,GAAoBvsD,KAAKwsD,iBACzBxsD,KAAKwsD,kBAET,MAAMC,EAAiB7sD,EAAMoT,GAAG,UAAW05C,IACvC1sD,KAAKs3B,aAAaz1B,GAAO6qD,EACzB1sD,KAAK0C,MAAMimB,UAAYrd,EAAMT,UAAU7K,KAAKurD,cACxCgB,GAAoBvsD,KAAKwkC,aACzBxkC,KAAKwkC,WAAWgN,kBAAmB,EACvC,IAEEmb,EAAwB/sD,EAAMoT,GAAG,gBAAiBhT,KAAK4uC,gBAC7D,IAAIge,EACA1pD,OAAO2pD,wBACPD,EAAkB1pD,OAAO2pD,sBAAsB7sD,KAAM6B,EAAKjC,IAE9DI,KAAKorD,mBAAmBrpD,IAAIF,GAAK,KAC7B4qD,IACAE,IACIC,GACAA,IACAhtD,EAAM6S,OACN7S,EAAM0D,MAAM,GAExB,CACAo1B,gBAAAA,CAAiBo0B,GAIb,OAAK9sD,KAAK6C,SACL7C,KAAK+sD,0BACN/sD,KAAKiG,OAAS6mD,EAAM7mD,KAGjBjG,KAAK+sD,yBAAyB/sD,KAAK6C,QAASiqD,EAAMjqD,SAF9C,CAGf,CACA2gD,cAAAA,GACI,IAAI3hD,EAAM,YACV,IAAKA,KAAOigD,GAAoB,CAC5B,MAAMkL,EAAoBlL,GAAmBjgD,GAC7C,IAAKmrD,EACD,SACJ,MAAM,UAAEjL,EAAWxlB,QAAS0wB,GAAuBD,EAYnD,IARKhtD,KAAKwkD,SAAS3iD,IACforD,GACAlL,EAAU/hD,KAAK0C,SACf1C,KAAKwkD,SAAS3iD,GAAO,IAAIorD,EAAmBjtD,OAK5CA,KAAKwkD,SAAS3iD,GAAM,CACpB,MAAMyqD,EAAUtsD,KAAKwkD,SAAS3iD,GAC1ByqD,EAAQ7vB,UACR6vB,EAAQ1hD,UAGR0hD,EAAQxvB,QACRwvB,EAAQ7vB,WAAY,EAE5B,CACJ,CACJ,CACA+uB,YAAAA,GACIxrD,KAAKktD,MAAMltD,KAAKq7C,YAAar7C,KAAKs3B,aAAct3B,KAAK0C,MACzD,CAMAmkB,kBAAAA,GACI,OAAO7mB,KAAK6C,QACN7C,KAAKmtD,2BAA2BntD,KAAK6C,QAAS7C,KAAK0C,O3FzQ/C,CACdsJ,EAFe,CAASb,IAAK,EAAGxG,IAAK,GAGrCsH,EAHe,CAASd,IAAK,EAAGxG,IAAK,G2F4QrC,CACAyoD,cAAAA,CAAevrD,GACX,OAAO7B,KAAKs3B,aAAaz1B,EAC7B,CACA2uC,cAAAA,CAAe3uC,EAAKjC,GAChBI,KAAKs3B,aAAaz1B,GAAOjC,CAC7B,CAKAgL,MAAAA,CAAOlI,EAAOo1B,IACNp1B,EAAMkzB,mBAAqB51B,KAAK0C,MAAMkzB,oBACtC51B,KAAK4uC,iBAET5uC,KAAKg9B,UAAYh9B,KAAK0C,MACtB1C,KAAK0C,MAAQA,EACb1C,KAAKq9B,oBAAsBr9B,KAAK83B,gBAChC93B,KAAK83B,gBAAkBA,EAIvB,IAAK,IAAIp3B,EAAI,EAAGA,EAAIqqD,GAAkBtqD,OAAQC,IAAK,CAC/C,MAAMmB,EAAMkpD,GAAkBrqD,GAC1BV,KAAKsrD,uBAAuBzpD,KAC5B7B,KAAKsrD,uBAAuBzpD,YACrB7B,KAAKsrD,uBAAuBzpD,IAEvC,MACMwrD,EAAW3qD,EADK,KAAOb,GAEzBwrD,IACArtD,KAAKsrD,uBAAuBzpD,GAAO7B,KAAKgT,GAAGnR,EAAKwrD,GAExD,CACArtD,KAAKqrD,iBEpTb,SAAqC36C,EAAS7K,EAAMuM,GAChD,IAAK,MAAMvQ,KAAOgE,EAAM,CACpB,MAAMynD,EAAYznD,EAAKhE,GACjB0rD,EAAYn7C,EAAKvQ,GACvB,GAAIgT,GAAcy4C,GAKd58C,EAAQkE,SAAS/S,EAAKyrD,QASrB,GAAIz4C,GAAc04C,GAKnB78C,EAAQkE,SAAS/S,EAAKuS,GAAYk5C,EAAW,CAAE76C,MAAO/B,UAErD,GAAI68C,IAAcD,EAMnB,GAAI58C,EAAQgE,SAAS7S,GAAM,CACvB,MAAM2rD,EAAgB98C,EAAQiE,SAAS9S,IACP,IAA5B2rD,EAAcpyB,UACdoyB,EAAc/5C,KAAK65C,GAEbE,EAAch7C,aACpBg7C,EAAczrD,IAAIurD,EAE1B,KACK,CACD,MAAMZ,EAAch8C,EAAQ08C,eAAevrD,GAC3C6O,EAAQkE,SAAS/S,EAAKuS,QAA4B5U,IAAhBktD,EAA4BA,EAAcY,EAAW,CAAE76C,MAAO/B,IACpG,CAER,CAEA,IAAK,MAAM7O,KAAOuQ,OACI5S,IAAdqG,EAAKhE,IACL6O,EAAQ+8C,YAAY5rD,GAE5B,OAAOgE,CACX,CFgQgC6nD,CAA4B1tD,KAAMA,KAAK+oD,4BAA4BrmD,EAAO1C,KAAKg9B,UAAWh9B,MAAOA,KAAKqrD,kBAC1HrrD,KAAK2tD,wBACL3tD,KAAK2tD,yBAET3tD,KAAK2oB,UAAY3oB,KAAK2oB,SAAS3oB,KACnC,CACAgD,QAAAA,GACI,OAAOhD,KAAK0C,KAChB,CAIAkrD,UAAAA,CAAWhyC,GACP,OAAO5b,KAAK0C,MAAMI,SAAW9C,KAAK0C,MAAMI,SAAS8Y,QAAQpc,CAC7D,CAIAu2B,oBAAAA,GACI,OAAO/1B,KAAK0C,MAAM+C,UACtB,CACA2/B,qBAAAA,GACI,OAAOplC,KAAK0C,MAAMi+B,kBACtB,CACAktB,qBAAAA,GACI,OAAO7tD,KAAKshD,cACNthD,KACAA,KAAK4N,OACD5N,KAAK4N,OAAOigD,6BACZruD,CACd,CAIAusD,eAAAA,CAAgBl+C,GACZ,MAAMigD,EAAqB9tD,KAAK6tD,wBAChC,GAAIC,EAGA,OAFAA,EAAmB71B,iBACf61B,EAAmB71B,gBAAgB/3B,IAAI2N,GACpC,IAAMigD,EAAmB71B,gBAAgB5tB,OAAOwD,EAE/D,CAIA+G,QAAAA,CAAS/S,EAAKjC,GAEV,MAAM4tD,EAAgBxtD,KAAKsC,OAAOX,IAAIE,GAClCjC,IAAU4tD,IACNA,GACAxtD,KAAKytD,YAAY5rD,GACrB7B,KAAKgsD,kBAAkBnqD,EAAKjC,GAC5BI,KAAKsC,OAAOP,IAAIF,EAAKjC,GACrBI,KAAKs3B,aAAaz1B,GAAOjC,EAAM+B,MAEvC,CAIA8rD,WAAAA,CAAY5rD,GACR7B,KAAKsC,OAAO+H,OAAOxI,GACnB,MAAMqR,EAAclT,KAAKorD,mBAAmBzpD,IAAIE,GAC5CqR,IACAA,IACAlT,KAAKorD,mBAAmB/gD,OAAOxI,WAE5B7B,KAAKs3B,aAAaz1B,GACzB7B,KAAK+tD,2BAA2BlsD,EAAK7B,KAAKq7C,YAC9C,CAIA3mC,QAAAA,CAAS7S,GACL,OAAO7B,KAAKsC,OAAOR,IAAID,EAC3B,CACA8S,QAAAA,CAAS9S,EAAKia,GACV,GAAI9b,KAAK0C,MAAMJ,QAAUtC,KAAK0C,MAAMJ,OAAOT,GACvC,OAAO7B,KAAK0C,MAAMJ,OAAOT,GAE7B,IAAIjC,EAAQI,KAAKsC,OAAOX,IAAIE,GAK5B,YAJcrC,IAAVI,QAAwCJ,IAAjBsc,IACvBlc,EAAQwU,GAA6B,OAAjB0H,OAAwBtc,EAAYsc,EAAc,CAAErJ,MAAOzS,OAC/EA,KAAK4U,SAAS/S,EAAKjC,IAEhBA,CACX,CAMA0kB,SAAAA,CAAUziB,EAAK2L,GACX,IAAI5G,EACJ,IAAIhH,OAAmCJ,IAA3BQ,KAAKs3B,aAAaz1B,IAAuB7B,KAAK6C,QAEI,QAAvD+D,EAAK5G,KAAKguD,uBAAuBhuD,KAAK0C,MAAOb,UAAyB,IAAP+E,EAAgBA,EAAK5G,KAAKiuD,sBAAsBjuD,KAAK6C,QAAShB,EAAK7B,KAAKqM,SADxIrM,KAAKs3B,aAAaz1B,GF1YTI,MEuZf,YAXczC,IAAVI,GAAiC,OAAVA,IACF,kBAAVA,IACN8kB,GAAkB9kB,IAAUqX,GAAkBrX,IAE/CA,EAAQ+S,WAAW/S,IFhZZqC,EEkZarC,GFlZPirD,GAAW9kC,KAAKH,GAAc3jB,KEkZboZ,GAAQnE,KAAK1J,KAC3C5N,EAAQ2b,GAAkB1Z,EAAK2L,KAEnCxN,KAAKkuD,cAAcrsD,EAAKgT,GAAcjV,GAASA,EAAM+B,MAAQ/B,IAE1DiV,GAAcjV,GAASA,EAAM+B,MAAQ/B,CAChD,CAKAsuD,aAAAA,CAAcrsD,EAAKjC,GACfI,KAAK2rD,WAAW9pD,GAAOjC,CAC3B,CAKA87B,aAAAA,CAAc75B,GACV,IAAI+E,EACJ,MAAM,QAAEwyB,GAAYp5B,KAAK0C,MACzB,IAAIyrD,EACJ,GAAuB,kBAAZ/0B,GAA2C,kBAAZA,EAAsB,CAC5D,MAAMvB,EAAUp1B,EAAwBzC,KAAK0C,MAAO02B,EAAyC,QAA/BxyB,EAAK5G,KAAK83B,uBAAoC,IAAPlxB,OAAgB,EAASA,EAAGhE,QAC7Hi1B,IACAs2B,EAAmBt2B,EAAQh2B,GAEnC,CAIA,GAAIu3B,QAAgC55B,IAArB2uD,EACX,OAAOA,EAMX,MAAM3gD,EAASxN,KAAKguD,uBAAuBhuD,KAAK0C,MAAOb,GACvD,YAAerC,IAAXgO,GAAyBqH,GAAcrH,QAMRhO,IAA5BQ,KAAK4rD,cAAc/pD,SACDrC,IAArB2uD,OACE3uD,EACAQ,KAAK2rD,WAAW9pD,GARX2L,CASf,CACAwF,EAAAA,CAAGC,EAAW3T,GAIV,OAHKU,KAAK+R,OAAOkB,KACbjT,KAAK+R,OAAOkB,GAAa,IAAInT,GAE1BE,KAAK+R,OAAOkB,GAAW/S,IAAIZ,EACtC,CACAc,MAAAA,CAAO6S,GACH,GAAIjT,KAAK+R,OAAOkB,GAAY,SAAAmX,EAAA1oB,UAAAjB,OADXyyC,EAAI,IAAA7sC,MAAA+jB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ4oB,EAAI5oB,EAAA,GAAA5oB,UAAA4oB,GAEjBtqB,KAAK+R,OAAOkB,GAAW7S,UAAU8yC,EACrC,CACJ,EGtdJ,MAAMkb,WAAyBpD,GAC3BjrD,WAAAA,GACIkmB,SAASvkB,WACT1B,KAAK6jB,iBAAmBmC,EAC5B,CACA+mC,wBAAAA,CAAyB1sD,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEguD,wBAAwB/tD,GAAS,GAAK,CACnD,CACA0tD,sBAAAA,CAAuBtrD,EAAOb,GAC1B,OAAOa,EAAMglC,MACPhlC,EAAMglC,MAAM7lC,QACZrC,CACV,CACAuuD,0BAAAA,CAA2BlsD,EAAGgG,GAAmB,IAAjB,KAAEyzC,EAAI,MAAE5T,GAAO7/B,SACpCyzC,EAAKz5C,UACL6lC,EAAM7lC,EACjB,CACA8rD,sBAAAA,GACQ3tD,KAAKsuD,oBACLtuD,KAAKsuD,2BACEtuD,KAAKsuD,mBAEhB,MAAM,SAAEniB,GAAansC,KAAK0C,MACtBmS,GAAcs3B,KACdnsC,KAAKsuD,kBAAoBniB,EAASn5B,GAAG,UAAW6c,IACxC7vB,KAAK6C,UACL7C,KAAK6C,QAAQ0rD,YAAc,GAAG1+B,IAClC,IAGZ,EC3BJ,MAAM2+B,WAA0BJ,GAC5BruD,WAAAA,GACIkmB,SAASvkB,WACT1B,KAAKiG,KAAO,OACZjG,KAAKyrD,eAAiB1B,EAC1B,CACAkE,qBAAAA,CAAsBluB,EAAUl+B,GAC5B,GAAIyS,GAAexS,IAAID,GACnB,M9JsDe4sD,EAAC1uB,EAAUnkB,KAClC,MAAM,UAAEtE,EAAY,QAAWmO,iBAAiBsa,GAChD,OAAO3e,GAAwB9J,EAAWsE,EAAK,E8JxDhC6yC,CAAmB1uB,EAAUl+B,GAEnC,CACD,MAAM6sD,GAdQh+C,EAcyBqvB,EAbxC78B,OAAOuiB,iBAAiB/U,IAcjB9Q,GAASilB,GAAkBhjB,GAC3B6sD,EAAchpC,iBAAiB7jB,GAC/B6sD,EAAc7sD,KAAS,EAC7B,MAAwB,kBAAVjC,EAAqBA,EAAM8hB,OAAS9hB,CACtD,CAnBR,IAA0B8Q,CAoBtB,CACAy8C,0BAAAA,CAA2BptB,EAAQl4B,GAA0B,IAAxB,mBAAE84B,GAAoB94B,EACvD,OAAOgf,GAAmBkZ,EAAUY,EACxC,CACAusB,KAAAA,CAAM7R,EAAa/jB,EAAc50B,GAC7BwiD,GAAgB7J,EAAa/jB,EAAc50B,EAAMkzB,kBACrD,CACAmzB,2BAAAA,CAA4BrmD,EAAOs6B,EAAW56B,GAC1C,OAAO2mD,GAA4BrmD,EAAOs6B,EAAW56B,EACzD,ECzBJ,MAAMusD,WAAyBP,GAC3BruD,WAAAA,GACIkmB,SAASvkB,WACT1B,KAAKiG,KAAO,MACZjG,KAAKinD,UAAW,EAChBjnD,KAAKmtD,2BAA6BzuB,GAClC1+B,KAAK4uD,iBAAmB,KAChB5uD,KAAK6C,UAAY7C,KAAKq7C,YAAYqM,YAClCmC,GAAoB7pD,KAAK6C,QAAS7C,KAAKq7C,YAC3C,CAER,CACA2S,sBAAAA,CAAuBtrD,EAAOb,GAC1B,OAAOa,EAAMb,EACjB,CACAosD,qBAAAA,CAAsBluB,EAAUl+B,GAC5B,GAAIyS,GAAexS,IAAID,GAAM,CACzB,MAAMgtD,EAAcxuC,GAAoBxe,GACxC,OAAOgtD,GAAcA,EAAYp3C,SAAe,CACpD,CAEA,OADA5V,EAAOooD,GAAoBnoD,IAAID,GAA0BA,EAAnBmT,GAAYnT,GAC3Ck+B,EAAShvB,aAAalP,EACjC,CACAknD,2BAAAA,CAA4BrmD,EAAOs6B,EAAW56B,GAC1C,OAAO2mD,GAA4BrmD,EAAOs6B,EAAW56B,EACzD,CACAoqD,eAAAA,GACQxsD,KAAK6C,UAAY7C,KAAKq7C,YAAYqM,YAClCp8C,EAAMP,WAAW/K,KAAK4uD,iBAE9B,CACA1B,KAAAA,CAAM7R,EAAa/jB,EAAc50B,GAC7BskD,GAAc3L,EAAa/jB,EAAct3B,KAAKinD,SAAUvkD,EAAMkzB,kBAClE,CACA61B,cAAAA,CAAe1rB,EAAUsb,EAAaf,EAAW9V,GAC7C0lB,GAAUnqB,EAAUsb,EAAaf,EAAW9V,EAChD,CACA1H,KAAAA,CAAMiD,GACF//B,KAAKinD,SAAWA,GAASlnB,EAASlvB,SAClCoV,MAAM6W,MAAMiD,EAChB,EChDJ,MCFM+uB,GAAuBztD,ECIeqpD,GAA6B,IAClErnD,MACA47C,MACA7a,MACA9yB,KFNwBy9C,CAACplB,EAAWt9B,IAChCu6C,GAAejd,GAChB,IAAIglB,GAAiBtiD,GACrB,IAAImiD,GAAkBniD,EAAS,CAC7Bq3C,gBAAiB/Z,IAAcgf,GAAAA,a","sources":["../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-utils/dist/es/warn-once.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const warned = new Set();\nfunction hasWarned(message) {\n    return warned.has(message);\n}\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { hasWarned, warnOnce };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { frame } from '../frameloop/frame.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.5.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing, statsBuffer, activeAnimations } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations } from 'motion-dom';\nimport { SubscriptionManager, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from 'motion-dom';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.5.0\", `Attempting to mix Motion versions ${nextValue.version} with 12.5.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","noop","any","warning","invariant","MotionGlobalConfig","memo","callback","result","undefined","progress","from","to","value","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","a","b","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","Set","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","getVelocity","resolveVariantFromProps","props","definition","custom","current","variants","resolveVariant","getProps","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","animations","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","step","schedule","queue","delete","process","frameData","frameloop","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","microtask","cancelMicrotask","queueMicrotask","clearTime","newTime","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","EventTarget","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","capturePointer","action","actionName","target","Element","pointerId","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","isOutside","isTrusted","rect","getBoundingClientRect","left","top","right","innerWidth","bottom","innerHeight","clientX","clientY","cancelEvent","addEventListener","canAddKeyboardAccessibility","element","useGlobalTarget","HTMLElement","tagName","tabIndex","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","activeAnimations","layout","mainThread","waapi","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","radToDeg","rad","PI","angle","atan2","rebaseAngle","matrix2dParsers","atan","sqrt","matrix3dParsers","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","trim","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","allowFlatten","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","readTransformValue","computedStyle","SVGVisualElement","updateDimensions","defaultType","motion","createDomVisualElement"],"sourceRoot":""}