{"version":3,"file":"static/js/969.4f968aeb.chunk.js","mappings":"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","sources":["store/axios.js","component/loginitems/Signin.jsx"],"sourcesContent":["// axios.js\r\nimport axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:8080/enoverse/auth',\r\n});\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  const userDetails = localStorage.getItem('userDetails');\r\n  if (userDetails) {\r\n    const token = JSON.parse(userDetails).token;\r\n    req.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return req;\r\n});\r\n\r\nexport default API;\r\n\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./signin.css\";\r\nimport video from \"../../images/signinbackvideo.mov\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"../../store/axios\";\r\n\r\nconst SignInForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const videoRef = useRef(null);\r\n  const navigate = useNavigate(); // Initialize the useNavigate hook\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current) {\r\n      videoRef.current.playbackRate = 0.8;\r\n    }\r\n\r\n    setTimeout(() => setLoading(false), 3000); // Simulate loading time\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isForgotPassword) {\r\n      try {\r\n        await axios.put(\"/update-password\", { email });\r\n        swal(\"Reset Password\", `Reset link sent to: ${email}`, \"success\").then(\r\n          () => resetFields()\r\n        );\r\n      } catch (error) {\r\n        swal(\"Error\", error.response?.data?.message || \"Something went wrong\", \"error\");\r\n      }\r\n    } else if (isSignUp) {\r\n      if (password !== confirmPassword) {\r\n        swal(\"Error\", \"Passwords do not match!\", \"error\");\r\n      } else {\r\n        try {\r\n          await axios.post(\"/register\", { name, email, password, confirmPassword });\r\n          swal(\"Success\", `Welcome, ${name}! Your account has been created.`, \"success\").then(\r\n            () => resetFields()\r\n          );\r\n        } catch (error) {\r\n          swal(\"Error\", error.response?.data?.message || \"Something went wrong\", \"error\");\r\n        }\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await axios.post(\"/login\", { email, password });\r\n        swal(\"Success\", `Signed in as ${response.data.user.name}`, \"success\").then(() => {\r\n          resetFields();\r\n          navigate(\"/demo\"); // Redirecting to demo page\r\n        });\r\n      } catch (error) {\r\n        swal(\"Error\", error.response?.data?.message || \"Invalid credentials\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetFields = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n    setName(\"\");\r\n  };\r\n\r\n  const handleForgotPasswordClick = () => {\r\n    setIsForgotPassword(true);\r\n    setIsSignUp(false);\r\n  };\r\n\r\n  const handleBackToSignInClick = () => {\r\n    setIsForgotPassword(false);\r\n    setIsSignUp(false);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    setIsSignUp(true);\r\n    setIsForgotPassword(false);\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const toggleConfirmPasswordVisibility = () => {\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin-form-container\">\r\n      {loading ? (\r\n        <div className=\"loader-container\">\r\n          <div className=\"sci-fi-loader\"></div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <video\r\n            ref={videoRef}\r\n            className=\"background-video\"\r\n            autoPlay\r\n            muted\r\n            loop\r\n          >\r\n            <source src={video} type=\"video/mp4\" />\r\n            Your browser does not support the video tag.\r\n          </video>\r\n          <form onSubmit={handleSubmit} className=\"signin-form\">\r\n            <h2 className=\"signin-heading\">\r\n              {isForgotPassword\r\n                ? \"Reset Password\"\r\n                : isSignUp\r\n                ? \"Sign Up\"\r\n                : \"Sign In\"}\r\n            </h2>\r\n\r\n            {isSignUp && (\r\n              <div className=\"signin-input-box\">\r\n                <i className=\"signin-icon fa fa-user\" aria-hidden=\"true\"></i>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                  className=\"signin-input\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"signin-input-box\">\r\n              <i className=\"signin-icon fa fa-user\" aria-hidden=\"true\"></i>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                className=\"signin-input\"\r\n              />\r\n            </div>\r\n\r\n            {(isSignUp || !isForgotPassword) && (\r\n              <div className=\"signin-input-box\">\r\n                <i\r\n                  className=\"signin-icon fa fa-unlock-alt\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                <input\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                  title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\r\n                  required\r\n                  className=\"signin-input\"\r\n                />\r\n                <i\r\n                  className={`fa ${showPassword ? \"fa-eye-slash\" : \"fa-eye\"}`}\r\n                  onClick={togglePasswordVisibility}\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </div>\r\n            )}\r\n\r\n            {isSignUp && (\r\n              <div className=\"signin-input-box\">\r\n                <i\r\n                  className=\"signin-icon fa fa-unlock-alt\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                <input\r\n                  type={showConfirmPassword ? \"text\" : \"password\"}\r\n                  name=\"confirmPassword\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  required\r\n                  className=\"signin-input\"\r\n                />\r\n                <i\r\n                  className={`fa ${showConfirmPassword ? \"fa-eye-slash\" : \"fa-eye\"}`}\r\n                  onClick={toggleConfirmPasswordVisibility}\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"signin-input-box row justify-content-center\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <button type=\"submit\" className=\"signin-submit-btn\">\r\n                  {isForgotPassword\r\n                    ? \"Reset Password\"\r\n                    : isSignUp\r\n                    ? \"Sign Up\"\r\n                    : \"Login\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-md-12 text-center mt-3\">\r\n                {!isForgotPassword && !isSignUp && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={handleSignUpClick}\r\n                    className=\"signin-submit-btn\"\r\n                  >\r\n                    Sign Up\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-12 text-center\">\r\n                {isForgotPassword ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"signin-forgot-link signin-submit-btn\"\r\n                    onClick={handleBackToSignInClick}\r\n                  >\r\n                    Back to Sign In\r\n                  </button>\r\n                ) : (\r\n                  <Link\r\n                    to=\"#\"\r\n                    className=\"signin-forgot-link\"\r\n                    onClick={handleForgotPasswordClick}\r\n                  >\r\n                    Forgot Password\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n"],"names":["API","axios","create","baseURL","interceptors","request","use","req","userDetails","localStorage","getItem","token","JSON","parse","headers","Authorization","SignInForm","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","name","setName","isForgotPassword","setIsForgotPassword","isSignUp","setIsSignUp","loading","setLoading","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","videoRef","useRef","navigate","useNavigate","useEffect","current","playbackRate","setTimeout","resetFields","_jsx","className","children","_jsxs","_Fragment","ref","autoPlay","muted","loop","src","video","type","onSubmit","async","e","preventDefault","put","swal","then","error","_error$response","_error$response$data","response","data","message","post","_error$response2","_error$response2$data","user","_error$response3","_error$response3$data","placeholder","value","onChange","target","required","pattern","title","onClick","togglePasswordVisibility","toggleConfirmPasswordVisibility","handleSignUpClick","handleBackToSignInClick","Link","to","handleForgotPasswordClick"],"sourceRoot":""}